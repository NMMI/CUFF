C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE INTERRUPTIONS
OBJECT MODULE PLACED IN .\DP8051_Keil_951\Debug\interruptions.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -interruptions.c NOIV LARGE MODDP2 OMF2 VB(1) NOIP INCDIR(.,Generated_Source\PSoC3) FF(3) DB WL(2) PR(.\DP8051_Keil_951\D
                    -ebug/interruptions.lst) CD OT(2,SIZE) OJ(.\DP8051_Keil_951\Debug\interruptions.obj)

line level    source

   1          // ----------------------------------------------------------------------------
   2          // BSD 3-Clause License
   3          
   4          // Copyright (c) 2016, qbrobotics
   5          // Copyright (c) 2017, Centro "E.Piaggio"
   6          // All rights reserved.
   7          
   8          // Redistribution and use in source and binary forms, with or without
   9          // modification, are permitted provided that the following conditions are met:
  10          
  11          // * Redistributions of source code must retain the above copyright notice, this
  12          //   list of conditions and the following disclaimer.
  13          
  14          // * Redistributions in binary form must reproduce the above copyright notice,
  15          //   this list of conditions and the following disclaimer in the documentation
  16          //   and/or other materials provided with the distribution.
  17          
  18          // * Neither the name of the copyright holder nor the names of its
  19          //   contributors may be used to endorse or promote products derived from
  20          //   this software without specific prior written permission.
  21          
  22          // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23          // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  24          // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25          // DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26          // FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27          // DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28          // SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29          // CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30          // OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31          // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32          // POSSIBILITY OF SUCH DAMAGE.
  33          // ----------------------------------------------------------------------------
  34          
  35          /**
  36          * \file         interruptions.c
  37          *
  38          * \brief        Interruption functions are in this file.
  39          * \date         October 01, 2017
  40          * \author       _Centro "E.Piaggio"_
  41          * \copyright    (C) 2012-2016 qbrobotics. All rights reserved.
  42          * \copyright    (C) 2017 Centro "E.Piaggio". All rights reserved.
  43          */
  44          
  45          
  46          //=================================================================     includes
  47          #include <interruptions.h>
  48          #include <command_processing.h>
  49          
  50          #include "globals.h"
  51          #include "utils.h"
  52          
  53          //===================================================================     global
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 2   

  54          
  55          
  56          // PWM vaules needed to obtain 8 Volts given a certain input tension
  57          // Numbers are sperimentally calculated //[index] (milliampere)
  58          CYCODE uint8 pwm_preload_values[29] = {100,    //0 (11500)
  59                                                       100,//83
  60                                                       100,//78
  61                                                        76,
  62                                                        74,
  63                                                        72,    //5 (14000)
  64                                                        70,
  65                                                        68,
  66                                                        67,
  67                                                        65,
  68                                                        64,    //10 (16500)
  69                                                        63,
  70                                                        62,
  71                                                        61,
  72                                                        60,
  73                                                        59,    //15 (19000)
  74                                                        58,
  75                                                        57,
  76                                                        56,
  77                                                        56,
  78                                                        55,    //20 (21500)
  79                                                        54,
  80                                                        54,
  81                                                        53,
  82                                                        52,
  83                                                        52,    //25 (24000)
  84                                                        52,
  85                                                        51,
  86                                                        51};   //28 (25500)
  87          
  88          CYCODE uint8 hitech_pwm_preload_values[36] = {  100,   //0 (8000)
  89                                                          76,
  90                                                          71,
  91                                                          69,
  92                                                          67,
  93                                                          65,     //5 (10500)
  94                                                          63,
  95                                                          61,
  96                                                          60,
  97                                                          58,
  98                                                          57,     //10 (13000)
  99                                                          56,
 100                                                          55,
 101                                                          54,
 102                                                          53,
 103                                                          52,     //15 (15500)
 104                                                          51,
 105                                                          50,
 106                                                          49,
 107                                                          49,
 108                                                          48,     //20 (18000)
 109                                                          47,
 110                                                          47,
 111                                                          46,
 112                                                          45,
 113                                                          45,     //25 (20500)
 114                                                          45,
 115                                                          44,
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 3   

 116                                                          44,
 117                                                          43,
 118                                                          43,     //30 (23000)
 119                                                          43,
 120                                                          43,
 121                                                          42,
 122                                                          42,
 123                                                          42};    //35 (25500)
 124          
 125          CYCODE uint8 hitech_pwm_preload_values_6v[32] = {100,   //0 (6000)
 126                                                            76,
 127                                                            71,
 128                                                            68,
 129                                                            66,
 130                                                            64,   //5 (8750)
 131                                                            62,
 132                                                            60,
 133                                                            58,
 134                                                            56,
 135                                                            54,   //10 (11500)
 136                                                            53,
 137                                                            52,
 138                                                            51,
 139                                                            50,
 140                                                            49,   //15 ()
 141                                                            47,
 142                                                            46,
 143                                                            45,
 144                                                            44,
 145                                                            43,   //20 ()
 146                                                            42,
 147                                                            41,
 148                                                            40,
 149                                                            39,
 150                                                            38,   //25 ()
 151                                                            37,
 152                                                            37,
 153                                                            37,
 154                                                            37,
 155                                                            36};  //30 (24750)
 156          
 157          //==============================================================================
 158          //                                                            WATCHDOG INTERRUPT
 159          //==============================================================================
 160          
 161          CY_ISR(ISR_WATCHDOG_Handler){
 162   1      
 163   1          // Set WDT flag
 164   1          
 165   1          watchdog_flag = TRUE;
 166   1      
 167   1      }
 168          
 169          //==============================================================================
 170          //                                                            RS485 RX INTERRUPT
 171          //==============================================================================
 172          
 173          CY_ISR(ISR_RS485_RX_ExInterrupt) {
 174   1      
 175   1          // Set RS485 flag
 176   1          
 177   1          interrupt_flag = TRUE;
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 4   

 178   1           
 179   1      }
 180          
 181          //==============================================================================
 182          //                                                             INTERRUPT MANAGER
 183          //==============================================================================
 184          // Manage interrupt from RS485 
 185          //==============================================================================
 186          // Processing RS-485 data frame:
 187          //
 188          // - WAIT_START:    Waits for beginning characters;
 189          // - WAIT_ID:       Waits for ID;
 190          // - WAIT_LENGTH:   Data length;
 191          // - RECEIVE:       Receive all bytes;
 192          // - UNLOAD:        Wait for another device end of transmission;
 193          //
 194          //==============================================================================
 195          
 196          void interrupt_manager(){
 197   1      
 198   1          
 199   1          //===========================================     local variables definition
 200   1      
 201   1          static uint8 CYDATA state = WAIT_START;                      // state
 202   1          
 203   1          //------------------------------------------------- local data packet
 204   1          static uint8 CYDATA data_packet_index;
 205   1          static uint8 CYDATA data_packet_length;
 206   1          static uint8 data_packet_buffer[128];                     
 207   1          static uint8 CYDATA rx_queue[3];                    // last 2 bytes received
 208   1          //-------------------------------------------------
 209   1      
 210   1          uint8 CYDATA    rx_data;                            // RS485 UART rx data
 211   1          CYBIT           rx_data_type;                       // my id?
 212   1          uint8 CYDATA    package_count = 0;                     
 213   1      
 214   1          //======================================================     receive routine
 215   1          
 216   1          // Get data until buffer is not empty 
 217   1          
 218   1          while(UART_RS485_GetRxBufferSize() && (package_count < 6)){  
 219   2              // 6 stima di numero massimo di pacchetti che riesco a leggere senza bloccare l'esecuzione del fir
             -mware
 220   2              
 221   2              // Get next char
 222   2              rx_data = UART_RS485_GetChar();
 223   2              
 224   2              switch (state) {
 225   3                  //-----     wait for frame start     -------------------------------
 226   3                  case WAIT_START:
 227   3                  
 228   3                      rx_queue[0] = rx_queue[1];
 229   3                      rx_queue[1] = rx_queue[2];
 230   3                      rx_queue[2] = rx_data;
 231   3                      
 232   3                      // Check for header configuration package
 233   3                      if ((rx_queue[1] == 58) && (rx_queue[2] == 58)) {
 234   4                          rx_queue[0] = 0;
 235   4                          rx_queue[1] = 0;
 236   4                          rx_queue[2] = 0;
 237   4                          state       = WAIT_ID;                    
 238   4                      }else
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 5   

 239   3                          if ((rx_queue[0] == 63) &&      //ASCII - ?
 240   3                              (rx_queue[1] == 13) &&      //ASCII - CR
 241   3                              (rx_queue[2] == 10))        //ASCII - LF)
 242   3                              infoGet(INFO_ALL);
 243   3                      break;
 244   3      
 245   3                  //-----     wait for id     ----------------------------------------
 246   3                  case  WAIT_ID:
 247   3      
 248   3                      // packet is for my ID or is broadcast
 249   3                      if (rx_data == c_mem.id || rx_data == 0 || rx_data == c_mem.hand_ID)
 250   3                          rx_data_type = FALSE;
 251   3                      else                //packet is for others
 252   3                          rx_data_type = TRUE;
 253   3                      
 254   3                      data_packet_length = 0;
 255   3                      state = WAIT_LENGTH;
 256   3                      break;
 257   3      
 258   3                  //-----     wait for length     ------------------------------------
 259   3                  case  WAIT_LENGTH:
 260   3      
 261   3       
 262   3                      data_packet_length = rx_data;
 263   3                      // check validity of pack length
 264   3                      if (data_packet_length <= 1) {
 265   4                          data_packet_length = 0;
 266   4                          state = WAIT_START;
 267   4                      } else if (data_packet_length > 128) {
 268   4                          data_packet_length = 0;
 269   4                          state = WAIT_START;
 270   4                      } else {
 271   4                          data_packet_index = 0;
 272   4                          
 273   4                          if(rx_data_type == FALSE)
 274   4                              state = RECEIVE;          // packet for me or broadcast
 275   4                          else
 276   4                              state = UNLOAD;           // packet for others
 277   4                      }
 278   3                      break;
 279   3      
 280   3                  //-----     receiving     -------------------------------------------
 281   3                  case RECEIVE:
 282   3      
 283   3                      data_packet_buffer[data_packet_index] = rx_data;
 284   3                      data_packet_index++;
 285   3                      
 286   3                      // check end of transmission
 287   3                      if (data_packet_index >= data_packet_length) {
 288   4                          // verify if frame ID corresponded to the device ID
 289   4                          if (rx_data_type == FALSE) {
 290   5                              // copying data from buffer to global packet
 291   5                              memcpy(g_rx.buffer, data_packet_buffer, data_packet_length);
 292   5                              g_rx.length = data_packet_length;
 293   5                              g_rx.ready  = 1;
 294   5                              commProcess();
 295   5                          }
 296   4                          
 297   4                          data_packet_index  = 0;
 298   4                          data_packet_length = 0;
 299   4                          state              = WAIT_START;
 300   4                          package_count++;
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 6   

 301   4                      
 302   4                      }
 303   3                      break;
 304   3      
 305   3                  //-----     other device is receving     ---------------------------
 306   3                  case UNLOAD:
 307   3                      if (!(--data_packet_length)) {
 308   4                          data_packet_index  = 0;
 309   4                          data_packet_length = 0;
 310   4                          RS485_CTS_Write(1);
 311   4                          RS485_CTS_Write(0);
 312   4                          state              = WAIT_START;
 313   4                          package_count++;
 314   4                      }
 315   3                      break;
 316   3              }
 317   2          }
 318   1      }
 319          
 320          //==============================================================================
 321          //                                                            FUNCTION SCHEDULER
 322          //==============================================================================
 323          // Call all the function with the right frequency
 324          //==============================================================================
 325          // Base frequency 1000 Hz
 326          //==============================================================================
 327          
 328          void function_scheduler(void) {
 329   1       
 330   1          static uint16 counter_calibration = DIV_INIT_VALUE;
 331   1          
 332   1          // Start ADC Conversion, SOC = 1
 333   1      
 334   1          timer_value0 = (uint32)MY_TIMER_ReadCounter();
 335   1          
 336   1          ADC_SOC_Write(0x01); 
 337   1          
 338   1          // Check Interrupt 
 339   1      
 340   1          if (interrupt_flag){
 341   2              interrupt_flag = FALSE;
 342   2              interrupt_manager();
 343   2          }
 344   1        
 345   1          //---------------------------------- Get Encoders
 346   1      
 347   1          encoder_reading(0, FALSE); 
 348   1          
 349   1          // Check Interrupt     
 350   1          
 351   1          if (interrupt_flag){
 352   2              interrupt_flag = FALSE;
 353   2              interrupt_manager();
 354   2          }   
 355   1          
 356   1          encoder_reading(1, FALSE);
 357   1          
 358   1          // Check Interrupt 
 359   1          
 360   1          if (interrupt_flag){
 361   2              interrupt_flag = FALSE;
 362   2              interrupt_manager();
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 7   

 363   2          }
 364   1          
 365   1          /*encoder_reading(2, FALSE);
 366   1          
 367   1          // Check Interrupt 
 368   1          
 369   1          if (interrupt_flag){
 370   1              interrupt_flag = FALSE;
 371   1              interrupt_manager();
 372   1          }*/
 373   1      
 374   1          //---------------------------------- Control Motors
 375   1          
 376   1          motor_control(0);
 377   1      
 378   1          // Check Interrupt 
 379   1      
 380   1          if (interrupt_flag){
 381   2              interrupt_flag = FALSE;
 382   2              interrupt_manager();
 383   2          }
 384   1          
 385   1          motor_control(1);
 386   1          
 387   1          // Check Interrupt 
 388   1          
 389   1          if (interrupt_flag){
 390   2              interrupt_flag = FALSE;
 391   2              interrupt_manager();
 392   2          }
 393   1      
 394   1          //---------------------------------- Read conversion buffer - LOCK function
 395   1      
 396   1          analog_read_end();
 397   1      
 398   1          //---------------------------------- Calibration 
 399   1      
 400   1          // Divider 100, freq = 10 Hz
 401   1          /*if (!(calibration_flag == STOP)) {
 402   1              if (counter_calibration == CALIBRATION_DIV) {
 403   1                  calibration();
 404   1                  counter_calibration = 0;
 405   1              }
 406   1              counter_calibration++;
 407   1          }
 408   1          
 409   1          // Check Interrupt 
 410   1          
 411   1          if (interrupt_flag){
 412   1              interrupt_flag = FALSE;
 413   1              interrupt_manager();
 414   1          }*/
 415   1          
 416   1          if (pretensioning_flag == TRUE) {
 417   2             if (counter_calibration == CALIBRATION_DIV) {
 418   3                 pretensioning_process();
 419   3                 counter_calibration = 0;
 420   3             }
 421   2          counter_calibration++;
 422   2          } else {
 423   2              if(cuff_flag_force)
 424   2                  drive_cuff();
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 8   

 425   2                  
 426   2              if (cuff_flag_proprio)
 427   2                  slide_cuff();
 428   2      
 429   2              if (cuff_flag_force_proprio)
 430   2                  force_and_slide_cuff();        
 431   2          }   
 432   1          
 433   1          if (interrupt_flag){
 434   2              interrupt_flag = FALSE;
 435   2              interrupt_manager();
 436   2          }
 437   1              
 438   1         
 439   1          //---------------------------------- Update States
 440   1          
 441   1          // Load k-1 state
 442   1          memcpy( &g_measOld, &g_meas, sizeof(g_meas) );
 443   1          memcpy( &g_refOld, &g_ref, sizeof(g_ref) );
 444   1      
 445   1          // Load k+1 state
 446   1          memcpy( &g_ref, &g_refNew, sizeof(g_ref) );
 447   1      
 448   1          if (interrupt_flag){
 449   2              interrupt_flag = FALSE;
 450   2              interrupt_manager();
 451   2          }
 452   1      
 453   1          //CyDelayUs(100);
 454   1      
 455   1          timer_value = (uint32)MY_TIMER_ReadCounter();
 456   1          MY_TIMER_WriteCounter(5000000);
 457   1      
 458   1      }
 459          
 460          
 461          //==============================================================================
 462          //                                                                MOTORS CONTROL
 463          //==============================================================================
 464          
 465          void motor_control(const uint8 idx) {
 466   1          
 467   1          uint8 CYDATA index = idx;
 468   1       
 469   1          int32 CYDATA curr_ref;
 470   1      
 471   1          int32 CYDATA pwm_input = 0;
 472   1          
 473   1          int32 CYDATA pos_error;
 474   1          int32 CYDATA curr_error;
 475   1          //int32 CYDATA defl_input[NUM_OF_MOTORS];
 476   1          
 477   1          int32 CYDATA k_p = c_mem.k_p;  
 478   1          int32 CYDATA k_i = c_mem.k_i; 
 479   1          int32 CYDATA k_d = c_mem.k_d; 
 480   1      
 481   1          int32 CYDATA k_p_c = c_mem.k_p_c;  
 482   1          int32 CYDATA k_i_c = c_mem.k_i_c; 
 483   1          int32 CYDATA k_d_c = c_mem.k_d_c;   
 484   1      
 485   1          int32 CYDATA k_p_dl = c_mem.k_p_dl;  
 486   1          int32 CYDATA k_i_dl = c_mem.k_i_dl; 
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 9   

 487   1          int32 CYDATA k_d_dl = c_mem.k_d_dl; 
 488   1      
 489   1          int32 CYDATA k_p_c_dl = c_mem.k_p_c_dl;  
 490   1          int32 CYDATA k_i_c_dl = c_mem.k_i_c_dl; 
 491   1          int32 CYDATA k_d_c_dl = c_mem.k_d_c_dl;  
 492   1      
 493   1          // Static Variables
 494   1          
 495   1          static CYBIT dirM0, dirM1;
 496   1          
 497   1          static int32 prev_curr[NUM_OF_MOTORS];
 498   1      
 499   1          static int32 pos_error_sum[NUM_OF_MOTORS];
 500   1          static int32 curr_error_sum[NUM_OF_MOTORS];
 501   1          
 502   1          // check index value
 503   1          if (index >= NUM_OF_MOTORS)
 504   1              return;
 505   1      
 506   1          switch(c_mem.control_mode) {
 507   2              case CONTROL_ANGLE:
 508   2              /*case DEFLECTION_CONTROL:
 509   2              
 510   2                  if(c_mem.control_mode == DEFLECTION_CONTROL){
 511   2                                      //for deflection control the shaft position must be summed to reference
 512   2                      defl_input[index] = (g_ref.pos[index] + g_meas.pos[2]);
 513   2                      pos_error = defl_input[index] - g_meas.pos[index];
 514   2                  }
 515   2                  else 
 516   2                      // position error*/
 517   2                  
 518   2                  pos_error = g_ref.pos[index] - g_meas.pos[index];
 519   2                 
 520   2                  if (interrupt_flag){
 521   3                      interrupt_flag = FALSE;
 522   3                      interrupt_manager();
 523   3                  }
 524   2                  
 525   2                  // error sum for integral
 526   2                  pos_error_sum[index] += pos_error;
 527   2      
 528   2                  //anti wind-up
 529   2                  if (pos_error_sum[index] > POS_INTEGRAL_SAT_LIMIT)
 530   2                      pos_error_sum[index] = POS_INTEGRAL_SAT_LIMIT;
 531   2                  else{
 532   3                      if (pos_error_sum[index] < -POS_INTEGRAL_SAT_LIMIT)
 533   3                          pos_error_sum[index] = -POS_INTEGRAL_SAT_LIMIT;
 534   3                  }
 535   2                    
 536   2                  if (interrupt_flag){
 537   3                      interrupt_flag = FALSE;
 538   3                      interrupt_manager();
 539   3                  }
 540   2                  // pwm_input init
 541   2                  pwm_input = 0;
 542   2                  // Proportional
 543   2                  if (k_p != 0) {
 544   3                          
 545   3                      if ((pos_error > 131072) || (pos_error < -131072))  //if grater than 2^17
 546   3                          pwm_input = (int32)(k_p * (pos_error >> 8)) >> 8;
 547   3                      else
 548   3                          pwm_input = (int32)(k_p * pos_error) >> 16;
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 10  

 549   3                  }
 550   2                  
 551   2                  if (interrupt_flag){
 552   3                      interrupt_flag = FALSE;
 553   3                      interrupt_manager();
 554   3                  }
 555   2                            
 556   2                  // Integral
 557   2                  if (k_i != 0) 
 558   2                      pwm_input += (int32)((k_i >> 6) * pos_error_sum[index]) >> 10;
 559   2                  
 560   2                  // Derivative
 561   2                  if (k_d != 0)
 562   2                      pwm_input += (int32)(k_d * (g_measOld.pos[index] - g_meas.pos[index])) >> 16;
 563   2               
 564   2          
 565   2                  if (interrupt_flag){
 566   3                      interrupt_flag = FALSE;
 567   3                      interrupt_manager();
 568   3                  }
 569   2                   
 570   2                  // Update measure
 571   2                  //prev_pos[index] = g_meas.pos[index];
 572   2      
 573   2                  if (index == 0){
 574   3                      if (pwm_input >= 0)
 575   3                          dirM0 = 1;
 576   3                          //direction |= 0x01;
 577   3                      else
 578   3                          dirM0 = 0;
 579   3                          //direction &= 0xFE;
 580   3                  }else{ // index == 1
 581   3                      if (pwm_input >= 0)
 582   3                          dirM1 = 1;
 583   3                         // direction |= 0x02;
 584   3                      else
 585   3                          dirM1 = 0;
 586   3                          //direction &= 0xFD;
 587   3                  }
 588   2                  
 589   2                  break;
 590   2      
 591   2              case CURR_AND_POS_CONTROL:
 592   2              /*case DEFL_CURRENT_CONTROL:
 593   2      
 594   2                  if(c_mem.control_mode == DEFL_CURRENT_CONTROL){
 595   2                      //for deflection control the shaft position must be summed to reference
 596   2                      defl_input[index] = (g_ref.pos[index] + g_meas.pos[2]);
 597   2                      pos_error = defl_input[index] - g_meas.pos[index];
 598   2                  }
 599   2                  else */
 600   2                  
 601   2                  pos_error = g_ref.pos[index] - g_meas.pos[index];
 602   2      
 603   2                  pos_error_sum[index] += pos_error;
 604   2      
 605   2                  if (interrupt_flag){
 606   3                      interrupt_flag = FALSE;
 607   3                      interrupt_manager();
 608   3                  }
 609   2      
 610   2                  // error_sum saturation
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 11  

 611   2                  if (pos_error_sum[index] > POS_INTEGRAL_SAT_LIMIT)
 612   2                      pos_error_sum[index] = POS_INTEGRAL_SAT_LIMIT;
 613   2                  else{
 614   3                      if (pos_error_sum[index] < -POS_INTEGRAL_SAT_LIMIT)
 615   3                          pos_error_sum[index] = -POS_INTEGRAL_SAT_LIMIT;
 616   3                  }
 617   2                  // ------ position PID control -----
 618   2      
 619   2                  curr_ref = 0;
 620   2      
 621   2                  if (interrupt_flag){
 622   3                      interrupt_flag = FALSE;
 623   3                      interrupt_manager();
 624   3                  }
 625   2      
 626   2                  // Proportional
 627   2                  if (k_p_dl != 0)
 628   2                      curr_ref += (int32)(k_p_dl * pos_error) >> 16;
 629   2      
 630   2                  // Integral
 631   2                  if (k_i_dl != 0)
 632   2                      curr_ref += (int32)(k_i_dl * pos_error_sum[index]) >> 16;
 633   2                  
 634   2                  // Derivative
 635   2                  if (k_d_dl != 0)
 636   2                      curr_ref += (int32)(k_d_dl * (g_measOld.pos[index] - g_meas.pos[index])) >> 16;
 637   2                              
 638   2                  if (interrupt_flag){
 639   3                      interrupt_flag = FALSE;
 640   3                      interrupt_manager();
 641   3                  }
 642   2      
 643   2                  // saturate max current
 644   2                  if (curr_ref > c_mem.current_limit)
 645   2                      curr_ref = c_mem.current_limit;
 646   2                  else {
 647   3                      if (curr_ref < -c_mem.current_limit)
 648   3                          curr_ref = -c_mem.current_limit;
 649   3                  }
 650   2      
 651   2                  if (interrupt_flag){
 652   3                      interrupt_flag = FALSE;
 653   3                      interrupt_manager();
 654   3                  }
 655   2      
 656   2                  // current error
 657   2                  curr_error = curr_ref - g_meas.curr[index];
 658   2      
 659   2                  curr_error_sum[index] += curr_error;
 660   2      
 661   2                  if (curr_error_sum[index] > CURR_INTEGRAL_SAT_LIMIT)
 662   2                      curr_error_sum[index] = CURR_INTEGRAL_SAT_LIMIT;
 663   2                  else{
 664   3                      if (curr_error_sum[index] < -CURR_INTEGRAL_SAT_LIMIT)
 665   3                          curr_error_sum[index] = -CURR_INTEGRAL_SAT_LIMIT;
 666   3                  }
 667   2      
 668   2                  if (interrupt_flag){
 669   3                      interrupt_flag = FALSE;
 670   3                      interrupt_manager();
 671   3                  }
 672   2      
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 12  

 673   2                  // ----- current PID control -----
 674   2      
 675   2                  pwm_input = 0;
 676   2      
 677   2                  // Proportional
 678   2                  if (k_p_c_dl != 0)
 679   2                      pwm_input += (int32)(k_p_c_dl * curr_error) >> 16;
 680   2                  
 681   2                  // Integral
 682   2                  if (k_i_c_dl != 0)
 683   2                      pwm_input += (int32)(k_i_c_dl * curr_error_sum[index]) >> 16;
 684   2                  
 685   2                  // Derivative
 686   2                  if (k_d_c_dl != 0)
 687   2                      pwm_input += (int32)(k_d_c_dl * (prev_curr[index] - g_meas.curr[index])) >> 16;
 688   2                  
 689   2                  // Update current
 690   2                  prev_curr[index] = g_meas.curr[index];
 691   2      
 692   2                  if (interrupt_flag){
 693   3                      interrupt_flag = FALSE;
 694   3                      interrupt_manager();
 695   3                  }
 696   2      
 697   2                  if (index == 0){
 698   3                      if (pwm_input >= 0)
 699   3                          dirM0 = 1;
 700   3                          //direction |= 0x01;
 701   3                      else
 702   3                          dirM0 = 0;
 703   3                          //direction &= 0xFE;
 704   3                  }else{ // index == 1
 705   3                      if (pwm_input >= 0)
 706   3                          dirM1 = 1;
 707   3                         // direction |= 0x02;
 708   3                      else
 709   3                          dirM1 = 0;
 710   3                          //direction &= 0xFD;
 711   3                  }
 712   2      
 713   2                  break;
 714   2      
 715   2              case CONTROL_CURRENT:
 716   2      
 717   2                  // Current ref from pos ref
 718   2                  curr_ref = g_ref.pos[index] >> g_mem.res[index];
 719   2      
 720   2                  // saturate max current
 721   2                  if (curr_ref > c_mem.current_limit)
 722   2                      curr_ref = c_mem.current_limit;
 723   2                  
 724   2                  // Current error
 725   2                  curr_error = abs(curr_ref) - g_meas.curr[index];
 726   2      
 727   2                  // Error sum for integral
 728   2                  curr_error_sum[index] += curr_error;
 729   2      
 730   2                  //anti wind-up
 731   2                  if (curr_error_sum[index] > CURR_INTEGRAL_SAT_LIMIT)
 732   2                      curr_error_sum[index] = CURR_INTEGRAL_SAT_LIMIT;
 733   2                  else{
 734   3                      if (curr_error_sum[index] < 0)
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 13  

 735   3                          curr_error_sum[index] = 0;
 736   3                  }
 737   2      
 738   2                  // pwm_input init
 739   2                  pwm_input = 0;
 740   2      
 741   2                  // Proportional
 742   2                  if (k_p_c != 0)
 743   2                      pwm_input += (int32)(k_p * curr_error) >> 16;
 744   2      
 745   2      
 746   2                  // Integral
 747   2                  if (k_i_c != 0)
 748   2                      pwm_input += (int32)(k_i_c * (curr_error_sum[index] >> 6)) >> 10;
 749   2                  
 750   2                  // Derivative
 751   2                  if (k_d_c != 0)
 752   2                      pwm_input += (int32)(k_d_c * (prev_curr[index] - g_meas.curr[index])) >> 16;
 753   2      
 754   2                  // Saturate pwm_input
 755   2                  if (pwm_input < 0)
 756   2                      pwm_input = 0;
 757   2      
 758   2                  // Update measure
 759   2                  prev_curr[index] = g_meas.curr[index];
 760   2                  
 761   2                  if (index == 0){
 762   3                      if (pwm_input >= 0)
 763   3                          dirM0 = 1;
 764   3                          //direction |= 0x01;
 765   3                      else
 766   3                          dirM0 = 0;
 767   3                          //direction &= 0xFE;
 768   3                  }else{ // index == 1
 769   3                      if (pwm_input >= 0)
 770   3                          dirM1 = 1;
 771   3                         // direction |= 0x02;
 772   3                      else
 773   3                          dirM1 = 0;
 774   3                          //direction &= 0xFD;
 775   3                  }
 776   2                  
 777   2                  break;
 778   2      
 779   2              case CONTROL_PWM:
 780   2                  // Direct PWM value
 781   2                  pwm_input = g_ref.pos[index] >> g_mem.res[index];
 782   2      
 783   2                  if (index == 0){
 784   3                      if (pwm_input >= 0)
 785   3                          dirM0 = 1;
 786   3                          //direction |= 0x01;
 787   3                      else
 788   3                          dirM0 = 0;
 789   3                          //direction &= 0xFE;
 790   3                  }else{ // index == 1
 791   3                      if (pwm_input >= 0)
 792   3                          dirM1 = 1;
 793   3                         // direction |= 0x02;
 794   3                      else
 795   3                          dirM1 = 0;
 796   3                          //direction &= 0xFD;
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 14  

 797   3                  }
 798   2      
 799   2                  break;
 800   2      
 801   2              default:
 802   2                  break;
 803   2          }
 804   1          
 805   1          if (interrupt_flag){
 806   2              interrupt_flag = FALSE;
 807   2              interrupt_manager();
 808   2          }
 809   1              
 810   1          // abs(pwm_input) must be lower or equal to PWM_MAX_VALUE
 811   1          if(pwm_input >  PWM_MAX_VALUE) 
 812   1              pwm_input =  PWM_MAX_VALUE;
 813   1          if(pwm_input < -PWM_MAX_VALUE) 
 814   1              pwm_input = -PWM_MAX_VALUE;
 815   1          
 816   1          if (interrupt_flag){
 817   2              interrupt_flag = FALSE;
 818   2              interrupt_manager();
 819   2          }   
 820   1      
 821   1          // remap pwm_input on pwm_limit based on input tension to have maximum 8 volts
 822   1          if (c_mem.control_mode != CONTROL_PWM)
 823   1              pwm_input = (((pwm_input << 10) / PWM_MAX_VALUE) * dev_pwm_limit) >> 10;
 824   1      
 825   1          // drive direction and pwm duty cycle
 826   1              
 827   1          if (dirM0){
 828   2              if (dirM1)
 829   2                  MOTOR_DIR_Write(0x03);
 830   2              else
 831   2                  MOTOR_DIR_Write(0x01);
 832   2          }
 833   1          else{
 834   2              if (dirM1)
 835   2                  MOTOR_DIR_Write(0x02);
 836   2              else
 837   2                  MOTOR_DIR_Write(0x00);
 838   2          }
 839   1      
 840   1          if (interrupt_flag){
 841   2              interrupt_flag = FALSE;
 842   2              interrupt_manager();
 843   2          }
 844   1          
 845   1          if (index == 0) {
 846   2              pwm_sign[0] = SIGN(pwm_input);
 847   2              PWM_MOTORS_WriteCompare1(abs(pwm_input));
 848   2          }
 849   1          else {// index == 1
 850   2              pwm_sign[1] = SIGN(pwm_input);
 851   2              PWM_MOTORS_WriteCompare2(abs(pwm_input));
 852   2          }
 853   1          
 854   1          if (interrupt_flag){
 855   2              interrupt_flag = FALSE;
 856   2              interrupt_manager();
 857   2          }
 858   1      }
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 15  

 859          
 860          //==============================================================================
 861          //                                                           ANALOG MEASUREMENTS
 862          //==============================================================================
 863          
 864          void analog_read_end() {
 865   1             
 866   1          /* =========================================================================
 867   1          /   Ideal formulation to calculate tension and current
 868   1          /
 869   1          /   tension = ((read_value_mV - offset) * 101) / gain -> [mV]
 870   1          /   current = ((read_value_mV - offset) * 375) / (gain * resistor) -> [mA]
 871   1          /
 872   1          /   Definition:
 873   1          /   read_value_mV = counts_read / 0.819 -> conversion from counts to mV
 874   1          /   offset = 2000 -> hardware amplifier bias in mV
 875   1          /   gain = 8.086 -> amplifier gain
 876   1          /   resistor = 18 -> resistor of voltage divider in KOhm 
 877   1          /
 878   1          /   Real formulation: tradeoff in good performance and accurancy, ADC_buf[] 
 879   1          /   and offset unit of measurment is counts, instead dev_tension and
 880   1          /   g_meas.curr[] are converted in properly unit.
 881   1          /  =========================================================================
 882   1          */
 883   1          
 884   1          // Wait for conversion end
 885   1          while(!ADC_STATUS_Read()){
 886   2              if (interrupt_flag){
 887   3                  interrupt_flag = FALSE;
 888   3                  interrupt_manager();
 889   3              }
 890   2          }
 891   1          
 892   1          // Convert tension read
 893   1          dev_tension = ((int32)(ADC_buf[0] - 1638) * 1952) >> 7;
 894   1          
 895   1          if (interrupt_flag){
 896   2              interrupt_flag = FALSE;
 897   2              interrupt_manager();
 898   2          }
 899   1      
 900   1          // Until there is no valid input tension repeat this measurement
 901   1          
 902   1          if (dev_tension > 0){
 903   2              
 904   2              // Set PWM depends on tension
 905   2              pwm_limit_search();
 906   2              
 907   2              // Check Interrupt 
 908   2          
 909   2              if (interrupt_flag){
 910   3                  interrupt_flag = FALSE;
 911   3                  interrupt_manager();
 912   3              }
 913   2      
 914   2              // Filter and Set currents
 915   2              g_meas.curr[0] = filter_i1((int16) (((int32)(ADC_buf[1] - 1638) * 25771) >> 13) * pwm_sign[0]);
 916   2              
 917   2              // Check Interrupt 
 918   2          
 919   2              if (interrupt_flag){
 920   3                  interrupt_flag = FALSE;
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 16  

 921   3                  interrupt_manager();
 922   3              }
 923   2              g_meas.curr[1] = filter_i2((int16) (((int32)(ADC_buf[2] - 1638) * 25771) >> 13) * pwm_sign[1]);
 924   2              
 925   2              // Check Interrupt 
 926   2          
 927   2              if (interrupt_flag){
 928   3                  interrupt_flag = FALSE;
 929   3                  interrupt_manager();
 930   3              }
 931   2          }
 932   1          else {
 933   2              g_meas.curr[0] = 0;
 934   2              g_meas.curr[1] = 0;
 935   2          }
 936   1      }
 937          
 938          //==============================================================================
 939          //                                                               ENCODER READING
 940          //==============================================================================
 941          
 942          void encoder_reading(const uint8 idx, const uint8 flag)
 943          {
 944   1          uint8 CYDATA index = idx;
 945   1          
 946   1          uint8 jj;
 947   1          
 948   1          uint32 data_encoder;
 949   1          int32 value_encoder;
 950   1          int32 aux;
 951   1      
 952   1          static int32 last_value_encoder[NUM_OF_SENSORS];
 953   1      
 954   1          static uint8 error[NUM_OF_SENSORS];
 955   1          
 956   1          static CYBIT only_first_time = TRUE;
 957   1      
 958   1          // static int32 l_value[NUM_OF_SENSORS];   //last value for vel
 959   1          // static int32 ll_value[NUM_OF_SENSORS];  //last last value for vel
 960   1          // static int32 lll_value[NUM_OF_SENSORS];  //last last last value for vel
 961   1      
 962   1          if (index >= NUM_OF_SENSORS)
 963   1              return;
 964   1          
 965   1          if (reset_last_value_flag) {
 966   2              for (jj = NUM_OF_SENSORS; jj--;) {
 967   3                  last_value_encoder[jj] = 0;
 968   3              }
 969   2              reset_last_value_flag = 0;
 970   2          }
 971   1      
 972   1          //======================================================     reading sensors
 973   1          if (index == 0)
 974   1                  data_encoder = SHIFTREG_ENC_1_ReadData() & 0x3FFFF;
 975   1          else {
 976   2              if (index == 1)
 977   2                  data_encoder = SHIFTREG_ENC_2_ReadData() & 0x3FFFF;
 978   2              else {
 979   3                  if (index == 2)
 980   3                      data_encoder = SHIFTREG_ENC_3_ReadData() & 0x3FFFF;
 981   3                  else // index == 3
 982   3                      data_encoder = SHIFTREG_ENC_4_ReadData() & 0x3FFFF;
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 17  

 983   3              }
 984   2          }    
 985   1      
 986   1          if (check_enc_data(&data_encoder)) {
 987   2              if(flag)    // if the flag is set, save the measurement without offset to initialize cuff's zero p
             -osition
 988   2                  value_encoder = (int16) (32768 - ((data_encoder & 0x3FFC0) >> 2));
 989   2              else
 990   2                  value_encoder = (int16) (32768 - ((data_encoder & 0x3FFC0) >> 2) + g_mem.m_off[index]);  
 991   2      
 992   2              // Initialize last_value_encoder
 993   2              if (only_first_time) {
 994   3                  last_value_encoder[index] = value_encoder;
 995   3                  
 996   3                  if (index == (NUM_OF_SENSORS - 1))
 997   3                      only_first_time = 0;
 998   3              }
 999   2      
1000   2              // Take care of rotations
1001   2              aux = value_encoder - last_value_encoder[index];
1002   2      
1003   2              // ====================== 1 TURN ======================
1004   2              // -32768                    0                    32767 -32768                   0                
             -     32767
1005   2              // |-------------------------|-------------------------|-------------------------|----------------
             ----------|
1006   2              //              |                         |      |           |      |                         |
1007   2              //           -16384                     16383    |           |   -16384                     16383
1008   2              //                                               |           |
1009   2              //                                           24575           -24576
1010   2              //                                               |___________|
1011   2              //                                                   49152
1012   2      
1013   2              // if we are in the right interval, take care of rotation
1014   2              // and update the variable only if the difference between
1015   2              // one measure and another is less than 1/4 of turn
1016   2      
1017   2              // Considering we are sampling at 1kHz, this means that our shaft needs
1018   2              // to go slower than 1/4 turn every ms -> 1 turn every 4ms
1019   2              // equal to 250 turn/s -> 15000 RPM
1020   2      
1021   2              if (aux > 49152)
1022   2                  g_meas.rot[index]--;
1023   2              else{ 
1024   3                  if (aux < -49152)
1025   3                      g_meas.rot[index]++;
1026   3                  else{
1027   4                      if (abs(aux) > 16384) { // if two measure are too far
1028   5                          error[index]++;
1029   5                          if (error[index] < 10)
1030   5                              // Discard
1031   5                              return;
1032   5                      }
1033   4                  }
1034   3              }
1035   2              
1036   2              error[index] = 0;
1037   2              
1038   2              last_value_encoder[index] = value_encoder;
1039   2      
1040   2              value_encoder += (int32)g_meas.rot[index] << 16;
1041   2      
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 18  

1042   2              if (c_mem.m_mult[index] != 1.0)
1043   2                  value_encoder *= c_mem.m_mult[index];
1044   2            
1045   2              g_meas.pos[index] = value_encoder;
1046   2          }
1047   1      
1048   1          // // velocity calculation
1049   1          // switch(i) {
1050   1          //     case 0: {
1051   1          //         g_meas.vel[i] = (int16)filter_vel_1((3*value_encoder + l_value[i] - ll_value[i] - 3*lll_val
             -ue[i]) / 10);
1052   1          //         break;
1053   1          //     }
1054   1          //     case 1: {
1055   1          //         g_meas.vel[i] = (int16)filter_vel_2((3*value_encoder + l_value[i] - ll_value[i] - 3*lll_val
             -ue[i]) / 10);
1056   1          //         break;
1057   1          //     }
1058   1          //     case 2: {
1059   1          //         g_meas.vel[i] = (int16)filter_vel_3((3*value_encoder + l_value[i] - ll_value[i] - 3*lll_val
             -ue[i]) / 10);
1060   1          //         break;
1061   1          //     }
1062   1          // }
1063   1      
1064   1          // // update old values
1065   1          // lll_value[i] = ll_value[i];
1066   1          // ll_value[i] = l_value[i];
1067   1          // l_value[i] = value_encoder;
1068   1      }
1069          
1070          /*
1071          //==============================================================================
1072          //                                                          CALIBRATION FUNCTION
1073          //==============================================================================
1074          
1075          void calibration()
1076          {
1077              static int32 old_k_p;
1078              static int32 old_k_i;
1079              static int32 old_k_d;
1080          
1081              static uint8 pause_counter = 0;
1082          
1083              switch(calibration_flag) {
1084                  case START:
1085                      ISR_RS485_RX_Disable();
1086          
1087                      // save old PID values
1088                      old_k_p = c_mem.k_p;
1089                      old_k_i = c_mem.k_i;
1090                      old_k_d = c_mem.k_d;
1091          
1092                      // goto to zero position
1093                      g_refNew.pos[0] = 0;
1094                      g_refNew.pos[1] = 0;
1095          
1096                      // Activate motors
1097                      if (!(g_refNew.onoff & 0x03)) {
1098                          MOTOR_ON_OFF_Write(0x03);
1099                      }
1100          
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 19  

1101                      // wait for motors to reach zero position
1102                      calibration_flag = PAUSE_1;
1103                      break;
1104          
1105                  case PAUSE_1:
1106                      pause_counter++;
1107          
1108                      if (pause_counter == 10) {
1109                          pause_counter = 0;
1110          
1111                          // set new temp values for PID parameters
1112                          c_mem.k_p = 0.1 * 65536;
1113                          c_mem.k_i = 0;
1114                          c_mem.k_d = 0.3 * 65536;
1115          
1116                          calibration_flag = CONTINUE_1;
1117                      }
1118                      break;
1119          
1120                  case CONTINUE_1:
1121                      // increment of 0.5 degree
1122                      g_refNew.pos[0] += 65536 / 720;
1123                      g_refNew.pos[1] -= 65536 / 720;
1124          
1125                      // check if one of the motors reach the threashold
1126                      if ((g_meas.curr[0] > CALIB_CURRENT) || (g_meas.curr[1] > CALIB_CURRENT)) {
1127                          // save current value as MAX_STIFFNESS
1128                          g_mem.max_stiffness = g_ref.pos[0];
1129          
1130                          // reset old values for PID parameters
1131                          c_mem.k_p = old_k_p;
1132                          c_mem.k_i = old_k_i;
1133                          c_mem.k_d = old_k_d;
1134          
1135                          // go back to zero position
1136                          g_refNew.pos[0] = 0;
1137                          g_refNew.pos[1] = 0;
1138          
1139                          // wait for motors to reach zero position
1140                          calibration_flag = PAUSE_2;
1141                      }
1142                      break;
1143          
1144                  case PAUSE_2:
1145                      pause_counter++;
1146          
1147                      if (pause_counter == 10) {
1148                          pause_counter =0;
1149          
1150                          calibration_flag = CONTINUE_2;
1151                      }
1152                      break;
1153          
1154                  case CONTINUE_2:
1155                      // Deactivate motors
1156                      if (!(g_refNew.onoff & 0x03)) {
1157                          MOTOR_ON_OFF_Write(0x00);
1158                      }
1159          
1160                      // store memory to save MAX_STIFFNESS as default value
1161                      memStore(DEFAULT_EEPROM_DISPLACEMENT);
1162                      memStore(0);
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 20  

1163          
1164                      calibration_flag = STOP;
1165          
1166                      ISR_RS485_RX_Enable();
1167                      break;
1168          
1169                  case STOP:
1170                  default:
1171                      break;
1172              }
1173          }*/
1174          
1175          
1176          //==============================================================================
1177          //                                                              PWM_LIMIT_SEARCH
1178          //==============================================================================
1179          
1180          void pwm_limit_search() {
1181   1          
1182   1          uint8  CYDATA index;
1183   1          uint16 CYDATA max_tension = 25500;
1184   1          uint16 CYDATA max_tension_6v_mod = 14750;
1185   1      
1186   1          if(g_mem.power_tension < 8000) {
1187   2              //Mod. 6 Volts
1188   2              if(dev_tension > max_tension_6v_mod)
1189   2                  dev_pwm_limit = 0;
1190   2      
1191   2              else {
1192   3                  if(dev_tension < g_mem.power_tension)
1193   3                      dev_pwm_limit = 100;
1194   3                  else {
1195   4                      index = (uint8)((dev_tension - g_mem.power_tension) >> 9);
1196   4                      dev_pwm_limit = hitech_pwm_preload_values_6v[index];
1197   4                  }
1198   3              }
1199   2          }
1200   1          else {
1201   2              // 8 - 12 volts
1202   2              if (dev_tension > max_tension)    // Max value 
1203   2                  dev_pwm_limit = 0;
1204   2              else{ 
1205   3                  if (dev_tension < g_mem.power_tension) // Min value
1206   3                      dev_pwm_limit = 100;
1207   3                  else {                  
1208   4                      index = (uint8)((dev_tension - 8000) >> 9);
1209   4                      if(g_mem.power_tension < 11500)
1210   4                          dev_pwm_limit = hitech_pwm_preload_values[index];
1211   4                      else
1212   4                          dev_pwm_limit = pwm_preload_values[index];
1213   4                  }
1214   3              }
1215   2          }
1216   1      }
1217          
1218          //==============================================================================
1219          //                                                         PRETENSIONING PROCESS
1220          //==============================================================================
1221          
1222          void pretensioning_process() {
1223   1          
1224   1          static int16 epsilon = 10;
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 21  

1225   1          static uint8 phase = 0;
1226   1          static uint8 phase_counter = 0;
1227   1          int32 aux;
1228   1          uint8 i = 0;
1229   1          
1230   1          switch(phase) {
1231   2              case 0:     // closing
1232   2                      aux = (5 * (220 - g_meas.curr[0])) << g_mem.res[0];
1233   2                      g_refNew.pos[0] = g_refOld.pos[0] - aux;
1234   2                      
1235   2                      aux = (5 * (220 + g_meas.curr[1])) << g_mem.res[1];
1236   2                      g_refNew.pos[1] = g_refOld.pos[1] + aux;
1237   2                                      
1238   2                      if (phase_counter >= 10 && dev_tension <= 0) {
1239   3                          pretensioning_flag = FALSE;
1240   3                          g_refNew.pos[0] = 0;
1241   3                          g_refNew.pos[1] = 0;
1242   3                      }
1243   2                      
1244   2                      phase_counter = phase_counter + 1;
1245   2                                     
1246   2                      if ( (g_meas.curr[0] > 220-epsilon ) && (g_meas.curr[1] < -220+epsilon )){
1247   3                          phase = 1;
1248   3                          phase_counter = 0;
1249   3                          //g_refNew.pos[0] = g_meas.pos[0];
1250   3                          //g_refNew.pos[1] = g_meas.pos[1];
1251   3                      }
1252   2                      break;
1253   2              case 1:     // releasing
1254   2                      
1255   2                      aux = 16 << g_mem.res[0];
1256   2                      g_refNew.pos[0] = g_refOld.pos[0] + aux;
1257   2                      
1258   2                      aux = 16 << g_mem.res[1];
1259   2                      g_refNew.pos[1] = g_refOld.pos[1] - aux;
1260   2                          
1261   2                      if (phase_counter > 80){//((g_meas.curr[0] > -10) && (g_meas.curr[1] < 10)){
1262   3                          pretensioning_flag = FALSE;
1263   3                          pret_done = TRUE;
1264   3                          phase = 0;
1265   3                          reset_last_value_flag = 1;
1266   3                          for (i = 0; i< NUM_OF_SENSORS; i++) {
1267   4                             pret_offset_pos[i] = g_refNew.pos[i];  // con questo omando funziona sicuramente
1268   4                            // encoder_reading(i, TRUE);
1269   4                            // g_mem.m_off[i] = -g_meas.pos[i];
1270   4                            // g_meas.rot[i] = 0;
1271   4                              
1272   4                            // g_refNew.pos[i] = 0;//<<g_mem.res[i];
1273   4                             
1274   4                          }
1275   3                          
1276   3                    //      memStore(0);
1277   3                         
1278   3      
1279   3                          
1280   3                       /*   g_refOld.pos[0] = 0;
1281   3                          g_refOld.pos[1] = 0;
1282   3                          g_ref.pos[0] = 0;
1283   3                          g_ref.pos[1] = 0;
1284   3                          
1285   3                         */
1286   3                      }
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 22  

1287   2                      
1288   2                      phase_counter = phase_counter + 1;
1289   2                      break;
1290   2              default:
1291   2                      break;
1292   2          }    
1293   1      }
1294          
1295          /* [] END OF FILE */
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 23  

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION ISR_WATCHDOG_Handler (BEGIN)
                                           ; SOURCE LINE # 161
                                           ; SOURCE LINE # 165
0000 D200        E     SETB    watchdog_flag
                                           ; SOURCE LINE # 167
0002 32                RETI    
             ; FUNCTION ISR_WATCHDOG_Handler (END)

             ; FUNCTION ISR_RS485_RX_ExInterrupt (BEGIN)
                                           ; SOURCE LINE # 173
                                           ; SOURCE LINE # 177
0000 D200        E     SETB    interrupt_flag
                                           ; SOURCE LINE # 179
0002 32                RETI    
             ; FUNCTION ISR_RS485_RX_ExInterrupt (END)

             ; FUNCTION interrupt_manager (BEGIN)
                                           ; SOURCE LINE # 196
                                           ; SOURCE LINE # 212
0000 750000      R     MOV     package_count,#00H
0003         ?C0003:
                                           ; SOURCE LINE # 218
0003 120000      E     LCALL   UART_RS485_GetRxBufferSize
0006 EF                MOV     A,R7
0007 7003              JNZ     $ + 5H
0009 020000      R     LJMP    ?C0026
000C E500        R     MOV     A,package_count
000E C3                CLR     C
000F 9406              SUBB    A,#06H
0011 4003              JC      $ + 5H
0013 020000      R     LJMP    ?C0026
                                           ; SOURCE LINE # 222
0016 120000      E     LCALL   UART_RS485_GetChar
0019 8F00        R     MOV     rx_data,R7
                                           ; SOURCE LINE # 224
001B E500        R     MOV     A,state
001D 120000      E     LCALL   ?C?CCASE
0020 0000        R     DW      ?C0006
0022 00                DB      00H
0023 0000        R     DW      ?C0010
0025 01                DB      01H
0026 0000        R     DW      ?C0014
0028 02                DB      02H
0029 0000        R     DW      ?C0021
002B 03                DB      03H
002C 0000        R     DW      ?C0024
002E 04                DB      04H
002F 0000              DW      00H
0031 0000        R     DW      ?C0003
                                           ; SOURCE LINE # 226
0033         ?C0006:
                                           ; SOURCE LINE # 228
0033 850000      R     MOV     rx_queue,rx_queue+01H
                                           ; SOURCE LINE # 229
0036 850000      R     MOV     rx_queue+01H,rx_queue+02H
                                           ; SOURCE LINE # 230
0039 850000      R     MOV     rx_queue+02H,rx_data
                                           ; SOURCE LINE # 233
003C E500        R     MOV     A,rx_queue+01H
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 24  

003E B43A13            CJNE    A,#03AH,?C0007
0041 E500        R     MOV     A,rx_queue+02H
0043 B43A0E            CJNE    A,#03AH,?C0007
                                           ; SOURCE LINE # 234
0046 750000      R     MOV     rx_queue,#00H
                                           ; SOURCE LINE # 235
0049 750000      R     MOV     rx_queue+01H,#00H
                                           ; SOURCE LINE # 236
004C 750000      R     MOV     rx_queue+02H,#00H
                                           ; SOURCE LINE # 237
004F 750001      R     MOV     state,#01H
                                           ; SOURCE LINE # 238
0052 80AF              SJMP    ?C0003
0054         ?C0007:
                                           ; SOURCE LINE # 239
0054 E500        R     MOV     A,rx_queue
0056 B43FAA            CJNE    A,#03FH,?C0003
0059 E500        R     MOV     A,rx_queue+01H
005B B40DA5            CJNE    A,#0DH,?C0003
005E E500        R     MOV     A,rx_queue+02H
0060 B40AA0            CJNE    A,#0AH,?C0003
                                           ; SOURCE LINE # 242
0063 7F00              MOV     R7,#00H
0065 7E00              MOV     R6,#00H
0067 120000      E     LCALL   _infoGet
                                           ; SOURCE LINE # 243
006A 8097              SJMP    ?C0003
                                           ; SOURCE LINE # 246
006C         ?C0010:
                                           ; SOURCE LINE # 249
006C 900000      E     MOV     DPTR,#c_mem+01H
006F E0                MOVX    A,@DPTR
0070 FF                MOV     R7,A
0071 E500        R     MOV     A,rx_data
0073 6F                XRL     A,R7
0074 600E              JZ      ?C0012
0076 E500        R     MOV     A,rx_data
0078 600A              JZ      ?C0012
007A 900000      E     MOV     DPTR,#c_mem+078H
007D E0                MOVX    A,@DPTR
007E FF                MOV     R7,A
007F E500        R     MOV     A,rx_data
0081 B50704            CJNE    A,AR7,?C0011
0084         ?C0012:
                                           ; SOURCE LINE # 250
0084 C200        R     CLR     rx_data_type
0086 8002              SJMP    ?C0013
0088         ?C0011:
                                           ; SOURCE LINE # 252
0088 D200        R     SETB    rx_data_type
008A         ?C0013:
                                           ; SOURCE LINE # 254
008A 750000      R     MOV     data_packet_length,#00H
                                           ; SOURCE LINE # 255
008D 750002      R     MOV     state,#02H
                                           ; SOURCE LINE # 256
0090 020000      R     LJMP    ?C0003
                                           ; SOURCE LINE # 259
0093         ?C0014:
                                           ; SOURCE LINE # 262
0093 850000      R     MOV     data_packet_length,rx_data
                                           ; SOURCE LINE # 264
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 25  

0096 E500        R     MOV     A,data_packet_length
0098 D3                SETB    C
0099 9401              SUBB    A,#01H
009B 5009              JNC     ?C0015
                                           ; SOURCE LINE # 265
009D 750000      R     MOV     data_packet_length,#00H
                                           ; SOURCE LINE # 266
00A0 750000      R     MOV     state,#00H
                                           ; SOURCE LINE # 267
00A3 020000      R     LJMP    ?C0003
00A6         ?C0015:
00A6 E500        R     MOV     A,data_packet_length
00A8 D3                SETB    C
00A9 9480              SUBB    A,#080H
00AB 4009              JC      ?C0017
                                           ; SOURCE LINE # 268
00AD 750000      R     MOV     data_packet_length,#00H
                                           ; SOURCE LINE # 269
00B0 750000      R     MOV     state,#00H
                                           ; SOURCE LINE # 270
00B3 020000      R     LJMP    ?C0003
00B6         ?C0017:
                                           ; SOURCE LINE # 271
00B6 750000      R     MOV     data_packet_index,#00H
                                           ; SOURCE LINE # 273
00B9 200006            JB      rx_data_type,?C0019
                                           ; SOURCE LINE # 274
00BC 750003      R     MOV     state,#03H
00BF 020000      R     LJMP    ?C0003
00C2         ?C0019:
                                           ; SOURCE LINE # 276
00C2 750004      R     MOV     state,#04H
                                           ; SOURCE LINE # 277
                                           ; SOURCE LINE # 278
00C5 020000      R     LJMP    ?C0003
                                           ; SOURCE LINE # 281
00C8         ?C0021:
                                           ; SOURCE LINE # 283
00C8 AF00        R     MOV     R7,data_packet_index
00CA 7400        R     MOV     A,#LOW data_packet_buffer
00CC 2F                ADD     A,R7
00CD F582              MOV     DPL,A
00CF E4                CLR     A
00D0 3400        R     ADDC    A,#HIGH data_packet_buffer
00D2 F583              MOV     DPH,A
00D4 E500        R     MOV     A,rx_data
00D6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 284
00D7 0500        R     INC     data_packet_index
                                           ; SOURCE LINE # 287
00D9 E500        R     MOV     A,data_packet_index
00DB C3                CLR     C
00DC 9500        R     SUBB    A,data_packet_length
00DE 5003              JNC     $ + 5H
00E0 020000      R     LJMP    ?C0003
                                           ; SOURCE LINE # 289
00E3 20003A            JB      rx_data_type,?C0023
                                           ; SOURCE LINE # 291
00E6 AF00        R     MOV     R7,data_packet_length
00E8 7E00              MOV     R6,#00H
00EA 7B01              MOV     R3,#01H
00EC 7A00        R     MOV     R2,#HIGH data_packet_buffer
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 26  

00EE 7900        R     MOV     R1,#LOW data_packet_buffer
00F0 C003              PUSH    AR3
00F2 C002              PUSH    AR2
00F4 C001              PUSH    AR1
00F6 7B01              MOV     R3,#01H
00F8 7A00        E     MOV     R2,#HIGH g_rx
00FA 7900        E     MOV     R1,#LOW g_rx
00FC A801              MOV     R0,AR1
00FE AC02              MOV     R4,AR2
0100 AD03              MOV     R5,AR3
0102 D001              POP     AR1
0104 D002              POP     AR2
0106 D003              POP     AR3
0108 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 292
010B AF00        R     MOV     R7,data_packet_length
010D 7E00              MOV     R6,#00H
010F 900000      E     MOV     DPTR,#g_rx+080H
0112 EE                MOV     A,R6
0113 F0                MOVX    @DPTR,A
0114 A3                INC     DPTR
0115 EF                MOV     A,R7
0116 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 293
0117 900000      E     MOV     DPTR,#g_rx+084H
011A 7401              MOV     A,#01H
011C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 294
011D 120000      E     LCALL   commProcess
                                           ; SOURCE LINE # 295
0120         ?C0023:
                                           ; SOURCE LINE # 297
0120 750000      R     MOV     data_packet_index,#00H
                                           ; SOURCE LINE # 298
0123 750000      R     MOV     data_packet_length,#00H
                                           ; SOURCE LINE # 299
0126 750000      R     MOV     state,#00H
                                           ; SOURCE LINE # 300
0129 0500        R     INC     package_count
                                           ; SOURCE LINE # 302
                                           ; SOURCE LINE # 303
012B 020000      R     LJMP    ?C0003
                                           ; SOURCE LINE # 306
012E         ?C0024:
                                           ; SOURCE LINE # 307
012E 1500        R     DEC     data_packet_length
0130 AF00        R     MOV     R7,data_packet_length
0132 EF                MOV     A,R7
0133 6003              JZ      $ + 5H
0135 020000      R     LJMP    ?C0003
                                           ; SOURCE LINE # 308
0138 750000      R     MOV     data_packet_index,#00H
                                           ; SOURCE LINE # 309
013B 750000      R     MOV     data_packet_length,#00H
                                           ; SOURCE LINE # 310
013E 7F01              MOV     R7,#01H
0140 120000      E     LCALL   _RS485_CTS_Write
                                           ; SOURCE LINE # 311
0143 7F00              MOV     R7,#00H
0145 120000      E     LCALL   _RS485_CTS_Write
                                           ; SOURCE LINE # 312
0148 750000      R     MOV     state,#00H
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 27  

                                           ; SOURCE LINE # 313
014B 0500        R     INC     package_count
                                           ; SOURCE LINE # 314
                                           ; SOURCE LINE # 315
014D 020000      R     LJMP    ?C0003
                                           ; SOURCE LINE # 316
                                           ; SOURCE LINE # 317
0150 020000      R     LJMP    ?C0003
                                           ; SOURCE LINE # 318
0153         ?C0026:
0153 22                RET     
             ; FUNCTION interrupt_manager (END)

             ; FUNCTION function_scheduler (BEGIN)
                                           ; SOURCE LINE # 328
                                           ; SOURCE LINE # 334
0000 120000      E     LCALL   MY_TIMER_ReadCounter
0003 900000      E     MOV     DPTR,#timer_value0
0006 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 336
0009 7F01              MOV     R7,#01H
000B 120000      E     LCALL   _ADC_SOC_Write
                                           ; SOURCE LINE # 340
000E 300005            JNB     interrupt_flag,?C0027
                                           ; SOURCE LINE # 341
0011 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 342
0013 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 343
0016         ?C0027:
                                           ; SOURCE LINE # 347
0016 7D00              MOV     R5,#00H
0018 7F00              MOV     R7,#00H
001A 120000      R     LCALL   _encoder_reading
                                           ; SOURCE LINE # 351
001D 300005            JNB     interrupt_flag,?C0028
                                           ; SOURCE LINE # 352
0020 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 353
0022 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 354
0025         ?C0028:
                                           ; SOURCE LINE # 356
0025 7D00              MOV     R5,#00H
0027 7F01              MOV     R7,#01H
0029 120000      R     LCALL   _encoder_reading
                                           ; SOURCE LINE # 360
002C 300005            JNB     interrupt_flag,?C0029
                                           ; SOURCE LINE # 361
002F C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 362
0031 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 363
0034         ?C0029:
                                           ; SOURCE LINE # 376
0034 7F00              MOV     R7,#00H
0036 120000      R     LCALL   _motor_control
                                           ; SOURCE LINE # 380
0039 300005            JNB     interrupt_flag,?C0030
                                           ; SOURCE LINE # 381
003C C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 382
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 28  

003E 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 383
0041         ?C0030:
                                           ; SOURCE LINE # 385
0041 7F01              MOV     R7,#01H
0043 120000      R     LCALL   _motor_control
                                           ; SOURCE LINE # 389
0046 300005            JNB     interrupt_flag,?C0031
                                           ; SOURCE LINE # 390
0049 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 391
004B 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 392
004E         ?C0031:
                                           ; SOURCE LINE # 396
004E 120000      R     LCALL   analog_read_end
                                           ; SOURCE LINE # 416
0051 300025            JNB     pretensioning_flag,?C0032
                                           ; SOURCE LINE # 417
0054 900000      R     MOV     DPTR,#counter_calibration
0057 E0                MOVX    A,@DPTR
0058 FE                MOV     R6,A
0059 A3                INC     DPTR
005A E0                MOVX    A,@DPTR
005B FF                MOV     R7,A
005C EF                MOV     A,R7
005D 6464              XRL     A,#064H
005F 4E                ORL     A,R6
0060 700B              JNZ     ?C0033
                                           ; SOURCE LINE # 418
0062 120000      R     LCALL   pretensioning_process
                                           ; SOURCE LINE # 419
0065 900000      R     MOV     DPTR,#counter_calibration
0068 E4                CLR     A
0069 F0                MOVX    @DPTR,A
006A A3                INC     DPTR
006B E4                CLR     A
006C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 420
006D         ?C0033:
                                           ; SOURCE LINE # 421
006D 900000      R     MOV     DPTR,#counter_calibration
0070 E4                CLR     A
0071 75F001            MOV     B,#01H
0074 120000      E     LCALL   ?C?IILDX
                                           ; SOURCE LINE # 422
0077 8012              SJMP    ?C0034
0079         ?C0032:
                                           ; SOURCE LINE # 423
0079 300003            JNB     cuff_flag_force,?C0035
                                           ; SOURCE LINE # 424
007C 120000      E     LCALL   drive_cuff
007F         ?C0035:
                                           ; SOURCE LINE # 426
007F 300003            JNB     cuff_flag_proprio,?C0036
                                           ; SOURCE LINE # 427
0082 120000      E     LCALL   slide_cuff
0085         ?C0036:
                                           ; SOURCE LINE # 429
0085 300003            JNB     cuff_flag_force_proprio,?C0034
                                           ; SOURCE LINE # 430
0088 120000      E     LCALL   force_and_slide_cuff
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 29  

                                           ; SOURCE LINE # 431
008B         ?C0034:
                                           ; SOURCE LINE # 433
008B 300005            JNB     interrupt_flag,?C0038
                                           ; SOURCE LINE # 434
008E C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 435
0090 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 436
0093         ?C0038:
                                           ; SOURCE LINE # 442
0093 7B01              MOV     R3,#01H
0095 7A00        E     MOV     R2,#HIGH g_meas
0097 7900        E     MOV     R1,#LOW g_meas
0099 C003              PUSH    AR3
009B C002              PUSH    AR2
009D C001              PUSH    AR1
009F 7B01              MOV     R3,#01H
00A1 7A00        E     MOV     R2,#HIGH g_measOld
00A3 7900        E     MOV     R1,#LOW g_measOld
00A5 A801              MOV     R0,AR1
00A7 AC02              MOV     R4,AR2
00A9 AD03              MOV     R5,AR3
00AB D001              POP     AR1
00AD D002              POP     AR2
00AF D003              POP     AR3
00B1 7E00              MOV     R6,#00H
00B3 7F16              MOV     R7,#016H
00B5 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 443
00B8 7B01              MOV     R3,#01H
00BA 7A00        E     MOV     R2,#HIGH g_ref
00BC 7900        E     MOV     R1,#LOW g_ref
00BE C003              PUSH    AR3
00C0 C002              PUSH    AR2
00C2 C001              PUSH    AR1
00C4 7B01              MOV     R3,#01H
00C6 7A00        E     MOV     R2,#HIGH g_refOld
00C8 7900        E     MOV     R1,#LOW g_refOld
00CA A801              MOV     R0,AR1
00CC AC02              MOV     R4,AR2
00CE AD03              MOV     R5,AR3
00D0 D001              POP     AR1
00D2 D002              POP     AR2
00D4 D003              POP     AR3
00D6 7E00              MOV     R6,#00H
00D8 7F09              MOV     R7,#09H
00DA 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 446
00DD 7B01              MOV     R3,#01H
00DF 7A00        E     MOV     R2,#HIGH g_refNew
00E1 7900        E     MOV     R1,#LOW g_refNew
00E3 C003              PUSH    AR3
00E5 C002              PUSH    AR2
00E7 C001              PUSH    AR1
00E9 7B01              MOV     R3,#01H
00EB 7A00        E     MOV     R2,#HIGH g_ref
00ED 7900        E     MOV     R1,#LOW g_ref
00EF A801              MOV     R0,AR1
00F1 AC02              MOV     R4,AR2
00F3 AD03              MOV     R5,AR3
00F5 D001              POP     AR1
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 30  

00F7 D002              POP     AR2
00F9 D003              POP     AR3
00FB 7E00              MOV     R6,#00H
00FD 7F09              MOV     R7,#09H
00FF 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 448
0102 300005            JNB     interrupt_flag,?C0039
                                           ; SOURCE LINE # 449
0105 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 450
0107 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 451
010A         ?C0039:
                                           ; SOURCE LINE # 455
010A 120000      E     LCALL   MY_TIMER_ReadCounter
010D 900000      E     MOV     DPTR,#timer_value
0110 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 456
0113 7F40              MOV     R7,#040H
0115 7E4B              MOV     R6,#04BH
0117 7D4C              MOV     R5,#04CH
0119 7C00              MOV     R4,#00H
011B 120000      E     LCALL   _MY_TIMER_WriteCounter
                                           ; SOURCE LINE # 458
011E 22                RET     
             ; FUNCTION function_scheduler (END)

             ; FUNCTION _motor_control (BEGIN)
                                           ; SOURCE LINE # 465
0000 900000      R     MOV     DPTR,#idx
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 467
0005 900000      R     MOV     DPTR,#idx
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 8F00        R     MOV     index,R7
                                           ; SOURCE LINE # 471
000C 7F00              MOV     R7,#00H
000E 7E00              MOV     R6,#00H
0010 7D00              MOV     R5,#00H
0012 7C00              MOV     R4,#00H
0014 8F00        R     MOV     pwm_input+03H,R7
0016 8E00        R     MOV     pwm_input+02H,R6
0018 8D00        R     MOV     pwm_input+01H,R5
001A 8C00        R     MOV     pwm_input,R4
                                           ; SOURCE LINE # 477
001C 900000      E     MOV     DPTR,#c_mem+02H
001F 120000      E     LCALL   ?C?LLDXDATA
0022 8F00        R     MOV     k_p+03H,R7
0024 8E00        R     MOV     k_p+02H,R6
0026 8D00        R     MOV     k_p+01H,R5
0028 8C00        R     MOV     k_p,R4
                                           ; SOURCE LINE # 478
002A 900000      E     MOV     DPTR,#c_mem+06H
002D 120000      E     LCALL   ?C?LLDXDATA
0030 8F00        R     MOV     k_i+03H,R7
0032 8E00        R     MOV     k_i+02H,R6
0034 8D00        R     MOV     k_i+01H,R5
0036 8C00        R     MOV     k_i,R4
                                           ; SOURCE LINE # 479
0038 900000      E     MOV     DPTR,#c_mem+0AH
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 31  

003B 120000      E     LCALL   ?C?LLDXDATA
003E 8F00        R     MOV     k_d+03H,R7
0040 8E00        R     MOV     k_d+02H,R6
0042 8D00        R     MOV     k_d+01H,R5
0044 8C00        R     MOV     k_d,R4
                                           ; SOURCE LINE # 481
0046 900000      E     MOV     DPTR,#c_mem+0EH
0049 120000      E     LCALL   ?C?LLDXDATA
004C 8F00        R     MOV     k_p_c+03H,R7
004E 8E00        R     MOV     k_p_c+02H,R6
0050 8D00        R     MOV     k_p_c+01H,R5
0052 8C00        R     MOV     k_p_c,R4
                                           ; SOURCE LINE # 482
0054 900000      E     MOV     DPTR,#c_mem+012H
0057 120000      E     LCALL   ?C?LLDXDATA
005A 8F00        R     MOV     k_i_c+03H,R7
005C 8E00        R     MOV     k_i_c+02H,R6
005E 8D00        R     MOV     k_i_c+01H,R5
0060 8C00        R     MOV     k_i_c,R4
                                           ; SOURCE LINE # 483
0062 900000      E     MOV     DPTR,#c_mem+016H
0065 120000      E     LCALL   ?C?LLDXDATA
0068 8F00        R     MOV     k_d_c+03H,R7
006A 8E00        R     MOV     k_d_c+02H,R6
006C 8D00        R     MOV     k_d_c+01H,R5
006E 8C00        R     MOV     k_d_c,R4
                                           ; SOURCE LINE # 485
0070 900000      E     MOV     DPTR,#c_mem+01AH
0073 120000      E     LCALL   ?C?LLDXDATA
0076 8F00        R     MOV     k_p_dl+03H,R7
0078 8E00        R     MOV     k_p_dl+02H,R6
007A 8D00        R     MOV     k_p_dl+01H,R5
007C 8C00        R     MOV     k_p_dl,R4
                                           ; SOURCE LINE # 486
007E 900000      E     MOV     DPTR,#c_mem+01EH
0081 120000      E     LCALL   ?C?LLDXDATA
0084 8F00        R     MOV     k_i_dl+03H,R7
0086 8E00        R     MOV     k_i_dl+02H,R6
0088 8D00        R     MOV     k_i_dl+01H,R5
008A 8C00        R     MOV     k_i_dl,R4
                                           ; SOURCE LINE # 487
008C 900000      E     MOV     DPTR,#c_mem+022H
008F 120000      E     LCALL   ?C?LLDXDATA
0092 8F00        R     MOV     k_d_dl+03H,R7
0094 8E00        R     MOV     k_d_dl+02H,R6
0096 8D00        R     MOV     k_d_dl+01H,R5
0098 8C00        R     MOV     k_d_dl,R4
                                           ; SOURCE LINE # 489
009A 900000      E     MOV     DPTR,#c_mem+026H
009D 120000      E     LCALL   ?C?LLDXDATA
00A0 8F00        R     MOV     k_p_c_dl+03H,R7
00A2 8E00        R     MOV     k_p_c_dl+02H,R6
00A4 8D00        R     MOV     k_p_c_dl+01H,R5
00A6 8C00        R     MOV     k_p_c_dl,R4
                                           ; SOURCE LINE # 490
00A8 900000      E     MOV     DPTR,#c_mem+02AH
00AB 120000      E     LCALL   ?C?LLDXDATA
00AE 8F00        R     MOV     k_i_c_dl+03H,R7
00B0 8E00        R     MOV     k_i_c_dl+02H,R6
00B2 8D00        R     MOV     k_i_c_dl+01H,R5
00B4 8C00        R     MOV     k_i_c_dl,R4
                                           ; SOURCE LINE # 491
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 32  

00B6 900000      E     MOV     DPTR,#c_mem+02EH
00B9 120000      E     LCALL   ?C?LLDXDATA
00BC 8F00        R     MOV     k_d_c_dl+03H,R7
00BE 8E00        R     MOV     k_d_c_dl+02H,R6
00C0 8D00        R     MOV     k_d_c_dl+01H,R5
00C2 8C00        R     MOV     k_d_c_dl,R4
                                           ; SOURCE LINE # 503
00C4 E500        R     MOV     A,index
00C6 C3                CLR     C
00C7 9402              SUBB    A,#02H
00C9 4003              JC      $ + 5H
00CB 020000      R     LJMP    ?C0042
00CE         ?C0041:
                                           ; SOURCE LINE # 506
00CE 900000      E     MOV     DPTR,#c_mem+036H
00D1 E0                MOVX    A,@DPTR
00D2 FF                MOV     R7,A
00D3 EF                MOV     A,R7
00D4 120000      E     LCALL   ?C?CCASE
00D7 0000        R     DW      ?C0044
00D9 00                DB      00H
00DA 0000        R     DW      ?C0107
00DC 01                DB      01H
00DD 0000        R     DW      ?C0092
00DF 02                DB      02H
00E0 0000        R     DW      ?C0064
00E2 03                DB      03H
00E3 0000              DW      00H
00E5 0000        R     DW      ?C0043
                                           ; SOURCE LINE # 507
00E7         ?C0044:
                                           ; SOURCE LINE # 518
00E7 AF00        R     MOV     R7,index
00E9 EF                MOV     A,R7
00EA 25E0              ADD     A,ACC
00EC 25E0              ADD     A,ACC
00EE 2400        E     ADD     A,#LOW g_meas
00F0 F582              MOV     DPL,A
00F2 E4                CLR     A
00F3 3400        E     ADDC    A,#HIGH g_meas
00F5 F583              MOV     DPH,A
00F7 120000      E     LCALL   ?C?LLDXDATA0
00FA AF00        R     MOV     R7,index
00FC EF                MOV     A,R7
00FD 25E0              ADD     A,ACC
00FF 25E0              ADD     A,ACC
0101 2400        E     ADD     A,#LOW g_ref
0103 F582              MOV     DPL,A
0105 E4                CLR     A
0106 3400        E     ADDC    A,#HIGH g_ref
0108 F583              MOV     DPH,A
010A 120000      E     LCALL   ?C?LLDXDATA
010D 120000      E     LCALL   ?C?LSUB
0110 8F00        R     MOV     pos_error+03H,R7
0112 8E00        R     MOV     pos_error+02H,R6
0114 8D00        R     MOV     pos_error+01H,R5
0116 8C00        R     MOV     pos_error,R4
                                           ; SOURCE LINE # 520
0118 300005            JNB     interrupt_flag,?C0045
                                           ; SOURCE LINE # 521
011B C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 522
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 33  

011D 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 523
0120         ?C0045:
                                           ; SOURCE LINE # 526
0120 AF00        R     MOV     R7,index
0122 EF                MOV     A,R7
0123 25E0              ADD     A,ACC
0125 25E0              ADD     A,ACC
0127 2400        R     ADD     A,#LOW pos_error_sum
0129 F582              MOV     DPL,A
012B E4                CLR     A
012C 3400        R     ADDC    A,#HIGH pos_error_sum
012E F583              MOV     DPH,A
0130 C083              PUSH    DPH
0132 C082              PUSH    DPL
0134 120000      E     LCALL   ?C?LLDXDATA
0137 EF                MOV     A,R7
0138 2500        R     ADD     A,pos_error+03H
013A FF                MOV     R7,A
013B EE                MOV     A,R6
013C 3500        R     ADDC    A,pos_error+02H
013E FE                MOV     R6,A
013F ED                MOV     A,R5
0140 3500        R     ADDC    A,pos_error+01H
0142 FD                MOV     R5,A
0143 EC                MOV     A,R4
0144 3500        R     ADDC    A,pos_error
0146 FC                MOV     R4,A
0147 D082              POP     DPL
0149 D083              POP     DPH
014B 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 529
014E AF00        R     MOV     R7,index
0150 EF                MOV     A,R7
0151 25E0              ADD     A,ACC
0153 25E0              ADD     A,ACC
0155 2400        R     ADD     A,#LOW pos_error_sum
0157 F582              MOV     DPL,A
0159 E4                CLR     A
015A 3400        R     ADDC    A,#HIGH pos_error_sum
015C F583              MOV     DPH,A
015E 120000      E     LCALL   ?C?LLDXDATA
0161 7BA0              MOV     R3,#0A0H
0163 7A86              MOV     R2,#086H
0165 7901              MOV     R1,#01H
0167 7800              MOV     R0,#00H
0169 C3                CLR     C
016A 120000      E     LCALL   ?C?SLCMP
016D 501D              JNC     ?C0046
                                           ; SOURCE LINE # 530
016F 7FA0              MOV     R7,#0A0H
0171 7E86              MOV     R6,#086H
0173 7D01              MOV     R5,#01H
0175 7C00              MOV     R4,#00H
0177 AB00        R     MOV     R3,index
0179 EB                MOV     A,R3
017A 25E0              ADD     A,ACC
017C 25E0              ADD     A,ACC
017E 2400        R     ADD     A,#LOW pos_error_sum
0180 F582              MOV     DPL,A
0182 E4                CLR     A
0183 3400        R     ADDC    A,#HIGH pos_error_sum
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 34  

0185 F583              MOV     DPH,A
0187 120000      E     LCALL   ?C?LSTXDATA
018A 803C              SJMP    ?C0047
018C         ?C0046:
                                           ; SOURCE LINE # 531
                                           ; SOURCE LINE # 532
018C AF00        R     MOV     R7,index
018E EF                MOV     A,R7
018F 25E0              ADD     A,ACC
0191 25E0              ADD     A,ACC
0193 2400        R     ADD     A,#LOW pos_error_sum
0195 F582              MOV     DPL,A
0197 E4                CLR     A
0198 3400        R     ADDC    A,#HIGH pos_error_sum
019A F583              MOV     DPH,A
019C 120000      E     LCALL   ?C?LLDXDATA
019F 7B60              MOV     R3,#060H
01A1 7A79              MOV     R2,#079H
01A3 79FE              MOV     R1,#0FEH
01A5 78FF              MOV     R0,#0FFH
01A7 D3                SETB    C
01A8 120000      E     LCALL   ?C?SLCMP
01AB 401B              JC      ?C0047
                                           ; SOURCE LINE # 533
01AD 7F60              MOV     R7,#060H
01AF 7E79              MOV     R6,#079H
01B1 7DFE              MOV     R5,#0FEH
01B3 7CFF              MOV     R4,#0FFH
01B5 AB00        R     MOV     R3,index
01B7 EB                MOV     A,R3
01B8 25E0              ADD     A,ACC
01BA 25E0              ADD     A,ACC
01BC 2400        R     ADD     A,#LOW pos_error_sum
01BE F582              MOV     DPL,A
01C0 E4                CLR     A
01C1 3400        R     ADDC    A,#HIGH pos_error_sum
01C3 F583              MOV     DPH,A
01C5 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 534
01C8         ?C0047:
                                           ; SOURCE LINE # 536
01C8 300005            JNB     interrupt_flag,?C0049
                                           ; SOURCE LINE # 537
01CB C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 538
01CD 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 539
01D0         ?C0049:
                                           ; SOURCE LINE # 541
01D0 7F00              MOV     R7,#00H
01D2 7E00              MOV     R6,#00H
01D4 7D00              MOV     R5,#00H
01D6 7C00              MOV     R4,#00H
01D8 8F00        R     MOV     pwm_input+03H,R7
01DA 8E00        R     MOV     pwm_input+02H,R6
01DC 8D00        R     MOV     pwm_input+01H,R5
01DE 8C00        R     MOV     pwm_input,R4
                                           ; SOURCE LINE # 543
01E0 7F00              MOV     R7,#00H
01E2 7E00              MOV     R6,#00H
01E4 7D00              MOV     R5,#00H
01E6 7C00              MOV     R4,#00H
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 35  

01E8 AB00        R     MOV     R3,k_p+03H
01EA AA00        R     MOV     R2,k_p+02H
01EC A900        R     MOV     R1,k_p+01H
01EE A800        R     MOV     R0,k_p
01F0 C3                CLR     C
01F1 120000      E     LCALL   ?C?SLCMP
01F4 6073              JZ      ?C0050
                                           ; SOURCE LINE # 545
01F6 7F00              MOV     R7,#00H
01F8 7E00              MOV     R6,#00H
01FA 7D02              MOV     R5,#02H
01FC 7C00              MOV     R4,#00H
01FE AB00        R     MOV     R3,pos_error+03H
0200 AA00        R     MOV     R2,pos_error+02H
0202 A900        R     MOV     R1,pos_error+01H
0204 A800        R     MOV     R0,pos_error
0206 D3                SETB    C
0207 120000      E     LCALL   ?C?SLCMP
020A 5016              JNC     ?C0052
020C 7F00              MOV     R7,#00H
020E 7E00              MOV     R6,#00H
0210 7DFE              MOV     R5,#0FEH
0212 7CFF              MOV     R4,#0FFH
0214 AB00        R     MOV     R3,pos_error+03H
0216 AA00        R     MOV     R2,pos_error+02H
0218 A900        R     MOV     R1,pos_error+01H
021A A800        R     MOV     R0,pos_error
021C C3                CLR     C
021D 120000      E     LCALL   ?C?SLCMP
0220 5027              JNC     ?C0051
0222         ?C0052:
                                           ; SOURCE LINE # 546
0222 AF00        R     MOV     R7,pos_error+03H
0224 AE00        R     MOV     R6,pos_error+02H
0226 AD00        R     MOV     R5,pos_error+01H
0228 AC00        R     MOV     R4,pos_error
022A 7808              MOV     R0,#08H
022C 120000      E     LCALL   ?C?SLSHR
022F AB00        R     MOV     R3,k_p+03H
0231 AA00        R     MOV     R2,k_p+02H
0233 A900        R     MOV     R1,k_p+01H
0235 A800        R     MOV     R0,k_p
0237 120000      E     LCALL   ?C?LMUL
023A 7808              MOV     R0,#08H
023C 120000      E     LCALL   ?C?SLSHR
023F 8F00        R     MOV     pwm_input+03H,R7
0241 8E00        R     MOV     pwm_input+02H,R6
0243 8D00        R     MOV     pwm_input+01H,R5
0245 8C00        R     MOV     pwm_input,R4
0247 8020              SJMP    ?C0050
0249         ?C0051:
                                           ; SOURCE LINE # 548
0249 AF00        R     MOV     R7,pos_error+03H
024B AE00        R     MOV     R6,pos_error+02H
024D AD00        R     MOV     R5,pos_error+01H
024F AC00        R     MOV     R4,pos_error
0251 AB00        R     MOV     R3,k_p+03H
0253 AA00        R     MOV     R2,k_p+02H
0255 A900        R     MOV     R1,k_p+01H
0257 A800        R     MOV     R0,k_p
0259 120000      E     LCALL   ?C?LMUL
025C 7810              MOV     R0,#010H
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 36  

025E 120000      E     LCALL   ?C?SLSHR
0261 8F00        R     MOV     pwm_input+03H,R7
0263 8E00        R     MOV     pwm_input+02H,R6
0265 8D00        R     MOV     pwm_input+01H,R5
0267 8C00        R     MOV     pwm_input,R4
                                           ; SOURCE LINE # 549
0269         ?C0050:
                                           ; SOURCE LINE # 551
0269 300005            JNB     interrupt_flag,?C0054
                                           ; SOURCE LINE # 552
026C C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 553
026E 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 554
0271         ?C0054:
                                           ; SOURCE LINE # 557
0271 7F00              MOV     R7,#00H
0273 7E00              MOV     R6,#00H
0275 7D00              MOV     R5,#00H
0277 7C00              MOV     R4,#00H
0279 AB00        R     MOV     R3,k_i+03H
027B AA00        R     MOV     R2,k_i+02H
027D A900        R     MOV     R1,k_i+01H
027F A800        R     MOV     R0,k_i
0281 C3                CLR     C
0282 120000      E     LCALL   ?C?SLCMP
0285 6040              JZ      ?C0055
                                           ; SOURCE LINE # 558
0287 AF00        R     MOV     R7,k_i+03H
0289 AE00        R     MOV     R6,k_i+02H
028B AD00        R     MOV     R5,k_i+01H
028D AC00        R     MOV     R4,k_i
028F 7806              MOV     R0,#06H
0291 120000      E     LCALL   ?C?SLSHR
0294 AB00        R     MOV     R3,index
0296 EB                MOV     A,R3
0297 25E0              ADD     A,ACC
0299 25E0              ADD     A,ACC
029B 2400        R     ADD     A,#LOW pos_error_sum
029D F582              MOV     DPL,A
029F E4                CLR     A
02A0 3400        R     ADDC    A,#HIGH pos_error_sum
02A2 F583              MOV     DPH,A
02A4 120000      E     LCALL   ?C?LLDXDATA0
02A7 120000      E     LCALL   ?C?LMUL
02AA 780A              MOV     R0,#0AH
02AC 120000      E     LCALL   ?C?SLSHR
02AF E500        R     MOV     A,pwm_input+03H
02B1 2F                ADD     A,R7
02B2 FF                MOV     R7,A
02B3 E500        R     MOV     A,pwm_input+02H
02B5 3E                ADDC    A,R6
02B6 FE                MOV     R6,A
02B7 E500        R     MOV     A,pwm_input+01H
02B9 3D                ADDC    A,R5
02BA FD                MOV     R5,A
02BB E500        R     MOV     A,pwm_input
02BD 3C                ADDC    A,R4
02BE FC                MOV     R4,A
02BF 8F00        R     MOV     pwm_input+03H,R7
02C1 8E00        R     MOV     pwm_input+02H,R6
02C3 8D00        R     MOV     pwm_input+01H,R5
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 37  

02C5 8C00        R     MOV     pwm_input,R4
02C7         ?C0055:
                                           ; SOURCE LINE # 561
02C7 7F00              MOV     R7,#00H
02C9 7E00              MOV     R6,#00H
02CB 7D00              MOV     R5,#00H
02CD 7C00              MOV     R4,#00H
02CF AB00        R     MOV     R3,k_d+03H
02D1 AA00        R     MOV     R2,k_d+02H
02D3 A900        R     MOV     R1,k_d+01H
02D5 A800        R     MOV     R0,k_d
02D7 C3                CLR     C
02D8 120000      E     LCALL   ?C?SLCMP
02DB 6051              JZ      ?C0056
                                           ; SOURCE LINE # 562
02DD AF00        R     MOV     R7,index
02DF EF                MOV     A,R7
02E0 25E0              ADD     A,ACC
02E2 25E0              ADD     A,ACC
02E4 2400        E     ADD     A,#LOW g_meas
02E6 F582              MOV     DPL,A
02E8 E4                CLR     A
02E9 3400        E     ADDC    A,#HIGH g_meas
02EB F583              MOV     DPH,A
02ED 120000      E     LCALL   ?C?LLDXDATA0
02F0 AF00        R     MOV     R7,index
02F2 EF                MOV     A,R7
02F3 25E0              ADD     A,ACC
02F5 25E0              ADD     A,ACC
02F7 2400        E     ADD     A,#LOW g_measOld
02F9 F582              MOV     DPL,A
02FB E4                CLR     A
02FC 3400        E     ADDC    A,#HIGH g_measOld
02FE F583              MOV     DPH,A
0300 120000      E     LCALL   ?C?LLDXDATA
0303 120000      E     LCALL   ?C?LSUB
0306 AB00        R     MOV     R3,k_d+03H
0308 AA00        R     MOV     R2,k_d+02H
030A A900        R     MOV     R1,k_d+01H
030C A800        R     MOV     R0,k_d
030E 120000      E     LCALL   ?C?LMUL
0311 7810              MOV     R0,#010H
0313 120000      E     LCALL   ?C?SLSHR
0316 E500        R     MOV     A,pwm_input+03H
0318 2F                ADD     A,R7
0319 FF                MOV     R7,A
031A E500        R     MOV     A,pwm_input+02H
031C 3E                ADDC    A,R6
031D FE                MOV     R6,A
031E E500        R     MOV     A,pwm_input+01H
0320 3D                ADDC    A,R5
0321 FD                MOV     R5,A
0322 E500        R     MOV     A,pwm_input
0324 3C                ADDC    A,R4
0325 FC                MOV     R4,A
0326 8F00        R     MOV     pwm_input+03H,R7
0328 8E00        R     MOV     pwm_input+02H,R6
032A 8D00        R     MOV     pwm_input+01H,R5
032C 8C00        R     MOV     pwm_input,R4
032E         ?C0056:
                                           ; SOURCE LINE # 565
032E 300005            JNB     interrupt_flag,?C0057
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 38  

                                           ; SOURCE LINE # 566
0331 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 567
0333 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 568
0336         ?C0057:
                                           ; SOURCE LINE # 573
0336 E500        R     MOV     A,index
0338 7020              JNZ     ?C0058
                                           ; SOURCE LINE # 574
033A 7F00              MOV     R7,#00H
033C 7E00              MOV     R6,#00H
033E 7D00              MOV     R5,#00H
0340 7C00              MOV     R4,#00H
0342 AB00        R     MOV     R3,pwm_input+03H
0344 AA00        R     MOV     R2,pwm_input+02H
0346 A900        R     MOV     R1,pwm_input+01H
0348 A800        R     MOV     R0,pwm_input
034A C3                CLR     C
034B 120000      E     LCALL   ?C?SLCMP
034E 4005              JC      ?C0059
                                           ; SOURCE LINE # 575
0350 D200        R     SETB    dirM0
0352 020000      R     LJMP    ?C0043
0355         ?C0059:
                                           ; SOURCE LINE # 578
0355 C200        R     CLR     dirM0
                                           ; SOURCE LINE # 580
0357 020000      R     LJMP    ?C0043
035A         ?C0058:
                                           ; SOURCE LINE # 581
035A 7F00              MOV     R7,#00H
035C 7E00              MOV     R6,#00H
035E 7D00              MOV     R5,#00H
0360 7C00              MOV     R4,#00H
0362 AB00        R     MOV     R3,pwm_input+03H
0364 AA00        R     MOV     R2,pwm_input+02H
0366 A900        R     MOV     R1,pwm_input+01H
0368 A800        R     MOV     R0,pwm_input
036A C3                CLR     C
036B 120000      E     LCALL   ?C?SLCMP
036E 4005              JC      ?C0062
                                           ; SOURCE LINE # 582
0370 D200        R     SETB    dirM1
0372 020000      R     LJMP    ?C0043
0375         ?C0062:
                                           ; SOURCE LINE # 585
0375 C200        R     CLR     dirM1
                                           ; SOURCE LINE # 587
                                           ; SOURCE LINE # 589
0377 020000      R     LJMP    ?C0043
                                           ; SOURCE LINE # 591
037A         ?C0064:
                                           ; SOURCE LINE # 601
037A AF00        R     MOV     R7,index
037C EF                MOV     A,R7
037D 25E0              ADD     A,ACC
037F 25E0              ADD     A,ACC
0381 2400        E     ADD     A,#LOW g_meas
0383 F582              MOV     DPL,A
0385 E4                CLR     A
0386 3400        E     ADDC    A,#HIGH g_meas
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 39  

0388 F583              MOV     DPH,A
038A 120000      E     LCALL   ?C?LLDXDATA0
038D AF00        R     MOV     R7,index
038F EF                MOV     A,R7
0390 25E0              ADD     A,ACC
0392 25E0              ADD     A,ACC
0394 2400        E     ADD     A,#LOW g_ref
0396 F582              MOV     DPL,A
0398 E4                CLR     A
0399 3400        E     ADDC    A,#HIGH g_ref
039B F583              MOV     DPH,A
039D 120000      E     LCALL   ?C?LLDXDATA
03A0 120000      E     LCALL   ?C?LSUB
03A3 8F00        R     MOV     pos_error+03H,R7
03A5 8E00        R     MOV     pos_error+02H,R6
03A7 8D00        R     MOV     pos_error+01H,R5
03A9 8C00        R     MOV     pos_error,R4
                                           ; SOURCE LINE # 603
03AB AF00        R     MOV     R7,index
03AD EF                MOV     A,R7
03AE 25E0              ADD     A,ACC
03B0 25E0              ADD     A,ACC
03B2 2400        R     ADD     A,#LOW pos_error_sum
03B4 F582              MOV     DPL,A
03B6 E4                CLR     A
03B7 3400        R     ADDC    A,#HIGH pos_error_sum
03B9 F583              MOV     DPH,A
03BB C083              PUSH    DPH
03BD C082              PUSH    DPL
03BF 120000      E     LCALL   ?C?LLDXDATA
03C2 EF                MOV     A,R7
03C3 2500        R     ADD     A,pos_error+03H
03C5 FF                MOV     R7,A
03C6 EE                MOV     A,R6
03C7 3500        R     ADDC    A,pos_error+02H
03C9 FE                MOV     R6,A
03CA ED                MOV     A,R5
03CB 3500        R     ADDC    A,pos_error+01H
03CD FD                MOV     R5,A
03CE EC                MOV     A,R4
03CF 3500        R     ADDC    A,pos_error
03D1 FC                MOV     R4,A
03D2 D082              POP     DPL
03D4 D083              POP     DPH
03D6 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 605
03D9 300005            JNB     interrupt_flag,?C0065
                                           ; SOURCE LINE # 606
03DC C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 607
03DE 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 608
03E1         ?C0065:
                                           ; SOURCE LINE # 611
03E1 AF00        R     MOV     R7,index
03E3 EF                MOV     A,R7
03E4 25E0              ADD     A,ACC
03E6 25E0              ADD     A,ACC
03E8 2400        R     ADD     A,#LOW pos_error_sum
03EA F582              MOV     DPL,A
03EC E4                CLR     A
03ED 3400        R     ADDC    A,#HIGH pos_error_sum
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 40  

03EF F583              MOV     DPH,A
03F1 120000      E     LCALL   ?C?LLDXDATA
03F4 7BA0              MOV     R3,#0A0H
03F6 7A86              MOV     R2,#086H
03F8 7901              MOV     R1,#01H
03FA 7800              MOV     R0,#00H
03FC C3                CLR     C
03FD 120000      E     LCALL   ?C?SLCMP
0400 501D              JNC     ?C0066
                                           ; SOURCE LINE # 612
0402 7FA0              MOV     R7,#0A0H
0404 7E86              MOV     R6,#086H
0406 7D01              MOV     R5,#01H
0408 7C00              MOV     R4,#00H
040A AB00        R     MOV     R3,index
040C EB                MOV     A,R3
040D 25E0              ADD     A,ACC
040F 25E0              ADD     A,ACC
0411 2400        R     ADD     A,#LOW pos_error_sum
0413 F582              MOV     DPL,A
0415 E4                CLR     A
0416 3400        R     ADDC    A,#HIGH pos_error_sum
0418 F583              MOV     DPH,A
041A 120000      E     LCALL   ?C?LSTXDATA
041D 803C              SJMP    ?C0067
041F         ?C0066:
                                           ; SOURCE LINE # 613
                                           ; SOURCE LINE # 614
041F AF00        R     MOV     R7,index
0421 EF                MOV     A,R7
0422 25E0              ADD     A,ACC
0424 25E0              ADD     A,ACC
0426 2400        R     ADD     A,#LOW pos_error_sum
0428 F582              MOV     DPL,A
042A E4                CLR     A
042B 3400        R     ADDC    A,#HIGH pos_error_sum
042D F583              MOV     DPH,A
042F 120000      E     LCALL   ?C?LLDXDATA
0432 7B60              MOV     R3,#060H
0434 7A79              MOV     R2,#079H
0436 79FE              MOV     R1,#0FEH
0438 78FF              MOV     R0,#0FFH
043A D3                SETB    C
043B 120000      E     LCALL   ?C?SLCMP
043E 401B              JC      ?C0067
                                           ; SOURCE LINE # 615
0440 7F60              MOV     R7,#060H
0442 7E79              MOV     R6,#079H
0444 7DFE              MOV     R5,#0FEH
0446 7CFF              MOV     R4,#0FFH
0448 AB00        R     MOV     R3,index
044A EB                MOV     A,R3
044B 25E0              ADD     A,ACC
044D 25E0              ADD     A,ACC
044F 2400        R     ADD     A,#LOW pos_error_sum
0451 F582              MOV     DPL,A
0453 E4                CLR     A
0454 3400        R     ADDC    A,#HIGH pos_error_sum
0456 F583              MOV     DPH,A
0458 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 616
045B         ?C0067:
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 41  

                                           ; SOURCE LINE # 619
045B 7F00              MOV     R7,#00H
045D 7E00              MOV     R6,#00H
045F 7D00              MOV     R5,#00H
0461 7C00              MOV     R4,#00H
0463 8F00        R     MOV     curr_ref+03H,R7
0465 8E00        R     MOV     curr_ref+02H,R6
0467 8D00        R     MOV     curr_ref+01H,R5
0469 8C00        R     MOV     curr_ref,R4
                                           ; SOURCE LINE # 621
046B 300005            JNB     interrupt_flag,?C0069
                                           ; SOURCE LINE # 622
046E C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 623
0470 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 624
0473         ?C0069:
                                           ; SOURCE LINE # 627
0473 7F00              MOV     R7,#00H
0475 7E00              MOV     R6,#00H
0477 7D00              MOV     R5,#00H
0479 7C00              MOV     R4,#00H
047B AB00        R     MOV     R3,k_p_dl+03H
047D AA00        R     MOV     R2,k_p_dl+02H
047F A900        R     MOV     R1,k_p_dl+01H
0481 A800        R     MOV     R0,k_p_dl
0483 C3                CLR     C
0484 120000      E     LCALL   ?C?SLCMP
0487 6030              JZ      ?C0070
                                           ; SOURCE LINE # 628
0489 AF00        R     MOV     R7,pos_error+03H
048B AE00        R     MOV     R6,pos_error+02H
048D AD00        R     MOV     R5,pos_error+01H
048F AC00        R     MOV     R4,pos_error
0491 AB00        R     MOV     R3,k_p_dl+03H
0493 AA00        R     MOV     R2,k_p_dl+02H
0495 A900        R     MOV     R1,k_p_dl+01H
0497 A800        R     MOV     R0,k_p_dl
0499 120000      E     LCALL   ?C?LMUL
049C 7810              MOV     R0,#010H
049E 120000      E     LCALL   ?C?SLSHR
04A1 E500        R     MOV     A,curr_ref+03H
04A3 2F                ADD     A,R7
04A4 FF                MOV     R7,A
04A5 E500        R     MOV     A,curr_ref+02H
04A7 3E                ADDC    A,R6
04A8 FE                MOV     R6,A
04A9 E500        R     MOV     A,curr_ref+01H
04AB 3D                ADDC    A,R5
04AC FD                MOV     R5,A
04AD E500        R     MOV     A,curr_ref
04AF 3C                ADDC    A,R4
04B0 FC                MOV     R4,A
04B1 8F00        R     MOV     curr_ref+03H,R7
04B3 8E00        R     MOV     curr_ref+02H,R6
04B5 8D00        R     MOV     curr_ref+01H,R5
04B7 8C00        R     MOV     curr_ref,R4
04B9         ?C0070:
                                           ; SOURCE LINE # 631
04B9 7F00              MOV     R7,#00H
04BB 7E00              MOV     R6,#00H
04BD 7D00              MOV     R5,#00H
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 42  

04BF 7C00              MOV     R4,#00H
04C1 AB00        R     MOV     R3,k_i_dl+03H
04C3 AA00        R     MOV     R2,k_i_dl+02H
04C5 A900        R     MOV     R1,k_i_dl+01H
04C7 A800        R     MOV     R0,k_i_dl
04C9 C3                CLR     C
04CA 120000      E     LCALL   ?C?SLCMP
04CD 603B              JZ      ?C0071
                                           ; SOURCE LINE # 632
04CF AF00        R     MOV     R7,index
04D1 EF                MOV     A,R7
04D2 25E0              ADD     A,ACC
04D4 25E0              ADD     A,ACC
04D6 2400        R     ADD     A,#LOW pos_error_sum
04D8 F582              MOV     DPL,A
04DA E4                CLR     A
04DB 3400        R     ADDC    A,#HIGH pos_error_sum
04DD F583              MOV     DPH,A
04DF 120000      E     LCALL   ?C?LLDXDATA
04E2 AB00        R     MOV     R3,k_i_dl+03H
04E4 AA00        R     MOV     R2,k_i_dl+02H
04E6 A900        R     MOV     R1,k_i_dl+01H
04E8 A800        R     MOV     R0,k_i_dl
04EA 120000      E     LCALL   ?C?LMUL
04ED 7810              MOV     R0,#010H
04EF 120000      E     LCALL   ?C?SLSHR
04F2 E500        R     MOV     A,curr_ref+03H
04F4 2F                ADD     A,R7
04F5 FF                MOV     R7,A
04F6 E500        R     MOV     A,curr_ref+02H
04F8 3E                ADDC    A,R6
04F9 FE                MOV     R6,A
04FA E500        R     MOV     A,curr_ref+01H
04FC 3D                ADDC    A,R5
04FD FD                MOV     R5,A
04FE E500        R     MOV     A,curr_ref
0500 3C                ADDC    A,R4
0501 FC                MOV     R4,A
0502 8F00        R     MOV     curr_ref+03H,R7
0504 8E00        R     MOV     curr_ref+02H,R6
0506 8D00        R     MOV     curr_ref+01H,R5
0508 8C00        R     MOV     curr_ref,R4
050A         ?C0071:
                                           ; SOURCE LINE # 635
050A 7F00              MOV     R7,#00H
050C 7E00              MOV     R6,#00H
050E 7D00              MOV     R5,#00H
0510 7C00              MOV     R4,#00H
0512 AB00        R     MOV     R3,k_d_dl+03H
0514 AA00        R     MOV     R2,k_d_dl+02H
0516 A900        R     MOV     R1,k_d_dl+01H
0518 A800        R     MOV     R0,k_d_dl
051A C3                CLR     C
051B 120000      E     LCALL   ?C?SLCMP
051E 6051              JZ      ?C0072
                                           ; SOURCE LINE # 636
0520 AF00        R     MOV     R7,index
0522 EF                MOV     A,R7
0523 25E0              ADD     A,ACC
0525 25E0              ADD     A,ACC
0527 2400        E     ADD     A,#LOW g_meas
0529 F582              MOV     DPL,A
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 43  

052B E4                CLR     A
052C 3400        E     ADDC    A,#HIGH g_meas
052E F583              MOV     DPH,A
0530 120000      E     LCALL   ?C?LLDXDATA0
0533 AF00        R     MOV     R7,index
0535 EF                MOV     A,R7
0536 25E0              ADD     A,ACC
0538 25E0              ADD     A,ACC
053A 2400        E     ADD     A,#LOW g_measOld
053C F582              MOV     DPL,A
053E E4                CLR     A
053F 3400        E     ADDC    A,#HIGH g_measOld
0541 F583              MOV     DPH,A
0543 120000      E     LCALL   ?C?LLDXDATA
0546 120000      E     LCALL   ?C?LSUB
0549 AB00        R     MOV     R3,k_d_dl+03H
054B AA00        R     MOV     R2,k_d_dl+02H
054D A900        R     MOV     R1,k_d_dl+01H
054F A800        R     MOV     R0,k_d_dl
0551 120000      E     LCALL   ?C?LMUL
0554 7810              MOV     R0,#010H
0556 120000      E     LCALL   ?C?SLSHR
0559 E500        R     MOV     A,curr_ref+03H
055B 2F                ADD     A,R7
055C FF                MOV     R7,A
055D E500        R     MOV     A,curr_ref+02H
055F 3E                ADDC    A,R6
0560 FE                MOV     R6,A
0561 E500        R     MOV     A,curr_ref+01H
0563 3D                ADDC    A,R5
0564 FD                MOV     R5,A
0565 E500        R     MOV     A,curr_ref
0567 3C                ADDC    A,R4
0568 FC                MOV     R4,A
0569 8F00        R     MOV     curr_ref+03H,R7
056B 8E00        R     MOV     curr_ref+02H,R6
056D 8D00        R     MOV     curr_ref+01H,R5
056F 8C00        R     MOV     curr_ref,R4
0571         ?C0072:
                                           ; SOURCE LINE # 638
0571 300005            JNB     interrupt_flag,?C0073
                                           ; SOURCE LINE # 639
0574 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 640
0576 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 641
0579         ?C0073:
                                           ; SOURCE LINE # 644
0579 900000      E     MOV     DPTR,#c_mem+032H
057C E0                MOVX    A,@DPTR
057D FE                MOV     R6,A
057E A3                INC     DPTR
057F E0                MOVX    A,@DPTR
0580 FF                MOV     R7,A
0581 EE                MOV     A,R6
0582 33                RLC     A
0583 95E0              SUBB    A,ACC
0585 FD                MOV     R5,A
0586 FC                MOV     R4,A
0587 AB00        R     MOV     R3,curr_ref+03H
0589 AA00        R     MOV     R2,curr_ref+02H
058B A900        R     MOV     R1,curr_ref+01H
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 44  

058D A800        R     MOV     R0,curr_ref
058F D3                SETB    C
0590 120000      E     LCALL   ?C?SLCMP
0593 4018              JC      ?C0074
                                           ; SOURCE LINE # 645
0595 900000      E     MOV     DPTR,#c_mem+032H
0598 E0                MOVX    A,@DPTR
0599 FE                MOV     R6,A
059A A3                INC     DPTR
059B E0                MOVX    A,@DPTR
059C FF                MOV     R7,A
059D EE                MOV     A,R6
059E 33                RLC     A
059F 95E0              SUBB    A,ACC
05A1 FD                MOV     R5,A
05A2 FC                MOV     R4,A
05A3 8F00        R     MOV     curr_ref+03H,R7
05A5 8E00        R     MOV     curr_ref+02H,R6
05A7 8D00        R     MOV     curr_ref+01H,R5
05A9 8C00        R     MOV     curr_ref,R4
05AB 8040              SJMP    ?C0075
05AD         ?C0074:
                                           ; SOURCE LINE # 646
                                           ; SOURCE LINE # 647
05AD 900000      E     MOV     DPTR,#c_mem+032H
05B0 E0                MOVX    A,@DPTR
05B1 FE                MOV     R6,A
05B2 A3                INC     DPTR
05B3 E0                MOVX    A,@DPTR
05B4 FF                MOV     R7,A
05B5 C3                CLR     C
05B6 E4                CLR     A
05B7 9F                SUBB    A,R7
05B8 FF                MOV     R7,A
05B9 E4                CLR     A
05BA 9E                SUBB    A,R6
05BB FE                MOV     R6,A
05BC EE                MOV     A,R6
05BD 33                RLC     A
05BE 95E0              SUBB    A,ACC
05C0 FD                MOV     R5,A
05C1 FC                MOV     R4,A
05C2 AB00        R     MOV     R3,curr_ref+03H
05C4 AA00        R     MOV     R2,curr_ref+02H
05C6 A900        R     MOV     R1,curr_ref+01H
05C8 A800        R     MOV     R0,curr_ref
05CA C3                CLR     C
05CB 120000      E     LCALL   ?C?SLCMP
05CE 501D              JNC     ?C0075
                                           ; SOURCE LINE # 648
05D0 900000      E     MOV     DPTR,#c_mem+032H
05D3 E0                MOVX    A,@DPTR
05D4 FE                MOV     R6,A
05D5 A3                INC     DPTR
05D6 E0                MOVX    A,@DPTR
05D7 FF                MOV     R7,A
05D8 C3                CLR     C
05D9 E4                CLR     A
05DA 9F                SUBB    A,R7
05DB FF                MOV     R7,A
05DC E4                CLR     A
05DD 9E                SUBB    A,R6
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 45  

05DE FE                MOV     R6,A
05DF EE                MOV     A,R6
05E0 33                RLC     A
05E1 95E0              SUBB    A,ACC
05E3 FD                MOV     R5,A
05E4 FC                MOV     R4,A
05E5 8F00        R     MOV     curr_ref+03H,R7
05E7 8E00        R     MOV     curr_ref+02H,R6
05E9 8D00        R     MOV     curr_ref+01H,R5
05EB 8C00        R     MOV     curr_ref,R4
                                           ; SOURCE LINE # 649
05ED         ?C0075:
                                           ; SOURCE LINE # 651
05ED 300005            JNB     interrupt_flag,?C0077
                                           ; SOURCE LINE # 652
05F0 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 653
05F2 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 654
05F5         ?C0077:
                                           ; SOURCE LINE # 657
05F5 AF00        R     MOV     R7,index
05F7 EF                MOV     A,R7
05F8 25E0              ADD     A,ACC
05FA 2400        E     ADD     A,#LOW g_meas+08H
05FC F582              MOV     DPL,A
05FE E4                CLR     A
05FF 3400        E     ADDC    A,#HIGH g_meas+08H
0601 F583              MOV     DPH,A
0603 E0                MOVX    A,@DPTR
0604 FE                MOV     R6,A
0605 A3                INC     DPTR
0606 E0                MOVX    A,@DPTR
0607 FF                MOV     R7,A
0608 AB07              MOV     R3,AR7
060A AA06              MOV     R2,AR6
060C EA                MOV     A,R2
060D 33                RLC     A
060E 95E0              SUBB    A,ACC
0610 F9                MOV     R1,A
0611 F8                MOV     R0,A
0612 C3                CLR     C
0613 E500        R     MOV     A,curr_ref+03H
0615 9B                SUBB    A,R3
0616 FF                MOV     R7,A
0617 E500        R     MOV     A,curr_ref+02H
0619 9A                SUBB    A,R2
061A FE                MOV     R6,A
061B E500        R     MOV     A,curr_ref+01H
061D 99                SUBB    A,R1
061E FD                MOV     R5,A
061F E500        R     MOV     A,curr_ref
0621 98                SUBB    A,R0
0622 FC                MOV     R4,A
0623 8F00        R     MOV     curr_error+03H,R7
0625 8E00        R     MOV     curr_error+02H,R6
0627 8D00        R     MOV     curr_error+01H,R5
0629 8C00        R     MOV     curr_error,R4
                                           ; SOURCE LINE # 659
062B AF00        R     MOV     R7,index
062D EF                MOV     A,R7
062E 25E0              ADD     A,ACC
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 46  

0630 25E0              ADD     A,ACC
0632 2400        R     ADD     A,#LOW curr_error_sum
0634 F582              MOV     DPL,A
0636 E4                CLR     A
0637 3400        R     ADDC    A,#HIGH curr_error_sum
0639 F583              MOV     DPH,A
063B C083              PUSH    DPH
063D C082              PUSH    DPL
063F 120000      E     LCALL   ?C?LLDXDATA
0642 EF                MOV     A,R7
0643 2500        R     ADD     A,curr_error+03H
0645 FF                MOV     R7,A
0646 EE                MOV     A,R6
0647 3500        R     ADDC    A,curr_error+02H
0649 FE                MOV     R6,A
064A ED                MOV     A,R5
064B 3500        R     ADDC    A,curr_error+01H
064D FD                MOV     R5,A
064E EC                MOV     A,R4
064F 3500        R     ADDC    A,curr_error
0651 FC                MOV     R4,A
0652 D082              POP     DPL
0654 D083              POP     DPH
0656 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 661
0659 AF00        R     MOV     R7,index
065B EF                MOV     A,R7
065C 25E0              ADD     A,ACC
065E 25E0              ADD     A,ACC
0660 2400        R     ADD     A,#LOW curr_error_sum
0662 F582              MOV     DPL,A
0664 E4                CLR     A
0665 3400        R     ADDC    A,#HIGH curr_error_sum
0667 F583              MOV     DPH,A
0669 120000      E     LCALL   ?C?LLDXDATA
066C 7BA0              MOV     R3,#0A0H
066E 7A86              MOV     R2,#086H
0670 7901              MOV     R1,#01H
0672 7800              MOV     R0,#00H
0674 C3                CLR     C
0675 120000      E     LCALL   ?C?SLCMP
0678 501D              JNC     ?C0078
                                           ; SOURCE LINE # 662
067A 7FA0              MOV     R7,#0A0H
067C 7E86              MOV     R6,#086H
067E 7D01              MOV     R5,#01H
0680 7C00              MOV     R4,#00H
0682 AB00        R     MOV     R3,index
0684 EB                MOV     A,R3
0685 25E0              ADD     A,ACC
0687 25E0              ADD     A,ACC
0689 2400        R     ADD     A,#LOW curr_error_sum
068B F582              MOV     DPL,A
068D E4                CLR     A
068E 3400        R     ADDC    A,#HIGH curr_error_sum
0690 F583              MOV     DPH,A
0692 120000      E     LCALL   ?C?LSTXDATA
0695 803C              SJMP    ?C0079
0697         ?C0078:
                                           ; SOURCE LINE # 663
                                           ; SOURCE LINE # 664
0697 AF00        R     MOV     R7,index
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 47  

0699 EF                MOV     A,R7
069A 25E0              ADD     A,ACC
069C 25E0              ADD     A,ACC
069E 2400        R     ADD     A,#LOW curr_error_sum
06A0 F582              MOV     DPL,A
06A2 E4                CLR     A
06A3 3400        R     ADDC    A,#HIGH curr_error_sum
06A5 F583              MOV     DPH,A
06A7 120000      E     LCALL   ?C?LLDXDATA
06AA 7B60              MOV     R3,#060H
06AC 7A79              MOV     R2,#079H
06AE 79FE              MOV     R1,#0FEH
06B0 78FF              MOV     R0,#0FFH
06B2 D3                SETB    C
06B3 120000      E     LCALL   ?C?SLCMP
06B6 401B              JC      ?C0079
                                           ; SOURCE LINE # 665
06B8 7F60              MOV     R7,#060H
06BA 7E79              MOV     R6,#079H
06BC 7DFE              MOV     R5,#0FEH
06BE 7CFF              MOV     R4,#0FFH
06C0 AB00        R     MOV     R3,index
06C2 EB                MOV     A,R3
06C3 25E0              ADD     A,ACC
06C5 25E0              ADD     A,ACC
06C7 2400        R     ADD     A,#LOW curr_error_sum
06C9 F582              MOV     DPL,A
06CB E4                CLR     A
06CC 3400        R     ADDC    A,#HIGH curr_error_sum
06CE F583              MOV     DPH,A
06D0 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 666
06D3         ?C0079:
                                           ; SOURCE LINE # 668
06D3 300005            JNB     interrupt_flag,?C0081
                                           ; SOURCE LINE # 669
06D6 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 670
06D8 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 671
06DB         ?C0081:
                                           ; SOURCE LINE # 675
06DB 7F00              MOV     R7,#00H
06DD 7E00              MOV     R6,#00H
06DF 7D00              MOV     R5,#00H
06E1 7C00              MOV     R4,#00H
06E3 8F00        R     MOV     pwm_input+03H,R7
06E5 8E00        R     MOV     pwm_input+02H,R6
06E7 8D00        R     MOV     pwm_input+01H,R5
06E9 8C00        R     MOV     pwm_input,R4
                                           ; SOURCE LINE # 678
06EB 7F00              MOV     R7,#00H
06ED 7E00              MOV     R6,#00H
06EF 7D00              MOV     R5,#00H
06F1 7C00              MOV     R4,#00H
06F3 AB00        R     MOV     R3,k_p_c_dl+03H
06F5 AA00        R     MOV     R2,k_p_c_dl+02H
06F7 A900        R     MOV     R1,k_p_c_dl+01H
06F9 A800        R     MOV     R0,k_p_c_dl
06FB C3                CLR     C
06FC 120000      E     LCALL   ?C?SLCMP
06FF 6030              JZ      ?C0082
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 48  

                                           ; SOURCE LINE # 679
0701 AF00        R     MOV     R7,curr_error+03H
0703 AE00        R     MOV     R6,curr_error+02H
0705 AD00        R     MOV     R5,curr_error+01H
0707 AC00        R     MOV     R4,curr_error
0709 AB00        R     MOV     R3,k_p_c_dl+03H
070B AA00        R     MOV     R2,k_p_c_dl+02H
070D A900        R     MOV     R1,k_p_c_dl+01H
070F A800        R     MOV     R0,k_p_c_dl
0711 120000      E     LCALL   ?C?LMUL
0714 7810              MOV     R0,#010H
0716 120000      E     LCALL   ?C?SLSHR
0719 E500        R     MOV     A,pwm_input+03H
071B 2F                ADD     A,R7
071C FF                MOV     R7,A
071D E500        R     MOV     A,pwm_input+02H
071F 3E                ADDC    A,R6
0720 FE                MOV     R6,A
0721 E500        R     MOV     A,pwm_input+01H
0723 3D                ADDC    A,R5
0724 FD                MOV     R5,A
0725 E500        R     MOV     A,pwm_input
0727 3C                ADDC    A,R4
0728 FC                MOV     R4,A
0729 8F00        R     MOV     pwm_input+03H,R7
072B 8E00        R     MOV     pwm_input+02H,R6
072D 8D00        R     MOV     pwm_input+01H,R5
072F 8C00        R     MOV     pwm_input,R4
0731         ?C0082:
                                           ; SOURCE LINE # 682
0731 7F00              MOV     R7,#00H
0733 7E00              MOV     R6,#00H
0735 7D00              MOV     R5,#00H
0737 7C00              MOV     R4,#00H
0739 AB00        R     MOV     R3,k_i_c_dl+03H
073B AA00        R     MOV     R2,k_i_c_dl+02H
073D A900        R     MOV     R1,k_i_c_dl+01H
073F A800        R     MOV     R0,k_i_c_dl
0741 C3                CLR     C
0742 120000      E     LCALL   ?C?SLCMP
0745 603B              JZ      ?C0083
                                           ; SOURCE LINE # 683
0747 AF00        R     MOV     R7,index
0749 EF                MOV     A,R7
074A 25E0              ADD     A,ACC
074C 25E0              ADD     A,ACC
074E 2400        R     ADD     A,#LOW curr_error_sum
0750 F582              MOV     DPL,A
0752 E4                CLR     A
0753 3400        R     ADDC    A,#HIGH curr_error_sum
0755 F583              MOV     DPH,A
0757 120000      E     LCALL   ?C?LLDXDATA
075A AB00        R     MOV     R3,k_i_c_dl+03H
075C AA00        R     MOV     R2,k_i_c_dl+02H
075E A900        R     MOV     R1,k_i_c_dl+01H
0760 A800        R     MOV     R0,k_i_c_dl
0762 120000      E     LCALL   ?C?LMUL
0765 7810              MOV     R0,#010H
0767 120000      E     LCALL   ?C?SLSHR
076A E500        R     MOV     A,pwm_input+03H
076C 2F                ADD     A,R7
076D FF                MOV     R7,A
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 49  

076E E500        R     MOV     A,pwm_input+02H
0770 3E                ADDC    A,R6
0771 FE                MOV     R6,A
0772 E500        R     MOV     A,pwm_input+01H
0774 3D                ADDC    A,R5
0775 FD                MOV     R5,A
0776 E500        R     MOV     A,pwm_input
0778 3C                ADDC    A,R4
0779 FC                MOV     R4,A
077A 8F00        R     MOV     pwm_input+03H,R7
077C 8E00        R     MOV     pwm_input+02H,R6
077E 8D00        R     MOV     pwm_input+01H,R5
0780 8C00        R     MOV     pwm_input,R4
0782         ?C0083:
                                           ; SOURCE LINE # 686
0782 7F00              MOV     R7,#00H
0784 7E00              MOV     R6,#00H
0786 7D00              MOV     R5,#00H
0788 7C00              MOV     R4,#00H
078A AB00        R     MOV     R3,k_d_c_dl+03H
078C AA00        R     MOV     R2,k_d_c_dl+02H
078E A900        R     MOV     R1,k_d_c_dl+01H
0790 A800        R     MOV     R0,k_d_c_dl
0792 C3                CLR     C
0793 120000      E     LCALL   ?C?SLCMP
0796 605B              JZ      ?C0084
                                           ; SOURCE LINE # 687
0798 AF00        R     MOV     R7,index
079A EF                MOV     A,R7
079B 25E0              ADD     A,ACC
079D 2400        E     ADD     A,#LOW g_meas+08H
079F F582              MOV     DPL,A
07A1 E4                CLR     A
07A2 3400        E     ADDC    A,#HIGH g_meas+08H
07A4 F583              MOV     DPH,A
07A6 E0                MOVX    A,@DPTR
07A7 FE                MOV     R6,A
07A8 A3                INC     DPTR
07A9 E0                MOVX    A,@DPTR
07AA FF                MOV     R7,A
07AB AB07              MOV     R3,AR7
07AD AA06              MOV     R2,AR6
07AF EA                MOV     A,R2
07B0 33                RLC     A
07B1 95E0              SUBB    A,ACC
07B3 F9                MOV     R1,A
07B4 F8                MOV     R0,A
07B5 AF00        R     MOV     R7,index
07B7 EF                MOV     A,R7
07B8 25E0              ADD     A,ACC
07BA 25E0              ADD     A,ACC
07BC 2400        R     ADD     A,#LOW prev_curr
07BE F582              MOV     DPL,A
07C0 E4                CLR     A
07C1 3400        R     ADDC    A,#HIGH prev_curr
07C3 F583              MOV     DPH,A
07C5 120000      E     LCALL   ?C?LLDXDATA
07C8 120000      E     LCALL   ?C?LSUB
07CB AB00        R     MOV     R3,k_d_c_dl+03H
07CD AA00        R     MOV     R2,k_d_c_dl+02H
07CF A900        R     MOV     R1,k_d_c_dl+01H
07D1 A800        R     MOV     R0,k_d_c_dl
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 50  

07D3 120000      E     LCALL   ?C?LMUL
07D6 7810              MOV     R0,#010H
07D8 120000      E     LCALL   ?C?SLSHR
07DB E500        R     MOV     A,pwm_input+03H
07DD 2F                ADD     A,R7
07DE FF                MOV     R7,A
07DF E500        R     MOV     A,pwm_input+02H
07E1 3E                ADDC    A,R6
07E2 FE                MOV     R6,A
07E3 E500        R     MOV     A,pwm_input+01H
07E5 3D                ADDC    A,R5
07E6 FD                MOV     R5,A
07E7 E500        R     MOV     A,pwm_input
07E9 3C                ADDC    A,R4
07EA FC                MOV     R4,A
07EB 8F00        R     MOV     pwm_input+03H,R7
07ED 8E00        R     MOV     pwm_input+02H,R6
07EF 8D00        R     MOV     pwm_input+01H,R5
07F1 8C00        R     MOV     pwm_input,R4
07F3         ?C0084:
                                           ; SOURCE LINE # 690
07F3 AF00        R     MOV     R7,index
07F5 EF                MOV     A,R7
07F6 25E0              ADD     A,ACC
07F8 2400        E     ADD     A,#LOW g_meas+08H
07FA F582              MOV     DPL,A
07FC E4                CLR     A
07FD 3400        E     ADDC    A,#HIGH g_meas+08H
07FF F583              MOV     DPH,A
0801 E0                MOVX    A,@DPTR
0802 FE                MOV     R6,A
0803 A3                INC     DPTR
0804 E0                MOVX    A,@DPTR
0805 FF                MOV     R7,A
0806 EE                MOV     A,R6
0807 33                RLC     A
0808 95E0              SUBB    A,ACC
080A FD                MOV     R5,A
080B FC                MOV     R4,A
080C AB00        R     MOV     R3,index
080E EB                MOV     A,R3
080F 25E0              ADD     A,ACC
0811 25E0              ADD     A,ACC
0813 2400        R     ADD     A,#LOW prev_curr
0815 F582              MOV     DPL,A
0817 E4                CLR     A
0818 3400        R     ADDC    A,#HIGH prev_curr
081A F583              MOV     DPH,A
081C 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 692
081F 300005            JNB     interrupt_flag,?C0085
                                           ; SOURCE LINE # 693
0822 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 694
0824 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 695
0827         ?C0085:
                                           ; SOURCE LINE # 697
0827 E500        R     MOV     A,index
0829 7020              JNZ     ?C0086
                                           ; SOURCE LINE # 698
082B 7F00              MOV     R7,#00H
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 51  

082D 7E00              MOV     R6,#00H
082F 7D00              MOV     R5,#00H
0831 7C00              MOV     R4,#00H
0833 AB00        R     MOV     R3,pwm_input+03H
0835 AA00        R     MOV     R2,pwm_input+02H
0837 A900        R     MOV     R1,pwm_input+01H
0839 A800        R     MOV     R0,pwm_input
083B C3                CLR     C
083C 120000      E     LCALL   ?C?SLCMP
083F 4005              JC      ?C0087
                                           ; SOURCE LINE # 699
0841 D200        R     SETB    dirM0
0843 020000      R     LJMP    ?C0043
0846         ?C0087:
                                           ; SOURCE LINE # 702
0846 C200        R     CLR     dirM0
                                           ; SOURCE LINE # 704
0848 020000      R     LJMP    ?C0043
084B         ?C0086:
                                           ; SOURCE LINE # 705
084B 7F00              MOV     R7,#00H
084D 7E00              MOV     R6,#00H
084F 7D00              MOV     R5,#00H
0851 7C00              MOV     R4,#00H
0853 AB00        R     MOV     R3,pwm_input+03H
0855 AA00        R     MOV     R2,pwm_input+02H
0857 A900        R     MOV     R1,pwm_input+01H
0859 A800        R     MOV     R0,pwm_input
085B C3                CLR     C
085C 120000      E     LCALL   ?C?SLCMP
085F 4005              JC      ?C0090
                                           ; SOURCE LINE # 706
0861 D200        R     SETB    dirM1
0863 020000      R     LJMP    ?C0043
0866         ?C0090:
                                           ; SOURCE LINE # 709
0866 C200        R     CLR     dirM1
                                           ; SOURCE LINE # 711
                                           ; SOURCE LINE # 713
0868 020000      R     LJMP    ?C0043
                                           ; SOURCE LINE # 715
086B         ?C0092:
                                           ; SOURCE LINE # 718
086B AF00        R     MOV     R7,index
086D EF                MOV     A,R7
086E 25E0              ADD     A,ACC
0870 25E0              ADD     A,ACC
0872 2400        E     ADD     A,#LOW g_ref
0874 F582              MOV     DPL,A
0876 E4                CLR     A
0877 3400        E     ADDC    A,#HIGH g_ref
0879 F583              MOV     DPH,A
087B 120000      E     LCALL   ?C?LLDXDATA
087E AB00        R     MOV     R3,index
0880 7400        E     MOV     A,#LOW g_mem+037H
0882 2B                ADD     A,R3
0883 F582              MOV     DPL,A
0885 E4                CLR     A
0886 3400        E     ADDC    A,#HIGH g_mem+037H
0888 F583              MOV     DPH,A
088A E0                MOVX    A,@DPTR
088B F9                MOV     R1,A
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 52  

088C A801              MOV     R0,AR1
088E 120000      E     LCALL   ?C?SLSHR
0891 8F00        R     MOV     curr_ref+03H,R7
0893 8E00        R     MOV     curr_ref+02H,R6
0895 8D00        R     MOV     curr_ref+01H,R5
0897 8C00        R     MOV     curr_ref,R4
                                           ; SOURCE LINE # 721
0899 900000      E     MOV     DPTR,#c_mem+032H
089C E0                MOVX    A,@DPTR
089D FE                MOV     R6,A
089E A3                INC     DPTR
089F E0                MOVX    A,@DPTR
08A0 FF                MOV     R7,A
08A1 EE                MOV     A,R6
08A2 33                RLC     A
08A3 95E0              SUBB    A,ACC
08A5 FD                MOV     R5,A
08A6 FC                MOV     R4,A
08A7 AB00        R     MOV     R3,curr_ref+03H
08A9 AA00        R     MOV     R2,curr_ref+02H
08AB A900        R     MOV     R1,curr_ref+01H
08AD A800        R     MOV     R0,curr_ref
08AF D3                SETB    C
08B0 120000      E     LCALL   ?C?SLCMP
08B3 4016              JC      ?C0093
                                           ; SOURCE LINE # 722
08B5 900000      E     MOV     DPTR,#c_mem+032H
08B8 E0                MOVX    A,@DPTR
08B9 FE                MOV     R6,A
08BA A3                INC     DPTR
08BB E0                MOVX    A,@DPTR
08BC FF                MOV     R7,A
08BD EE                MOV     A,R6
08BE 33                RLC     A
08BF 95E0              SUBB    A,ACC
08C1 FD                MOV     R5,A
08C2 FC                MOV     R4,A
08C3 8F00        R     MOV     curr_ref+03H,R7
08C5 8E00        R     MOV     curr_ref+02H,R6
08C7 8D00        R     MOV     curr_ref+01H,R5
08C9 8C00        R     MOV     curr_ref,R4
08CB         ?C0093:
                                           ; SOURCE LINE # 725
08CB AE00        R     MOV     R6,curr_ref+02H
08CD AF00        R     MOV     R7,curr_ref+03H
08CF 120000      E     LCALL   _abs
08D2 AD00        R     MOV     R5,index
08D4 ED                MOV     A,R5
08D5 25E0              ADD     A,ACC
08D7 2400        E     ADD     A,#LOW g_meas+08H
08D9 F582              MOV     DPL,A
08DB E4                CLR     A
08DC 3400        E     ADDC    A,#HIGH g_meas+08H
08DE F583              MOV     DPH,A
08E0 E0                MOVX    A,@DPTR
08E1 FC                MOV     R4,A
08E2 A3                INC     DPTR
08E3 E0                MOVX    A,@DPTR
08E4 FD                MOV     R5,A
08E5 C3                CLR     C
08E6 EF                MOV     A,R7
08E7 9D                SUBB    A,R5
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 53  

08E8 FF                MOV     R7,A
08E9 EE                MOV     A,R6
08EA 9C                SUBB    A,R4
08EB FE                MOV     R6,A
08EC EE                MOV     A,R6
08ED 33                RLC     A
08EE 95E0              SUBB    A,ACC
08F0 FD                MOV     R5,A
08F1 FC                MOV     R4,A
08F2 8F00        R     MOV     curr_error+03H,R7
08F4 8E00        R     MOV     curr_error+02H,R6
08F6 8D00        R     MOV     curr_error+01H,R5
08F8 8C00        R     MOV     curr_error,R4
                                           ; SOURCE LINE # 728
08FA AF00        R     MOV     R7,index
08FC EF                MOV     A,R7
08FD 25E0              ADD     A,ACC
08FF 25E0              ADD     A,ACC
0901 2400        R     ADD     A,#LOW curr_error_sum
0903 F582              MOV     DPL,A
0905 E4                CLR     A
0906 3400        R     ADDC    A,#HIGH curr_error_sum
0908 F583              MOV     DPH,A
090A C083              PUSH    DPH
090C C082              PUSH    DPL
090E 120000      E     LCALL   ?C?LLDXDATA
0911 EF                MOV     A,R7
0912 2500        R     ADD     A,curr_error+03H
0914 FF                MOV     R7,A
0915 EE                MOV     A,R6
0916 3500        R     ADDC    A,curr_error+02H
0918 FE                MOV     R6,A
0919 ED                MOV     A,R5
091A 3500        R     ADDC    A,curr_error+01H
091C FD                MOV     R5,A
091D EC                MOV     A,R4
091E 3500        R     ADDC    A,curr_error
0920 FC                MOV     R4,A
0921 D082              POP     DPL
0923 D083              POP     DPH
0925 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 731
0928 AF00        R     MOV     R7,index
092A EF                MOV     A,R7
092B 25E0              ADD     A,ACC
092D 25E0              ADD     A,ACC
092F 2400        R     ADD     A,#LOW curr_error_sum
0931 F582              MOV     DPL,A
0933 E4                CLR     A
0934 3400        R     ADDC    A,#HIGH curr_error_sum
0936 F583              MOV     DPH,A
0938 120000      E     LCALL   ?C?LLDXDATA
093B 7BA0              MOV     R3,#0A0H
093D 7A86              MOV     R2,#086H
093F 7901              MOV     R1,#01H
0941 7800              MOV     R0,#00H
0943 C3                CLR     C
0944 120000      E     LCALL   ?C?SLCMP
0947 501D              JNC     ?C0094
                                           ; SOURCE LINE # 732
0949 7FA0              MOV     R7,#0A0H
094B 7E86              MOV     R6,#086H
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 54  

094D 7D01              MOV     R5,#01H
094F 7C00              MOV     R4,#00H
0951 AB00        R     MOV     R3,index
0953 EB                MOV     A,R3
0954 25E0              ADD     A,ACC
0956 25E0              ADD     A,ACC
0958 2400        R     ADD     A,#LOW curr_error_sum
095A F582              MOV     DPL,A
095C E4                CLR     A
095D 3400        R     ADDC    A,#HIGH curr_error_sum
095F F583              MOV     DPH,A
0961 120000      E     LCALL   ?C?LSTXDATA
0964 803C              SJMP    ?C0095
0966         ?C0094:
                                           ; SOURCE LINE # 733
                                           ; SOURCE LINE # 734
0966 AF00        R     MOV     R7,index
0968 EF                MOV     A,R7
0969 25E0              ADD     A,ACC
096B 25E0              ADD     A,ACC
096D 2400        R     ADD     A,#LOW curr_error_sum
096F F582              MOV     DPL,A
0971 E4                CLR     A
0972 3400        R     ADDC    A,#HIGH curr_error_sum
0974 F583              MOV     DPH,A
0976 120000      E     LCALL   ?C?LLDXDATA
0979 7B00              MOV     R3,#00H
097B 7A00              MOV     R2,#00H
097D 7900              MOV     R1,#00H
097F 7800              MOV     R0,#00H
0981 D3                SETB    C
0982 120000      E     LCALL   ?C?SLCMP
0985 401B              JC      ?C0095
                                           ; SOURCE LINE # 735
0987 7F00              MOV     R7,#00H
0989 7E00              MOV     R6,#00H
098B 7D00              MOV     R5,#00H
098D 7C00              MOV     R4,#00H
098F AB00        R     MOV     R3,index
0991 EB                MOV     A,R3
0992 25E0              ADD     A,ACC
0994 25E0              ADD     A,ACC
0996 2400        R     ADD     A,#LOW curr_error_sum
0998 F582              MOV     DPL,A
099A E4                CLR     A
099B 3400        R     ADDC    A,#HIGH curr_error_sum
099D F583              MOV     DPH,A
099F 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 736
09A2         ?C0095:
                                           ; SOURCE LINE # 739
09A2 7F00              MOV     R7,#00H
09A4 7E00              MOV     R6,#00H
09A6 7D00              MOV     R5,#00H
09A8 7C00              MOV     R4,#00H
09AA 8F00        R     MOV     pwm_input+03H,R7
09AC 8E00        R     MOV     pwm_input+02H,R6
09AE 8D00        R     MOV     pwm_input+01H,R5
09B0 8C00        R     MOV     pwm_input,R4
                                           ; SOURCE LINE # 742
09B2 7F00              MOV     R7,#00H
09B4 7E00              MOV     R6,#00H
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 55  

09B6 7D00              MOV     R5,#00H
09B8 7C00              MOV     R4,#00H
09BA AB00        R     MOV     R3,k_p_c+03H
09BC AA00        R     MOV     R2,k_p_c+02H
09BE A900        R     MOV     R1,k_p_c+01H
09C0 A800        R     MOV     R0,k_p_c
09C2 C3                CLR     C
09C3 120000      E     LCALL   ?C?SLCMP
09C6 6030              JZ      ?C0097
                                           ; SOURCE LINE # 743
09C8 AF00        R     MOV     R7,curr_error+03H
09CA AE00        R     MOV     R6,curr_error+02H
09CC AD00        R     MOV     R5,curr_error+01H
09CE AC00        R     MOV     R4,curr_error
09D0 AB00        R     MOV     R3,k_p+03H
09D2 AA00        R     MOV     R2,k_p+02H
09D4 A900        R     MOV     R1,k_p+01H
09D6 A800        R     MOV     R0,k_p
09D8 120000      E     LCALL   ?C?LMUL
09DB 7810              MOV     R0,#010H
09DD 120000      E     LCALL   ?C?SLSHR
09E0 E500        R     MOV     A,pwm_input+03H
09E2 2F                ADD     A,R7
09E3 FF                MOV     R7,A
09E4 E500        R     MOV     A,pwm_input+02H
09E6 3E                ADDC    A,R6
09E7 FE                MOV     R6,A
09E8 E500        R     MOV     A,pwm_input+01H
09EA 3D                ADDC    A,R5
09EB FD                MOV     R5,A
09EC E500        R     MOV     A,pwm_input
09EE 3C                ADDC    A,R4
09EF FC                MOV     R4,A
09F0 8F00        R     MOV     pwm_input+03H,R7
09F2 8E00        R     MOV     pwm_input+02H,R6
09F4 8D00        R     MOV     pwm_input+01H,R5
09F6 8C00        R     MOV     pwm_input,R4
09F8         ?C0097:
                                           ; SOURCE LINE # 747
09F8 7F00              MOV     R7,#00H
09FA 7E00              MOV     R6,#00H
09FC 7D00              MOV     R5,#00H
09FE 7C00              MOV     R4,#00H
0A00 AB00        R     MOV     R3,k_i_c+03H
0A02 AA00        R     MOV     R2,k_i_c+02H
0A04 A900        R     MOV     R1,k_i_c+01H
0A06 A800        R     MOV     R0,k_i_c
0A08 C3                CLR     C
0A09 120000      E     LCALL   ?C?SLCMP
0A0C 6040              JZ      ?C0098
                                           ; SOURCE LINE # 748
0A0E AF00        R     MOV     R7,index
0A10 EF                MOV     A,R7
0A11 25E0              ADD     A,ACC
0A13 25E0              ADD     A,ACC
0A15 2400        R     ADD     A,#LOW curr_error_sum
0A17 F582              MOV     DPL,A
0A19 E4                CLR     A
0A1A 3400        R     ADDC    A,#HIGH curr_error_sum
0A1C F583              MOV     DPH,A
0A1E 120000      E     LCALL   ?C?LLDXDATA
0A21 7806              MOV     R0,#06H
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 56  

0A23 120000      E     LCALL   ?C?SLSHR
0A26 AB00        R     MOV     R3,k_i_c+03H
0A28 AA00        R     MOV     R2,k_i_c+02H
0A2A A900        R     MOV     R1,k_i_c+01H
0A2C A800        R     MOV     R0,k_i_c
0A2E 120000      E     LCALL   ?C?LMUL
0A31 780A              MOV     R0,#0AH
0A33 120000      E     LCALL   ?C?SLSHR
0A36 E500        R     MOV     A,pwm_input+03H
0A38 2F                ADD     A,R7
0A39 FF                MOV     R7,A
0A3A E500        R     MOV     A,pwm_input+02H
0A3C 3E                ADDC    A,R6
0A3D FE                MOV     R6,A
0A3E E500        R     MOV     A,pwm_input+01H
0A40 3D                ADDC    A,R5
0A41 FD                MOV     R5,A
0A42 E500        R     MOV     A,pwm_input
0A44 3C                ADDC    A,R4
0A45 FC                MOV     R4,A
0A46 8F00        R     MOV     pwm_input+03H,R7
0A48 8E00        R     MOV     pwm_input+02H,R6
0A4A 8D00        R     MOV     pwm_input+01H,R5
0A4C 8C00        R     MOV     pwm_input,R4
0A4E         ?C0098:
                                           ; SOURCE LINE # 751
0A4E 7F00              MOV     R7,#00H
0A50 7E00              MOV     R6,#00H
0A52 7D00              MOV     R5,#00H
0A54 7C00              MOV     R4,#00H
0A56 AB00        R     MOV     R3,k_d_c+03H
0A58 AA00        R     MOV     R2,k_d_c+02H
0A5A A900        R     MOV     R1,k_d_c+01H
0A5C A800        R     MOV     R0,k_d_c
0A5E C3                CLR     C
0A5F 120000      E     LCALL   ?C?SLCMP
0A62 605B              JZ      ?C0099
                                           ; SOURCE LINE # 752
0A64 AF00        R     MOV     R7,index
0A66 EF                MOV     A,R7
0A67 25E0              ADD     A,ACC
0A69 2400        E     ADD     A,#LOW g_meas+08H
0A6B F582              MOV     DPL,A
0A6D E4                CLR     A
0A6E 3400        E     ADDC    A,#HIGH g_meas+08H
0A70 F583              MOV     DPH,A
0A72 E0                MOVX    A,@DPTR
0A73 FE                MOV     R6,A
0A74 A3                INC     DPTR
0A75 E0                MOVX    A,@DPTR
0A76 FF                MOV     R7,A
0A77 AB07              MOV     R3,AR7
0A79 AA06              MOV     R2,AR6
0A7B EA                MOV     A,R2
0A7C 33                RLC     A
0A7D 95E0              SUBB    A,ACC
0A7F F9                MOV     R1,A
0A80 F8                MOV     R0,A
0A81 AF00        R     MOV     R7,index
0A83 EF                MOV     A,R7
0A84 25E0              ADD     A,ACC
0A86 25E0              ADD     A,ACC
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 57  

0A88 2400        R     ADD     A,#LOW prev_curr
0A8A F582              MOV     DPL,A
0A8C E4                CLR     A
0A8D 3400        R     ADDC    A,#HIGH prev_curr
0A8F F583              MOV     DPH,A
0A91 120000      E     LCALL   ?C?LLDXDATA
0A94 120000      E     LCALL   ?C?LSUB
0A97 AB00        R     MOV     R3,k_d_c+03H
0A99 AA00        R     MOV     R2,k_d_c+02H
0A9B A900        R     MOV     R1,k_d_c+01H
0A9D A800        R     MOV     R0,k_d_c
0A9F 120000      E     LCALL   ?C?LMUL
0AA2 7810              MOV     R0,#010H
0AA4 120000      E     LCALL   ?C?SLSHR
0AA7 E500        R     MOV     A,pwm_input+03H
0AA9 2F                ADD     A,R7
0AAA FF                MOV     R7,A
0AAB E500        R     MOV     A,pwm_input+02H
0AAD 3E                ADDC    A,R6
0AAE FE                MOV     R6,A
0AAF E500        R     MOV     A,pwm_input+01H
0AB1 3D                ADDC    A,R5
0AB2 FD                MOV     R5,A
0AB3 E500        R     MOV     A,pwm_input
0AB5 3C                ADDC    A,R4
0AB6 FC                MOV     R4,A
0AB7 8F00        R     MOV     pwm_input+03H,R7
0AB9 8E00        R     MOV     pwm_input+02H,R6
0ABB 8D00        R     MOV     pwm_input+01H,R5
0ABD 8C00        R     MOV     pwm_input,R4
0ABF         ?C0099:
                                           ; SOURCE LINE # 755
0ABF 7F00              MOV     R7,#00H
0AC1 7E00              MOV     R6,#00H
0AC3 7D00              MOV     R5,#00H
0AC5 7C00              MOV     R4,#00H
0AC7 AB00        R     MOV     R3,pwm_input+03H
0AC9 AA00        R     MOV     R2,pwm_input+02H
0ACB A900        R     MOV     R1,pwm_input+01H
0ACD A800        R     MOV     R0,pwm_input
0ACF C3                CLR     C
0AD0 120000      E     LCALL   ?C?SLCMP
0AD3 5010              JNC     ?C0100
                                           ; SOURCE LINE # 756
0AD5 7F00              MOV     R7,#00H
0AD7 7E00              MOV     R6,#00H
0AD9 7D00              MOV     R5,#00H
0ADB 7C00              MOV     R4,#00H
0ADD 8F00        R     MOV     pwm_input+03H,R7
0ADF 8E00        R     MOV     pwm_input+02H,R6
0AE1 8D00        R     MOV     pwm_input+01H,R5
0AE3 8C00        R     MOV     pwm_input,R4
0AE5         ?C0100:
                                           ; SOURCE LINE # 759
0AE5 AF00        R     MOV     R7,index
0AE7 EF                MOV     A,R7
0AE8 25E0              ADD     A,ACC
0AEA 2400        E     ADD     A,#LOW g_meas+08H
0AEC F582              MOV     DPL,A
0AEE E4                CLR     A
0AEF 3400        E     ADDC    A,#HIGH g_meas+08H
0AF1 F583              MOV     DPH,A
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 58  

0AF3 E0                MOVX    A,@DPTR
0AF4 FE                MOV     R6,A
0AF5 A3                INC     DPTR
0AF6 E0                MOVX    A,@DPTR
0AF7 FF                MOV     R7,A
0AF8 EE                MOV     A,R6
0AF9 33                RLC     A
0AFA 95E0              SUBB    A,ACC
0AFC FD                MOV     R5,A
0AFD FC                MOV     R4,A
0AFE AB00        R     MOV     R3,index
0B00 EB                MOV     A,R3
0B01 25E0              ADD     A,ACC
0B03 25E0              ADD     A,ACC
0B05 2400        R     ADD     A,#LOW prev_curr
0B07 F582              MOV     DPL,A
0B09 E4                CLR     A
0B0A 3400        R     ADDC    A,#HIGH prev_curr
0B0C F583              MOV     DPH,A
0B0E 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 761
0B11 E500        R     MOV     A,index
0B13 7020              JNZ     ?C0101
                                           ; SOURCE LINE # 762
0B15 7F00              MOV     R7,#00H
0B17 7E00              MOV     R6,#00H
0B19 7D00              MOV     R5,#00H
0B1B 7C00              MOV     R4,#00H
0B1D AB00        R     MOV     R3,pwm_input+03H
0B1F AA00        R     MOV     R2,pwm_input+02H
0B21 A900        R     MOV     R1,pwm_input+01H
0B23 A800        R     MOV     R0,pwm_input
0B25 C3                CLR     C
0B26 120000      E     LCALL   ?C?SLCMP
0B29 4005              JC      ?C0102
                                           ; SOURCE LINE # 763
0B2B D200        R     SETB    dirM0
0B2D 020000      R     LJMP    ?C0043
0B30         ?C0102:
                                           ; SOURCE LINE # 766
0B30 C200        R     CLR     dirM0
                                           ; SOURCE LINE # 768
0B32 020000      R     LJMP    ?C0043
0B35         ?C0101:
                                           ; SOURCE LINE # 769
0B35 7F00              MOV     R7,#00H
0B37 7E00              MOV     R6,#00H
0B39 7D00              MOV     R5,#00H
0B3B 7C00              MOV     R4,#00H
0B3D AB00        R     MOV     R3,pwm_input+03H
0B3F AA00        R     MOV     R2,pwm_input+02H
0B41 A900        R     MOV     R1,pwm_input+01H
0B43 A800        R     MOV     R0,pwm_input
0B45 C3                CLR     C
0B46 120000      E     LCALL   ?C?SLCMP
0B49 4004              JC      ?C0105
                                           ; SOURCE LINE # 770
0B4B D200        R     SETB    dirM1
0B4D 8070              SJMP    ?C0043
0B4F         ?C0105:
                                           ; SOURCE LINE # 773
0B4F C200        R     CLR     dirM1
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 59  

                                           ; SOURCE LINE # 775
                                           ; SOURCE LINE # 777
0B51 806C              SJMP    ?C0043
                                           ; SOURCE LINE # 779
0B53         ?C0107:
                                           ; SOURCE LINE # 781
0B53 AF00        R     MOV     R7,index
0B55 EF                MOV     A,R7
0B56 25E0              ADD     A,ACC
0B58 25E0              ADD     A,ACC
0B5A 2400        E     ADD     A,#LOW g_ref
0B5C F582              MOV     DPL,A
0B5E E4                CLR     A
0B5F 3400        E     ADDC    A,#HIGH g_ref
0B61 F583              MOV     DPH,A
0B63 120000      E     LCALL   ?C?LLDXDATA
0B66 AB00        R     MOV     R3,index
0B68 7400        E     MOV     A,#LOW g_mem+037H
0B6A 2B                ADD     A,R3
0B6B F582              MOV     DPL,A
0B6D E4                CLR     A
0B6E 3400        E     ADDC    A,#HIGH g_mem+037H
0B70 F583              MOV     DPH,A
0B72 E0                MOVX    A,@DPTR
0B73 F9                MOV     R1,A
0B74 A801              MOV     R0,AR1
0B76 120000      E     LCALL   ?C?SLSHR
0B79 8F00        R     MOV     pwm_input+03H,R7
0B7B 8E00        R     MOV     pwm_input+02H,R6
0B7D 8D00        R     MOV     pwm_input+01H,R5
0B7F 8C00        R     MOV     pwm_input,R4
                                           ; SOURCE LINE # 783
0B81 E500        R     MOV     A,index
0B83 701E              JNZ     ?C0108
                                           ; SOURCE LINE # 784
0B85 7F00              MOV     R7,#00H
0B87 7E00              MOV     R6,#00H
0B89 7D00              MOV     R5,#00H
0B8B 7C00              MOV     R4,#00H
0B8D AB00        R     MOV     R3,pwm_input+03H
0B8F AA00        R     MOV     R2,pwm_input+02H
0B91 A900        R     MOV     R1,pwm_input+01H
0B93 A800        R     MOV     R0,pwm_input
0B95 C3                CLR     C
0B96 120000      E     LCALL   ?C?SLCMP
0B99 4004              JC      ?C0109
                                           ; SOURCE LINE # 785
0B9B D200        R     SETB    dirM0
0B9D 8020              SJMP    ?C0043
0B9F         ?C0109:
                                           ; SOURCE LINE # 788
0B9F C200        R     CLR     dirM0
                                           ; SOURCE LINE # 790
0BA1 801C              SJMP    ?C0043
0BA3         ?C0108:
                                           ; SOURCE LINE # 791
0BA3 7F00              MOV     R7,#00H
0BA5 7E00              MOV     R6,#00H
0BA7 7D00              MOV     R5,#00H
0BA9 7C00              MOV     R4,#00H
0BAB AB00        R     MOV     R3,pwm_input+03H
0BAD AA00        R     MOV     R2,pwm_input+02H
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 60  

0BAF A900        R     MOV     R1,pwm_input+01H
0BB1 A800        R     MOV     R0,pwm_input
0BB3 C3                CLR     C
0BB4 120000      E     LCALL   ?C?SLCMP
0BB7 4004              JC      ?C0112
                                           ; SOURCE LINE # 792
0BB9 D200        R     SETB    dirM1
0BBB 8002              SJMP    ?C0043
0BBD         ?C0112:
                                           ; SOURCE LINE # 795
0BBD C200        R     CLR     dirM1
                                           ; SOURCE LINE # 797
                                           ; SOURCE LINE # 799
                                           ; SOURCE LINE # 801
                                           ; SOURCE LINE # 802
                                           ; SOURCE LINE # 803
0BBF         ?C0043:
                                           ; SOURCE LINE # 805
0BBF 300005            JNB     interrupt_flag,?C0115
                                           ; SOURCE LINE # 806
0BC2 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 807
0BC4 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 808
0BC7         ?C0115:
                                           ; SOURCE LINE # 811
0BC7 7F64              MOV     R7,#064H
0BC9 7E00              MOV     R6,#00H
0BCB 7D00              MOV     R5,#00H
0BCD 7C00              MOV     R4,#00H
0BCF AB00        R     MOV     R3,pwm_input+03H
0BD1 AA00        R     MOV     R2,pwm_input+02H
0BD3 A900        R     MOV     R1,pwm_input+01H
0BD5 A800        R     MOV     R0,pwm_input
0BD7 D3                SETB    C
0BD8 120000      E     LCALL   ?C?SLCMP
0BDB 4010              JC      ?C0116
                                           ; SOURCE LINE # 812
0BDD 7F64              MOV     R7,#064H
0BDF 7E00              MOV     R6,#00H
0BE1 7D00              MOV     R5,#00H
0BE3 7C00              MOV     R4,#00H
0BE5 8F00        R     MOV     pwm_input+03H,R7
0BE7 8E00        R     MOV     pwm_input+02H,R6
0BE9 8D00        R     MOV     pwm_input+01H,R5
0BEB 8C00        R     MOV     pwm_input,R4
0BED         ?C0116:
                                           ; SOURCE LINE # 813
0BED 7F9C              MOV     R7,#09CH
0BEF 7EFF              MOV     R6,#0FFH
0BF1 7DFF              MOV     R5,#0FFH
0BF3 7CFF              MOV     R4,#0FFH
0BF5 AB00        R     MOV     R3,pwm_input+03H
0BF7 AA00        R     MOV     R2,pwm_input+02H
0BF9 A900        R     MOV     R1,pwm_input+01H
0BFB A800        R     MOV     R0,pwm_input
0BFD C3                CLR     C
0BFE 120000      E     LCALL   ?C?SLCMP
0C01 5010              JNC     ?C0117
                                           ; SOURCE LINE # 814
0C03 7F9C              MOV     R7,#09CH
0C05 7EFF              MOV     R6,#0FFH
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 61  

0C07 7DFF              MOV     R5,#0FFH
0C09 7CFF              MOV     R4,#0FFH
0C0B 8F00        R     MOV     pwm_input+03H,R7
0C0D 8E00        R     MOV     pwm_input+02H,R6
0C0F 8D00        R     MOV     pwm_input+01H,R5
0C11 8C00        R     MOV     pwm_input,R4
0C13         ?C0117:
                                           ; SOURCE LINE # 816
0C13 300005            JNB     interrupt_flag,?C0118
                                           ; SOURCE LINE # 817
0C16 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 818
0C18 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 819
0C1B         ?C0118:
                                           ; SOURCE LINE # 822
0C1B 900000      E     MOV     DPTR,#c_mem+036H
0C1E E0                MOVX    A,@DPTR
0C1F FF                MOV     R7,A
0C20 EF                MOV     A,R7
0C21 6401              XRL     A,#01H
0C23 6039              JZ      ?C0119
                                           ; SOURCE LINE # 823
0C25 AF00        R     MOV     R7,pwm_input+03H
0C27 AE00        R     MOV     R6,pwm_input+02H
0C29 AD00        R     MOV     R5,pwm_input+01H
0C2B AC00        R     MOV     R4,pwm_input
0C2D 780A              MOV     R0,#0AH
0C2F 120000      E     LCALL   ?C?LSHL
0C32 7B64              MOV     R3,#064H
0C34 7A00              MOV     R2,#00H
0C36 7900              MOV     R1,#00H
0C38 7800              MOV     R0,#00H
0C3A 120000      E     LCALL   ?C?SLDIV
0C3D A804              MOV     R0,AR4
0C3F A905              MOV     R1,AR5
0C41 AA06              MOV     R2,AR6
0C43 AB07              MOV     R3,AR7
0C45 900000      E     MOV     DPTR,#dev_pwm_limit
0C48 E0                MOVX    A,@DPTR
0C49 FF                MOV     R7,A
0C4A E4                CLR     A
0C4B FC                MOV     R4,A
0C4C FD                MOV     R5,A
0C4D FE                MOV     R6,A
0C4E 120000      E     LCALL   ?C?LMUL
0C51 780A              MOV     R0,#0AH
0C53 120000      E     LCALL   ?C?SLSHR
0C56 8F00        R     MOV     pwm_input+03H,R7
0C58 8E00        R     MOV     pwm_input+02H,R6
0C5A 8D00        R     MOV     pwm_input+01H,R5
0C5C 8C00        R     MOV     pwm_input,R4
0C5E         ?C0119:
                                           ; SOURCE LINE # 827
0C5E 300011            JNB     dirM0,?C0120
                                           ; SOURCE LINE # 828
0C61 300007            JNB     dirM1,?C0121
                                           ; SOURCE LINE # 829
0C64 7F03              MOV     R7,#03H
0C66 120000      E     LCALL   _MOTOR_DIR_Write
0C69 8016              SJMP    ?C0123
0C6B         ?C0121:
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 62  

                                           ; SOURCE LINE # 831
0C6B 7F01              MOV     R7,#01H
0C6D 120000      E     LCALL   _MOTOR_DIR_Write
                                           ; SOURCE LINE # 832
0C70 800F              SJMP    ?C0123
0C72         ?C0120:
                                           ; SOURCE LINE # 833
                                           ; SOURCE LINE # 834
0C72 300007            JNB     dirM1,?C0124
                                           ; SOURCE LINE # 835
0C75 7F02              MOV     R7,#02H
0C77 120000      E     LCALL   _MOTOR_DIR_Write
0C7A 8005              SJMP    ?C0123
0C7C         ?C0124:
                                           ; SOURCE LINE # 837
0C7C 7F00              MOV     R7,#00H
0C7E 120000      E     LCALL   _MOTOR_DIR_Write
                                           ; SOURCE LINE # 838
0C81         ?C0123:
                                           ; SOURCE LINE # 840
0C81 300005            JNB     interrupt_flag,?C0126
                                           ; SOURCE LINE # 841
0C84 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 842
0C86 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 843
0C89         ?C0126:
                                           ; SOURCE LINE # 845
0C89 E500        R     MOV     A,index
0C8B 704D              JNZ     ?C0127
                                           ; SOURCE LINE # 846
0C8D 7F00              MOV     R7,#00H
0C8F 7E00              MOV     R6,#00H
0C91 7D00              MOV     R5,#00H
0C93 7C00              MOV     R4,#00H
0C95 AB00        R     MOV     R3,pwm_input+03H
0C97 AA00        R     MOV     R2,pwm_input+02H
0C99 A900        R     MOV     R1,pwm_input+01H
0C9B A800        R     MOV     R0,pwm_input
0C9D D3                SETB    C
0C9E 120000      E     LCALL   ?C?SLCMP
0CA1 4006              JC      ?C0128
0CA3 7E00              MOV     R6,#00H
0CA5 7F01              MOV     R7,#01H
0CA7 8020              SJMP    ?C0129
0CA9         ?C0128:
0CA9 7F00              MOV     R7,#00H
0CAB 7E00              MOV     R6,#00H
0CAD 7D00              MOV     R5,#00H
0CAF 7C00              MOV     R4,#00H
0CB1 AB00        R     MOV     R3,pwm_input+03H
0CB3 AA00        R     MOV     R2,pwm_input+02H
0CB5 A900        R     MOV     R1,pwm_input+01H
0CB7 A800        R     MOV     R0,pwm_input
0CB9 C3                CLR     C
0CBA 120000      E     LCALL   ?C?SLCMP
0CBD 5006              JNC     ?C0130
0CBF 7EFF              MOV     R6,#0FFH
0CC1 7FFF              MOV     R7,#0FFH
0CC3 8004              SJMP    ?C0131
0CC5         ?C0130:
0CC5 7E00              MOV     R6,#00H
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 63  

0CC7 7F00              MOV     R7,#00H
0CC9         ?C0131:
0CC9         ?C0129:
0CC9 900000      E     MOV     DPTR,#pwm_sign
0CCC EF                MOV     A,R7
0CCD F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 847
0CCE AE00        R     MOV     R6,pwm_input+02H
0CD0 AF00        R     MOV     R7,pwm_input+03H
0CD2 120000      E     LCALL   _abs
0CD5 120000      E     LCALL   _PWM_MOTORS_WriteCompare1
                                           ; SOURCE LINE # 848
0CD8 804B              SJMP    ?C0132
0CDA         ?C0127:
                                           ; SOURCE LINE # 849
                                           ; SOURCE LINE # 850
0CDA 7F00              MOV     R7,#00H
0CDC 7E00              MOV     R6,#00H
0CDE 7D00              MOV     R5,#00H
0CE0 7C00              MOV     R4,#00H
0CE2 AB00        R     MOV     R3,pwm_input+03H
0CE4 AA00        R     MOV     R2,pwm_input+02H
0CE6 A900        R     MOV     R1,pwm_input+01H
0CE8 A800        R     MOV     R0,pwm_input
0CEA D3                SETB    C
0CEB 120000      E     LCALL   ?C?SLCMP
0CEE 4006              JC      ?C0133
0CF0 7E00              MOV     R6,#00H
0CF2 7F01              MOV     R7,#01H
0CF4 8020              SJMP    ?C0134
0CF6         ?C0133:
0CF6 7F00              MOV     R7,#00H
0CF8 7E00              MOV     R6,#00H
0CFA 7D00              MOV     R5,#00H
0CFC 7C00              MOV     R4,#00H
0CFE AB00        R     MOV     R3,pwm_input+03H
0D00 AA00        R     MOV     R2,pwm_input+02H
0D02 A900        R     MOV     R1,pwm_input+01H
0D04 A800        R     MOV     R0,pwm_input
0D06 C3                CLR     C
0D07 120000      E     LCALL   ?C?SLCMP
0D0A 5006              JNC     ?C0135
0D0C 7EFF              MOV     R6,#0FFH
0D0E 7FFF              MOV     R7,#0FFH
0D10 8004              SJMP    ?C0136
0D12         ?C0135:
0D12 7E00              MOV     R6,#00H
0D14 7F00              MOV     R7,#00H
0D16         ?C0136:
0D16         ?C0134:
0D16 900000      E     MOV     DPTR,#pwm_sign+01H
0D19 EF                MOV     A,R7
0D1A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 851
0D1B AE00        R     MOV     R6,pwm_input+02H
0D1D AF00        R     MOV     R7,pwm_input+03H
0D1F 120000      E     LCALL   _abs
0D22 120000      E     LCALL   _PWM_MOTORS_WriteCompare2
                                           ; SOURCE LINE # 852
0D25         ?C0132:
                                           ; SOURCE LINE # 854
0D25 300005            JNB     interrupt_flag,?C0042
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 64  

                                           ; SOURCE LINE # 855
0D28 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 856
0D2A 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 857
                                           ; SOURCE LINE # 858
0D2D         ?C0042:
0D2D 22                RET     
             ; FUNCTION _motor_control (END)

             ; FUNCTION analog_read_end (BEGIN)
                                           ; SOURCE LINE # 864
0000         ?C0138:
                                           ; SOURCE LINE # 885
0000 120000      E     LCALL   ADC_STATUS_Read
0003 EF                MOV     A,R7
0004 700A              JNZ     ?C0139
                                           ; SOURCE LINE # 886
0006 3000F7            JNB     interrupt_flag,?C0138
                                           ; SOURCE LINE # 887
0009 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 888
000B 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 889
                                           ; SOURCE LINE # 890
000E 80F0              SJMP    ?C0138
0010         ?C0139:
                                           ; SOURCE LINE # 893
0010 900000      E     MOV     DPTR,#ADC_buf
0013 E0                MOVX    A,@DPTR
0014 FE                MOV     R6,A
0015 A3                INC     DPTR
0016 E0                MOVX    A,@DPTR
0017 FF                MOV     R7,A
0018 EF                MOV     A,R7
0019 249A              ADD     A,#09AH
001B FF                MOV     R7,A
001C EE                MOV     A,R6
001D 34F9              ADDC    A,#0F9H
001F FE                MOV     R6,A
0020 EE                MOV     A,R6
0021 33                RLC     A
0022 95E0              SUBB    A,ACC
0024 FD                MOV     R5,A
0025 FC                MOV     R4,A
0026 7BA0              MOV     R3,#0A0H
0028 7A07              MOV     R2,#07H
002A 7900              MOV     R1,#00H
002C 7800              MOV     R0,#00H
002E 120000      E     LCALL   ?C?LMUL
0031 7807              MOV     R0,#07H
0033 120000      E     LCALL   ?C?SLSHR
0036 900000      E     MOV     DPTR,#dev_tension
0039 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 895
003C 300005            JNB     interrupt_flag,?C0141
                                           ; SOURCE LINE # 896
003F C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 897
0041 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 898
0044         ?C0141:
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 65  

                                           ; SOURCE LINE # 902
0044 7F00              MOV     R7,#00H
0046 7E00              MOV     R6,#00H
0048 7D00              MOV     R5,#00H
004A 7C00              MOV     R4,#00H
004C 900000      E     MOV     DPTR,#dev_tension
004F 120000      E     LCALL   ?C?LLDXDATA0
0052 D3                SETB    C
0053 120000      E     LCALL   ?C?SLCMP
0056 5003              JNC     $ + 5H
0058 020000      R     LJMP    ?C0142
                                           ; SOURCE LINE # 905
005B 120000      R     LCALL   pwm_limit_search
                                           ; SOURCE LINE # 909
005E 300005            JNB     interrupt_flag,?C0143
                                           ; SOURCE LINE # 910
0061 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 911
0063 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 912
0066         ?C0143:
                                           ; SOURCE LINE # 915
0066 900000      E     MOV     DPTR,#ADC_buf+02H
0069 E0                MOVX    A,@DPTR
006A FE                MOV     R6,A
006B A3                INC     DPTR
006C E0                MOVX    A,@DPTR
006D FF                MOV     R7,A
006E EF                MOV     A,R7
006F 249A              ADD     A,#09AH
0071 FF                MOV     R7,A
0072 EE                MOV     A,R6
0073 34F9              ADDC    A,#0F9H
0075 FE                MOV     R6,A
0076 EE                MOV     A,R6
0077 33                RLC     A
0078 95E0              SUBB    A,ACC
007A FD                MOV     R5,A
007B FC                MOV     R4,A
007C 7BAB              MOV     R3,#0ABH
007E 7A64              MOV     R2,#064H
0080 7900              MOV     R1,#00H
0082 7800              MOV     R0,#00H
0084 120000      E     LCALL   ?C?LMUL
0087 780D              MOV     R0,#0DH
0089 120000      E     LCALL   ?C?SLSHR
008C 900000      E     MOV     DPTR,#pwm_sign
008F E0                MOVX    A,@DPTR
0090 FD                MOV     R5,A
0091 ED                MOV     A,R5
0092 33                RLC     A
0093 95E0              SUBB    A,ACC
0095 FC                MOV     R4,A
0096 120000      E     LCALL   ?C?IMUL
0099 EE                MOV     A,R6
009A 33                RLC     A
009B 95E0              SUBB    A,ACC
009D FD                MOV     R5,A
009E FC                MOV     R4,A
009F 120000      E     LCALL   _filter_i1
00A2 900000      E     MOV     DPTR,#g_meas+08H
00A5 EE                MOV     A,R6
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 66  

00A6 F0                MOVX    @DPTR,A
00A7 A3                INC     DPTR
00A8 EF                MOV     A,R7
00A9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 919
00AA 300005            JNB     interrupt_flag,?C0144
                                           ; SOURCE LINE # 920
00AD C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 921
00AF 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 922
00B2         ?C0144:
                                           ; SOURCE LINE # 923
00B2 900000      E     MOV     DPTR,#ADC_buf+04H
00B5 E0                MOVX    A,@DPTR
00B6 FE                MOV     R6,A
00B7 A3                INC     DPTR
00B8 E0                MOVX    A,@DPTR
00B9 FF                MOV     R7,A
00BA EF                MOV     A,R7
00BB 249A              ADD     A,#09AH
00BD FF                MOV     R7,A
00BE EE                MOV     A,R6
00BF 34F9              ADDC    A,#0F9H
00C1 FE                MOV     R6,A
00C2 EE                MOV     A,R6
00C3 33                RLC     A
00C4 95E0              SUBB    A,ACC
00C6 FD                MOV     R5,A
00C7 FC                MOV     R4,A
00C8 7BAB              MOV     R3,#0ABH
00CA 7A64              MOV     R2,#064H
00CC 7900              MOV     R1,#00H
00CE 7800              MOV     R0,#00H
00D0 120000      E     LCALL   ?C?LMUL
00D3 780D              MOV     R0,#0DH
00D5 120000      E     LCALL   ?C?SLSHR
00D8 900000      E     MOV     DPTR,#pwm_sign+01H
00DB E0                MOVX    A,@DPTR
00DC FD                MOV     R5,A
00DD ED                MOV     A,R5
00DE 33                RLC     A
00DF 95E0              SUBB    A,ACC
00E1 FC                MOV     R4,A
00E2 120000      E     LCALL   ?C?IMUL
00E5 EE                MOV     A,R6
00E6 33                RLC     A
00E7 95E0              SUBB    A,ACC
00E9 FD                MOV     R5,A
00EA FC                MOV     R4,A
00EB 120000      E     LCALL   _filter_i2
00EE 900000      E     MOV     DPTR,#g_meas+0AH
00F1 EE                MOV     A,R6
00F2 F0                MOVX    @DPTR,A
00F3 A3                INC     DPTR
00F4 EF                MOV     A,R7
00F5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 927
00F6 300016            JNB     interrupt_flag,?C0147
                                           ; SOURCE LINE # 928
00F9 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 929
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 67  

00FB 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 930
                                           ; SOURCE LINE # 931
00FE 22                RET     
00FF         ?C0142:
                                           ; SOURCE LINE # 932
                                           ; SOURCE LINE # 933
00FF 900000      E     MOV     DPTR,#g_meas+08H
0102 E4                CLR     A
0103 F0                MOVX    @DPTR,A
0104 A3                INC     DPTR
0105 E4                CLR     A
0106 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 934
0107 900000      E     MOV     DPTR,#g_meas+0AH
010A E4                CLR     A
010B F0                MOVX    @DPTR,A
010C A3                INC     DPTR
010D E4                CLR     A
010E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 935
                                           ; SOURCE LINE # 936
010F         ?C0147:
010F 22                RET     
             ; FUNCTION analog_read_end (END)

             ; FUNCTION _encoder_reading (BEGIN)
                                           ; SOURCE LINE # 942
0000 900000      R     MOV     DPTR,#idx
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
0005 900000      R     MOV     DPTR,#flag
0008 ED                MOV     A,R5
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 943
                                           ; SOURCE LINE # 944
000A 900000      R     MOV     DPTR,#idx
000D E0                MOVX    A,@DPTR
000E FF                MOV     R7,A
000F 8F00        R     MOV     index,R7
                                           ; SOURCE LINE # 962
0011 E500        R     MOV     A,index
0013 C3                CLR     C
0014 9402              SUBB    A,#02H
0016 4003              JC      $ + 5H
0018 020000      R     LJMP    ?C0149
001B         ?C0148:
                                           ; SOURCE LINE # 965
001B 300032            JNB     reset_last_value_flag,?C0150
                                           ; SOURCE LINE # 966
001E 900000      R     MOV     DPTR,#jj
0021 7402              MOV     A,#02H
0023 F0                MOVX    @DPTR,A
0024         ?C0151:
0024 900000      R     MOV     DPTR,#jj
0027 E0                MOVX    A,@DPTR
0028 FF                MOV     R7,A
0029 14                DEC     A
002A F0                MOVX    @DPTR,A
002B EF                MOV     A,R7
002C 6020              JZ      ?C0152
                                           ; SOURCE LINE # 967
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 68  

002E 7F00              MOV     R7,#00H
0030 7E00              MOV     R6,#00H
0032 7D00              MOV     R5,#00H
0034 7C00              MOV     R4,#00H
0036 900000      R     MOV     DPTR,#jj
0039 E0                MOVX    A,@DPTR
003A FB                MOV     R3,A
003B EB                MOV     A,R3
003C 25E0              ADD     A,ACC
003E 25E0              ADD     A,ACC
0040 2400        R     ADD     A,#LOW last_value_encoder
0042 F582              MOV     DPL,A
0044 E4                CLR     A
0045 3400        R     ADDC    A,#HIGH last_value_encoder
0047 F583              MOV     DPH,A
0049 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 968
004C 80D6              SJMP    ?C0151
004E         ?C0152:
                                           ; SOURCE LINE # 969
004E C200        E     CLR     reset_last_value_flag
                                           ; SOURCE LINE # 970
0050         ?C0150:
                                           ; SOURCE LINE # 973
0050 E500        R     MOV     A,index
0052 701B              JNZ     ?C0153
                                           ; SOURCE LINE # 974
0054 120000      E     LCALL   SHIFTREG_ENC_1_ReadData
0057 EF                MOV     A,R7
0058 54FF              ANL     A,#0FFH
005A FF                MOV     R7,A
005B EE                MOV     A,R6
005C 54FF              ANL     A,#0FFH
005E FE                MOV     R6,A
005F ED                MOV     A,R5
0060 5403              ANL     A,#03H
0062 FD                MOV     R5,A
0063 EC                MOV     A,R4
0064 5400              ANL     A,#00H
0066 FC                MOV     R4,A
0067 900000      R     MOV     DPTR,#data_encoder
006A 120000      E     LCALL   ?C?LSTXDATA
006D 8059              SJMP    ?C0154
006F         ?C0153:
                                           ; SOURCE LINE # 975
                                           ; SOURCE LINE # 976
006F E500        R     MOV     A,index
0071 B4011B            CJNE    A,#01H,?C0155
                                           ; SOURCE LINE # 977
0074 120000      E     LCALL   SHIFTREG_ENC_2_ReadData
0077 EF                MOV     A,R7
0078 54FF              ANL     A,#0FFH
007A FF                MOV     R7,A
007B EE                MOV     A,R6
007C 54FF              ANL     A,#0FFH
007E FE                MOV     R6,A
007F ED                MOV     A,R5
0080 5403              ANL     A,#03H
0082 FD                MOV     R5,A
0083 EC                MOV     A,R4
0084 5400              ANL     A,#00H
0086 FC                MOV     R4,A
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 69  

0087 900000      R     MOV     DPTR,#data_encoder
008A 120000      E     LCALL   ?C?LSTXDATA
008D 8039              SJMP    ?C0154
008F         ?C0155:
                                           ; SOURCE LINE # 978
                                           ; SOURCE LINE # 979
008F E500        R     MOV     A,index
0091 B4021B            CJNE    A,#02H,?C0157
                                           ; SOURCE LINE # 980
0094 120000      E     LCALL   SHIFTREG_ENC_3_ReadData
0097 EF                MOV     A,R7
0098 54FF              ANL     A,#0FFH
009A FF                MOV     R7,A
009B EE                MOV     A,R6
009C 54FF              ANL     A,#0FFH
009E FE                MOV     R6,A
009F ED                MOV     A,R5
00A0 5403              ANL     A,#03H
00A2 FD                MOV     R5,A
00A3 EC                MOV     A,R4
00A4 5400              ANL     A,#00H
00A6 FC                MOV     R4,A
00A7 900000      R     MOV     DPTR,#data_encoder
00AA 120000      E     LCALL   ?C?LSTXDATA
00AD 8019              SJMP    ?C0154
00AF         ?C0157:
                                           ; SOURCE LINE # 982
00AF 120000      E     LCALL   SHIFTREG_ENC_4_ReadData
00B2 EF                MOV     A,R7
00B3 54FF              ANL     A,#0FFH
00B5 FF                MOV     R7,A
00B6 EE                MOV     A,R6
00B7 54FF              ANL     A,#0FFH
00B9 FE                MOV     R6,A
00BA ED                MOV     A,R5
00BB 5403              ANL     A,#03H
00BD FD                MOV     R5,A
00BE EC                MOV     A,R4
00BF 5400              ANL     A,#00H
00C1 FC                MOV     R4,A
00C2 900000      R     MOV     DPTR,#data_encoder
00C5 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 983
                                           ; SOURCE LINE # 984
00C8         ?C0154:
                                           ; SOURCE LINE # 986
00C8 7B01              MOV     R3,#01H
00CA 7A00        R     MOV     R2,#HIGH data_encoder
00CC 7900        R     MOV     R1,#LOW data_encoder
00CE 120000      E     LCALL   _check_enc_data
00D1 4003              JC      $ + 5H
00D3 020000      R     LJMP    ?C0149
                                           ; SOURCE LINE # 987
00D6 900000      R     MOV     DPTR,#flag
00D9 E0                MOVX    A,@DPTR
00DA FF                MOV     R7,A
00DB EF                MOV     A,R7
00DC 6031              JZ      ?C0160
                                           ; SOURCE LINE # 988
00DE 900000      R     MOV     DPTR,#data_encoder
00E1 120000      E     LCALL   ?C?LLDXDATA
00E4 EF                MOV     A,R7
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 70  

00E5 54C0              ANL     A,#0C0H
00E7 FF                MOV     R7,A
00E8 EE                MOV     A,R6
00E9 54FF              ANL     A,#0FFH
00EB FE                MOV     R6,A
00EC ED                MOV     A,R5
00ED 5403              ANL     A,#03H
00EF FD                MOV     R5,A
00F0 EC                MOV     A,R4
00F1 5400              ANL     A,#00H
00F3 FC                MOV     R4,A
00F4 7802              MOV     R0,#02H
00F6 120000      E     LCALL   ?C?ULSHR
00F9 C3                CLR     C
00FA E4                CLR     A
00FB 9F                SUBB    A,R7
00FC FF                MOV     R7,A
00FD 7480              MOV     A,#080H
00FF 9E                SUBB    A,R6
0100 FE                MOV     R6,A
0101 EE                MOV     A,R6
0102 33                RLC     A
0103 95E0              SUBB    A,ACC
0105 FD                MOV     R5,A
0106 FC                MOV     R4,A
0107 900000      R     MOV     DPTR,#value_encoder
010A 120000      E     LCALL   ?C?LSTXDATA
010D 8048              SJMP    ?C0161
010F         ?C0160:
                                           ; SOURCE LINE # 990
010F 900000      R     MOV     DPTR,#data_encoder
0112 120000      E     LCALL   ?C?LLDXDATA
0115 EF                MOV     A,R7
0116 54C0              ANL     A,#0C0H
0118 FF                MOV     R7,A
0119 EE                MOV     A,R6
011A 54FF              ANL     A,#0FFH
011C FE                MOV     R6,A
011D ED                MOV     A,R5
011E 5403              ANL     A,#03H
0120 FD                MOV     R5,A
0121 EC                MOV     A,R4
0122 5400              ANL     A,#00H
0124 FC                MOV     R4,A
0125 7802              MOV     R0,#02H
0127 120000      E     LCALL   ?C?ULSHR
012A C3                CLR     C
012B E4                CLR     A
012C 9F                SUBB    A,R7
012D FB                MOV     R3,A
012E 7480              MOV     A,#080H
0130 9E                SUBB    A,R6
0131 FA                MOV     R2,A
0132 AF00        R     MOV     R7,index
0134 EF                MOV     A,R7
0135 25E0              ADD     A,ACC
0137 25E0              ADD     A,ACC
0139 2400        E     ADD     A,#LOW g_mem+039H
013B F582              MOV     DPL,A
013D E4                CLR     A
013E 3400        E     ADDC    A,#HIGH g_mem+039H
0140 F583              MOV     DPH,A
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 71  

0142 120000      E     LCALL   ?C?LLDXDATA
0145 EB                MOV     A,R3
0146 2F                ADD     A,R7
0147 FF                MOV     R7,A
0148 EA                MOV     A,R2
0149 3E                ADDC    A,R6
014A FE                MOV     R6,A
014B EE                MOV     A,R6
014C 33                RLC     A
014D 95E0              SUBB    A,ACC
014F FD                MOV     R5,A
0150 FC                MOV     R4,A
0151 900000      R     MOV     DPTR,#value_encoder
0154 120000      E     LCALL   ?C?LSTXDATA
0157         ?C0161:
                                           ; SOURCE LINE # 993
0157 300020            JNB     only_first_time,?C0162
                                           ; SOURCE LINE # 994
015A 900000      R     MOV     DPTR,#value_encoder
015D 120000      E     LCALL   ?C?LLDXDATA
0160 AB00        R     MOV     R3,index
0162 EB                MOV     A,R3
0163 25E0              ADD     A,ACC
0165 25E0              ADD     A,ACC
0167 2400        R     ADD     A,#LOW last_value_encoder
0169 F582              MOV     DPL,A
016B E4                CLR     A
016C 3400        R     ADDC    A,#HIGH last_value_encoder
016E F583              MOV     DPH,A
0170 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 996
0173 E500        R     MOV     A,index
0175 B40102            CJNE    A,#01H,?C0162
                                           ; SOURCE LINE # 997
0178 C200        R     CLR     only_first_time
                                           ; SOURCE LINE # 998
017A         ?C0162:
                                           ; SOURCE LINE # 1001
017A AF00        R     MOV     R7,index
017C EF                MOV     A,R7
017D 25E0              ADD     A,ACC
017F 25E0              ADD     A,ACC
0181 2400        R     ADD     A,#LOW last_value_encoder
0183 F582              MOV     DPL,A
0185 E4                CLR     A
0186 3400        R     ADDC    A,#HIGH last_value_encoder
0188 F583              MOV     DPH,A
018A 120000      E     LCALL   ?C?LLDXDATA0
018D 900000      R     MOV     DPTR,#value_encoder
0190 120000      E     LCALL   ?C?LLDXDATA
0193 120000      E     LCALL   ?C?LSUB
0196 900000      R     MOV     DPTR,#aux
0199 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1021
019C 7F00              MOV     R7,#00H
019E 7EC0              MOV     R6,#0C0H
01A0 7D00              MOV     R5,#00H
01A2 7C00              MOV     R4,#00H
01A4 900000      R     MOV     DPTR,#aux
01A7 120000      E     LCALL   ?C?LLDXDATA0
01AA D3                SETB    C
01AB 120000      E     LCALL   ?C?SLCMP
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 72  

01AE 4011              JC      ?C0164
                                           ; SOURCE LINE # 1022
01B0 AF00        R     MOV     R7,index
01B2 7400        E     MOV     A,#LOW g_meas+0CH
01B4 2F                ADD     A,R7
01B5 F582              MOV     DPL,A
01B7 E4                CLR     A
01B8 3400        E     ADDC    A,#HIGH g_meas+0CH
01BA F583              MOV     DPH,A
01BC E0                MOVX    A,@DPTR
01BD 14                DEC     A
01BE F0                MOVX    @DPTR,A
01BF 805F              SJMP    ?C0165
01C1         ?C0164:
                                           ; SOURCE LINE # 1023
                                           ; SOURCE LINE # 1024
01C1 7F00              MOV     R7,#00H
01C3 7E40              MOV     R6,#040H
01C5 7DFF              MOV     R5,#0FFH
01C7 7CFF              MOV     R4,#0FFH
01C9 900000      R     MOV     DPTR,#aux
01CC 120000      E     LCALL   ?C?LLDXDATA0
01CF C3                CLR     C
01D0 120000      E     LCALL   ?C?SLCMP
01D3 5011              JNC     ?C0166
                                           ; SOURCE LINE # 1025
01D5 AF00        R     MOV     R7,index
01D7 7400        E     MOV     A,#LOW g_meas+0CH
01D9 2F                ADD     A,R7
01DA F582              MOV     DPL,A
01DC E4                CLR     A
01DD 3400        E     ADDC    A,#HIGH g_meas+0CH
01DF F583              MOV     DPH,A
01E1 E0                MOVX    A,@DPTR
01E2 04                INC     A
01E3 F0                MOVX    @DPTR,A
01E4 803A              SJMP    ?C0165
01E6         ?C0166:
                                           ; SOURCE LINE # 1026
                                           ; SOURCE LINE # 1027
01E6 900000      R     MOV     DPTR,#aux
01E9 120000      E     LCALL   ?C?LLDXDATA
01EC 120000      E     LCALL   _abs
01EF D3                SETB    C
01F0 EF                MOV     A,R7
01F1 9400              SUBB    A,#00H
01F3 EE                MOV     A,R6
01F4 6480              XRL     A,#080H
01F6 94C0              SUBB    A,#0C0H
01F8 4026              JC      ?C0165
                                           ; SOURCE LINE # 1028
01FA AF00        R     MOV     R7,index
01FC 7400        R     MOV     A,#LOW error
01FE 2F                ADD     A,R7
01FF F582              MOV     DPL,A
0201 E4                CLR     A
0202 3400        R     ADDC    A,#HIGH error
0204 F583              MOV     DPH,A
0206 E0                MOVX    A,@DPTR
0207 04                INC     A
0208 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1029
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 73  

0209 AF00        R     MOV     R7,index
020B 7400        R     MOV     A,#LOW error
020D 2F                ADD     A,R7
020E F582              MOV     DPL,A
0210 E4                CLR     A
0211 3400        R     ADDC    A,#HIGH error
0213 F583              MOV     DPH,A
0215 E0                MOVX    A,@DPTR
0216 FF                MOV     R7,A
0217 EF                MOV     A,R7
0218 C3                CLR     C
0219 940A              SUBB    A,#0AH
021B 5003              JNC     $ + 5H
021D 020000      R     LJMP    ?C0149
0220         ?C0169:
                                           ; SOURCE LINE # 1032
                                           ; SOURCE LINE # 1033
                                           ; SOURCE LINE # 1034
0220         ?C0165:
                                           ; SOURCE LINE # 1036
0220 AF00        R     MOV     R7,index
0222 7400        R     MOV     A,#LOW error
0224 2F                ADD     A,R7
0225 F582              MOV     DPL,A
0227 E4                CLR     A
0228 3400        R     ADDC    A,#HIGH error
022A F583              MOV     DPH,A
022C E4                CLR     A
022D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1038
022E 900000      R     MOV     DPTR,#value_encoder
0231 120000      E     LCALL   ?C?LLDXDATA
0234 AB00        R     MOV     R3,index
0236 EB                MOV     A,R3
0237 25E0              ADD     A,ACC
0239 25E0              ADD     A,ACC
023B 2400        R     ADD     A,#LOW last_value_encoder
023D F582              MOV     DPL,A
023F E4                CLR     A
0240 3400        R     ADDC    A,#HIGH last_value_encoder
0242 F583              MOV     DPH,A
0244 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1040
0247 900000      R     MOV     DPTR,#value_encoder
024A 120000      E     LCALL   ?C?LLDXDATA
024D C004              PUSH    AR4
024F C005              PUSH    AR5
0251 C006              PUSH    AR6
0253 C007              PUSH    AR7
0255 AF00        R     MOV     R7,index
0257 7400        E     MOV     A,#LOW g_meas+0CH
0259 2F                ADD     A,R7
025A F582              MOV     DPL,A
025C E4                CLR     A
025D 3400        E     ADDC    A,#HIGH g_meas+0CH
025F F583              MOV     DPH,A
0261 E0                MOVX    A,@DPTR
0262 FF                MOV     R7,A
0263 EF                MOV     A,R7
0264 33                RLC     A
0265 95E0              SUBB    A,ACC
0267 FE                MOV     R6,A
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 74  

0268 FD                MOV     R5,A
0269 FC                MOV     R4,A
026A 7810              MOV     R0,#010H
026C 120000      E     LCALL   ?C?LSHL
026F A804              MOV     R0,AR4
0271 A905              MOV     R1,AR5
0273 AA06              MOV     R2,AR6
0275 AB07              MOV     R3,AR7
0277 D007              POP     AR7
0279 D006              POP     AR6
027B D005              POP     AR5
027D D004              POP     AR4
027F 120000      E     LCALL   ?C?LADD
0282 900000      R     MOV     DPTR,#value_encoder
0285 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1042
0288 AF00        R     MOV     R7,index
028A EF                MOV     A,R7
028B 25E0              ADD     A,ACC
028D 25E0              ADD     A,ACC
028F 2400        E     ADD     A,#LOW c_mem+041H
0291 F582              MOV     DPL,A
0293 E4                CLR     A
0294 3400        E     ADDC    A,#HIGH c_mem+041H
0296 F583              MOV     DPH,A
0298 120000      E     LCALL   ?C?LLDXDATA
029B 7B00              MOV     R3,#00H
029D 7A00              MOV     R2,#00H
029F 7980              MOV     R1,#080H
02A1 783F              MOV     R0,#03FH
02A3 120000      E     LCALL   ?C?FPCMP3
02A6 6029              JZ      ?C0170
                                           ; SOURCE LINE # 1043
02A8 900000      R     MOV     DPTR,#value_encoder
02AB 120000      E     LCALL   ?C?LLDXDATA
02AE EC                MOV     A,R4
02AF 120000      E     LCALL   ?C?FCASTL
02B2 AB00        R     MOV     R3,index
02B4 EB                MOV     A,R3
02B5 25E0              ADD     A,ACC
02B7 25E0              ADD     A,ACC
02B9 2400        E     ADD     A,#LOW c_mem+041H
02BB F582              MOV     DPL,A
02BD E4                CLR     A
02BE 3400        E     ADDC    A,#HIGH c_mem+041H
02C0 F583              MOV     DPH,A
02C2 120000      E     LCALL   ?C?LLDXDATA0
02C5 120000      E     LCALL   ?C?FPMUL
02C8 120000      E     LCALL   ?C?CASTF
02CB 900000      R     MOV     DPTR,#value_encoder
02CE 120000      E     LCALL   ?C?LSTXDATA
02D1         ?C0170:
                                           ; SOURCE LINE # 1045
02D1 900000      R     MOV     DPTR,#value_encoder
02D4 120000      E     LCALL   ?C?LLDXDATA
02D7 AB00        R     MOV     R3,index
02D9 EB                MOV     A,R3
02DA 25E0              ADD     A,ACC
02DC 25E0              ADD     A,ACC
02DE 2400        E     ADD     A,#LOW g_meas
02E0 F582              MOV     DPL,A
02E2 E4                CLR     A
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 75  

02E3 3400        E     ADDC    A,#HIGH g_meas
02E5 F583              MOV     DPH,A
02E7 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1046
                                           ; SOURCE LINE # 1068
02EA         ?C0149:
02EA 22                RET     
             ; FUNCTION _encoder_reading (END)

             ; FUNCTION pwm_limit_search (BEGIN)
                                           ; SOURCE LINE # 1180
                                           ; SOURCE LINE # 1183
0000 750063      R     MOV     max_tension,#063H
0003 75009C      R     MOV     max_tension+01H,#09CH
                                           ; SOURCE LINE # 1184
0006 750039      R     MOV     max_tension_6v_mod,#039H
0009 75009E      R     MOV     max_tension_6v_mod+01H,#09EH
                                           ; SOURCE LINE # 1186
000C 900000      E     MOV     DPTR,#g_mem+07AH
000F E0                MOVX    A,@DPTR
0010 FE                MOV     R6,A
0011 A3                INC     DPTR
0012 E0                MOVX    A,@DPTR
0013 FF                MOV     R7,A
0014 C3                CLR     C
0015 EF                MOV     A,R7
0016 9440              SUBB    A,#040H
0018 EE                MOV     A,R6
0019 941F              SUBB    A,#01FH
001B 5064              JNC     ?C0171
                                           ; SOURCE LINE # 1188
001D AE00        R     MOV     R6,max_tension_6v_mod
001F AF00        R     MOV     R7,max_tension_6v_mod+01H
0021 E4                CLR     A
0022 FC                MOV     R4,A
0023 FD                MOV     R5,A
0024 900000      E     MOV     DPTR,#dev_tension
0027 120000      E     LCALL   ?C?LLDXDATA0
002A D3                SETB    C
002B 120000      E     LCALL   ?C?SLCMP
002E 4006              JC      ?C0172
                                           ; SOURCE LINE # 1189
0030 900000      E     MOV     DPTR,#dev_pwm_limit
0033 E4                CLR     A
0034 F0                MOVX    @DPTR,A
0035 22                RET     
0036         ?C0172:
                                           ; SOURCE LINE # 1191
                                           ; SOURCE LINE # 1192
0036 900000      E     MOV     DPTR,#g_mem+07AH
0039 E0                MOVX    A,@DPTR
003A FE                MOV     R6,A
003B A3                INC     DPTR
003C E0                MOVX    A,@DPTR
003D FF                MOV     R7,A
003E E4                CLR     A
003F FC                MOV     R4,A
0040 FD                MOV     R5,A
0041 900000      E     MOV     DPTR,#dev_tension
0044 120000      E     LCALL   ?C?LLDXDATA0
0047 C3                CLR     C
0048 120000      E     LCALL   ?C?SLCMP
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 76  

004B 5007              JNC     ?C0174
                                           ; SOURCE LINE # 1193
004D 900000      E     MOV     DPTR,#dev_pwm_limit
0050 7464              MOV     A,#064H
0052 F0                MOVX    @DPTR,A
0053 22                RET     
0054         ?C0174:
                                           ; SOURCE LINE # 1194
                                           ; SOURCE LINE # 1195
0054 900000      E     MOV     DPTR,#g_mem+07AH
0057 E0                MOVX    A,@DPTR
0058 FE                MOV     R6,A
0059 A3                INC     DPTR
005A E0                MOVX    A,@DPTR
005B FF                MOV     R7,A
005C AB07              MOV     R3,AR7
005E AA06              MOV     R2,AR6
0060 E4                CLR     A
0061 F9                MOV     R1,A
0062 F8                MOV     R0,A
0063 900000      E     MOV     DPTR,#dev_tension
0066 120000      E     LCALL   ?C?LLDXDATA
0069 120000      E     LCALL   ?C?LSUB
006C 7809              MOV     R0,#09H
006E 120000      E     LCALL   ?C?SLSHR
0071 8F00        R     MOV     index,R7
                                           ; SOURCE LINE # 1196
0073 AF00        R     MOV     R7,index
0075 EF                MOV     A,R7
0076 900000      R     MOV     DPTR,#hitech_pwm_preload_values_6v
0079 93                MOVC    A,@A+DPTR
007A FF                MOV     R7,A
007B 900000      E     MOV     DPTR,#dev_pwm_limit
007E EF                MOV     A,R7
007F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1197
                                           ; SOURCE LINE # 1198
                                           ; SOURCE LINE # 1199
0080 22                RET     
0081         ?C0171:
                                           ; SOURCE LINE # 1200
                                           ; SOURCE LINE # 1202
0081 AE00        R     MOV     R6,max_tension
0083 AF00        R     MOV     R7,max_tension+01H
0085 E4                CLR     A
0086 FC                MOV     R4,A
0087 FD                MOV     R5,A
0088 900000      E     MOV     DPTR,#dev_tension
008B 120000      E     LCALL   ?C?LLDXDATA0
008E D3                SETB    C
008F 120000      E     LCALL   ?C?SLCMP
0092 4006              JC      ?C0177
                                           ; SOURCE LINE # 1203
0094 900000      E     MOV     DPTR,#dev_pwm_limit
0097 E4                CLR     A
0098 F0                MOVX    @DPTR,A
0099 22                RET     
009A         ?C0177:
                                           ; SOURCE LINE # 1204
                                           ; SOURCE LINE # 1205
009A 900000      E     MOV     DPTR,#g_mem+07AH
009D E0                MOVX    A,@DPTR
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 77  

009E FE                MOV     R6,A
009F A3                INC     DPTR
00A0 E0                MOVX    A,@DPTR
00A1 FF                MOV     R7,A
00A2 E4                CLR     A
00A3 FC                MOV     R4,A
00A4 FD                MOV     R5,A
00A5 900000      E     MOV     DPTR,#dev_tension
00A8 120000      E     LCALL   ?C?LLDXDATA0
00AB C3                CLR     C
00AC 120000      E     LCALL   ?C?SLCMP
00AF 5007              JNC     ?C0179
                                           ; SOURCE LINE # 1206
00B1 900000      E     MOV     DPTR,#dev_pwm_limit
00B4 7464              MOV     A,#064H
00B6 F0                MOVX    @DPTR,A
00B7 22                RET     
00B8         ?C0179:
                                           ; SOURCE LINE # 1207
                                           ; SOURCE LINE # 1208
00B8 900000      E     MOV     DPTR,#dev_tension
00BB 120000      E     LCALL   ?C?LLDXDATA
00BE EF                MOV     A,R7
00BF 24C0              ADD     A,#0C0H
00C1 FF                MOV     R7,A
00C2 EE                MOV     A,R6
00C3 34E0              ADDC    A,#0E0H
00C5 FE                MOV     R6,A
00C6 ED                MOV     A,R5
00C7 34FF              ADDC    A,#0FFH
00C9 FD                MOV     R5,A
00CA EC                MOV     A,R4
00CB 34FF              ADDC    A,#0FFH
00CD FC                MOV     R4,A
00CE 7809              MOV     R0,#09H
00D0 120000      E     LCALL   ?C?SLSHR
00D3 8F00        R     MOV     index,R7
                                           ; SOURCE LINE # 1209
00D5 900000      E     MOV     DPTR,#g_mem+07AH
00D8 E0                MOVX    A,@DPTR
00D9 FE                MOV     R6,A
00DA A3                INC     DPTR
00DB E0                MOVX    A,@DPTR
00DC FF                MOV     R7,A
00DD C3                CLR     C
00DE EF                MOV     A,R7
00DF 94EC              SUBB    A,#0ECH
00E1 EE                MOV     A,R6
00E2 942C              SUBB    A,#02CH
00E4 500E              JNC     ?C0181
                                           ; SOURCE LINE # 1210
00E6 AF00        R     MOV     R7,index
00E8 EF                MOV     A,R7
00E9 900000      R     MOV     DPTR,#hitech_pwm_preload_values
00EC 93                MOVC    A,@A+DPTR
00ED FF                MOV     R7,A
00EE 900000      E     MOV     DPTR,#dev_pwm_limit
00F1 EF                MOV     A,R7
00F2 F0                MOVX    @DPTR,A
00F3 22                RET     
00F4         ?C0181:
                                           ; SOURCE LINE # 1212
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 78  

00F4 AF00        R     MOV     R7,index
00F6 EF                MOV     A,R7
00F7 900000      R     MOV     DPTR,#pwm_preload_values
00FA 93                MOVC    A,@A+DPTR
00FB FF                MOV     R7,A
00FC 900000      E     MOV     DPTR,#dev_pwm_limit
00FF EF                MOV     A,R7
0100 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1213
                                           ; SOURCE LINE # 1214
                                           ; SOURCE LINE # 1215
                                           ; SOURCE LINE # 1216
0101         ?C0183:
0101 22                RET     
             ; FUNCTION pwm_limit_search (END)

             ; FUNCTION pretensioning_process (BEGIN)
                                           ; SOURCE LINE # 1222
                                           ; SOURCE LINE # 1228
0000 900000      R     MOV     DPTR,#i
0003 E4                CLR     A
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1230
0005 900000      R     MOV     DPTR,#phase
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B 120000      E     LCALL   ?C?CCASE
000E 0000        R     DW      ?C0185
0010 00                DB      00H
0011 0000        R     DW      ?C0188
0013 01                DB      01H
0014 0000              DW      00H
0016 0000        R     DW      ?C0194
                                           ; SOURCE LINE # 1231
0018         ?C0185:
                                           ; SOURCE LINE # 1232
0018 900000      E     MOV     DPTR,#g_meas+08H
001B E0                MOVX    A,@DPTR
001C FE                MOV     R6,A
001D A3                INC     DPTR
001E E0                MOVX    A,@DPTR
001F FF                MOV     R7,A
0020 C3                CLR     C
0021 74DC              MOV     A,#0DCH
0023 9F                SUBB    A,R7
0024 FF                MOV     R7,A
0025 E4                CLR     A
0026 9E                SUBB    A,R6
0027 FE                MOV     R6,A
0028 7C00              MOV     R4,#00H
002A 7D05              MOV     R5,#05H
002C 120000      E     LCALL   ?C?IMUL
002F 900000      E     MOV     DPTR,#g_mem+037H
0032 E0                MOVX    A,@DPTR
0033 FD                MOV     R5,A
0034 EF                MOV     A,R7
0035 A805              MOV     R0,AR5
0037 08                INC     R0
0038 8005              SJMP    ?C0196
003A         ?C0195:
003A C3                CLR     C
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 79  

003B 33                RLC     A
003C CE                XCH     A,R6
003D 33                RLC     A
003E CE                XCH     A,R6
003F         ?C0196:
003F D8F9              DJNZ    R0,?C0195
0041 FF                MOV     R7,A
0042 EE                MOV     A,R6
0043 33                RLC     A
0044 95E0              SUBB    A,ACC
0046 FD                MOV     R5,A
0047 FC                MOV     R4,A
0048 900000      R     MOV     DPTR,#aux
004B 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1233
004E 900000      R     MOV     DPTR,#aux
0051 120000      E     LCALL   ?C?LLDXDATA0
0054 900000      E     MOV     DPTR,#g_refOld
0057 120000      E     LCALL   ?C?LLDXDATA
005A 120000      E     LCALL   ?C?LSUB
005D 900000      E     MOV     DPTR,#g_refNew
0060 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1235
0063 900000      E     MOV     DPTR,#g_meas+0AH
0066 E0                MOVX    A,@DPTR
0067 FE                MOV     R6,A
0068 A3                INC     DPTR
0069 E0                MOVX    A,@DPTR
006A FF                MOV     R7,A
006B EF                MOV     A,R7
006C 24DC              ADD     A,#0DCH
006E FF                MOV     R7,A
006F EE                MOV     A,R6
0070 3400              ADDC    A,#00H
0072 FE                MOV     R6,A
0073 7C00              MOV     R4,#00H
0075 7D05              MOV     R5,#05H
0077 120000      E     LCALL   ?C?IMUL
007A 900000      E     MOV     DPTR,#g_mem+038H
007D E0                MOVX    A,@DPTR
007E FD                MOV     R5,A
007F EF                MOV     A,R7
0080 A805              MOV     R0,AR5
0082 08                INC     R0
0083 8005              SJMP    ?C0198
0085         ?C0197:
0085 C3                CLR     C
0086 33                RLC     A
0087 CE                XCH     A,R6
0088 33                RLC     A
0089 CE                XCH     A,R6
008A         ?C0198:
008A D8F9              DJNZ    R0,?C0197
008C FF                MOV     R7,A
008D EE                MOV     A,R6
008E 33                RLC     A
008F 95E0              SUBB    A,ACC
0091 FD                MOV     R5,A
0092 FC                MOV     R4,A
0093 900000      R     MOV     DPTR,#aux
0096 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1236
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 80  

0099 900000      R     MOV     DPTR,#aux
009C 120000      E     LCALL   ?C?LLDXDATA
009F 900000      E     MOV     DPTR,#g_refOld+04H
00A2 120000      E     LCALL   ?C?LLDXDATA0
00A5 120000      E     LCALL   ?C?LADD
00A8 900000      E     MOV     DPTR,#g_refNew+04H
00AB 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1238
00AE 900000      R     MOV     DPTR,#phase_counter
00B1 E0                MOVX    A,@DPTR
00B2 FF                MOV     R7,A
00B3 EF                MOV     A,R7
00B4 C3                CLR     C
00B5 940A              SUBB    A,#0AH
00B7 4032              JC      ?C0186
00B9 7F00              MOV     R7,#00H
00BB 7E00              MOV     R6,#00H
00BD 7D00              MOV     R5,#00H
00BF 7C00              MOV     R4,#00H
00C1 900000      E     MOV     DPTR,#dev_tension
00C4 120000      E     LCALL   ?C?LLDXDATA0
00C7 D3                SETB    C
00C8 120000      E     LCALL   ?C?SLCMP
00CB 501E              JNC     ?C0186
                                           ; SOURCE LINE # 1239
00CD C200        E     CLR     pretensioning_flag
                                           ; SOURCE LINE # 1240
00CF 7F00              MOV     R7,#00H
00D1 7E00              MOV     R6,#00H
00D3 7D00              MOV     R5,#00H
00D5 7C00              MOV     R4,#00H
00D7 900000      E     MOV     DPTR,#g_refNew
00DA 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1241
00DD 7F00              MOV     R7,#00H
00DF 7E00              MOV     R6,#00H
00E1 7D00              MOV     R5,#00H
00E3 7C00              MOV     R4,#00H
00E5 900000      E     MOV     DPTR,#g_refNew+04H
00E8 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1242
00EB         ?C0186:
                                           ; SOURCE LINE # 1244
00EB 900000      R     MOV     DPTR,#phase_counter
00EE E0                MOVX    A,@DPTR
00EF 04                INC     A
00F0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1246
00F1 900000      R     MOV     DPTR,#epsilon
00F4 E0                MOVX    A,@DPTR
00F5 FE                MOV     R6,A
00F6 A3                INC     DPTR
00F7 E0                MOVX    A,@DPTR
00F8 FF                MOV     R7,A
00F9 C3                CLR     C
00FA 74DC              MOV     A,#0DCH
00FC 9F                SUBB    A,R7
00FD FF                MOV     R7,A
00FE E4                CLR     A
00FF 9E                SUBB    A,R6
0100 FE                MOV     R6,A
0101 900000      E     MOV     DPTR,#g_meas+08H
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 81  

0104 E0                MOVX    A,@DPTR
0105 FC                MOV     R4,A
0106 A3                INC     DPTR
0107 E0                MOVX    A,@DPTR
0108 FD                MOV     R5,A
0109 D3                SETB    C
010A ED                MOV     A,R5
010B 9F                SUBB    A,R7
010C EE                MOV     A,R6
010D 6480              XRL     A,#080H
010F F8                MOV     R0,A
0110 EC                MOV     A,R4
0111 6480              XRL     A,#080H
0113 98                SUBB    A,R0
0114 5003              JNC     $ + 5H
0116 020000      R     LJMP    ?C0194
0119 900000      R     MOV     DPTR,#epsilon
011C E0                MOVX    A,@DPTR
011D FE                MOV     R6,A
011E A3                INC     DPTR
011F E0                MOVX    A,@DPTR
0120 FF                MOV     R7,A
0121 EF                MOV     A,R7
0122 2424              ADD     A,#024H
0124 FF                MOV     R7,A
0125 EE                MOV     A,R6
0126 34FF              ADDC    A,#0FFH
0128 FE                MOV     R6,A
0129 900000      E     MOV     DPTR,#g_meas+0AH
012C E0                MOVX    A,@DPTR
012D FC                MOV     R4,A
012E A3                INC     DPTR
012F E0                MOVX    A,@DPTR
0130 FD                MOV     R5,A
0131 C3                CLR     C
0132 ED                MOV     A,R5
0133 9F                SUBB    A,R7
0134 EE                MOV     A,R6
0135 6480              XRL     A,#080H
0137 F8                MOV     R0,A
0138 EC                MOV     A,R4
0139 6480              XRL     A,#080H
013B 98                SUBB    A,R0
013C 4003              JC      $ + 5H
013E 020000      R     LJMP    ?C0194
                                           ; SOURCE LINE # 1247
0141 900000      R     MOV     DPTR,#phase
0144 7401              MOV     A,#01H
0146 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1248
0147 900000      R     MOV     DPTR,#phase_counter
014A E4                CLR     A
014B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1251
                                           ; SOURCE LINE # 1252
014C 22                RET     
                                           ; SOURCE LINE # 1253
014D         ?C0188:
                                           ; SOURCE LINE # 1255
014D 900000      E     MOV     DPTR,#g_mem+037H
0150 E0                MOVX    A,@DPTR
0151 FF                MOV     R7,A
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 82  

0152 7410              MOV     A,#010H
0154 7E00              MOV     R6,#00H
0156 A807              MOV     R0,AR7
0158 08                INC     R0
0159 8005              SJMP    ?C0200
015B         ?C0199:
015B C3                CLR     C
015C 33                RLC     A
015D CE                XCH     A,R6
015E 33                RLC     A
015F CE                XCH     A,R6
0160         ?C0200:
0160 D8F9              DJNZ    R0,?C0199
0162 FF                MOV     R7,A
0163 EE                MOV     A,R6
0164 33                RLC     A
0165 95E0              SUBB    A,ACC
0167 FD                MOV     R5,A
0168 FC                MOV     R4,A
0169 900000      R     MOV     DPTR,#aux
016C 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1256
016F 900000      R     MOV     DPTR,#aux
0172 120000      E     LCALL   ?C?LLDXDATA
0175 900000      E     MOV     DPTR,#g_refOld
0178 120000      E     LCALL   ?C?LLDXDATA0
017B 120000      E     LCALL   ?C?LADD
017E 900000      E     MOV     DPTR,#g_refNew
0181 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1258
0184 900000      E     MOV     DPTR,#g_mem+038H
0187 E0                MOVX    A,@DPTR
0188 FF                MOV     R7,A
0189 7410              MOV     A,#010H
018B 7E00              MOV     R6,#00H
018D A807              MOV     R0,AR7
018F 08                INC     R0
0190 8005              SJMP    ?C0202
0192         ?C0201:
0192 C3                CLR     C
0193 33                RLC     A
0194 CE                XCH     A,R6
0195 33                RLC     A
0196 CE                XCH     A,R6
0197         ?C0202:
0197 D8F9              DJNZ    R0,?C0201
0199 FF                MOV     R7,A
019A EE                MOV     A,R6
019B 33                RLC     A
019C 95E0              SUBB    A,ACC
019E FD                MOV     R5,A
019F FC                MOV     R4,A
01A0 900000      R     MOV     DPTR,#aux
01A3 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1259
01A6 900000      R     MOV     DPTR,#aux
01A9 120000      E     LCALL   ?C?LLDXDATA0
01AC 900000      E     MOV     DPTR,#g_refOld+04H
01AF 120000      E     LCALL   ?C?LLDXDATA
01B2 120000      E     LCALL   ?C?LSUB
01B5 900000      E     MOV     DPTR,#g_refNew+04H
01B8 120000      E     LCALL   ?C?LSTXDATA
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 83  

                                           ; SOURCE LINE # 1261
01BB 900000      R     MOV     DPTR,#phase_counter
01BE E0                MOVX    A,@DPTR
01BF FF                MOV     R7,A
01C0 EF                MOV     A,R7
01C1 D3                SETB    C
01C2 9450              SUBB    A,#050H
01C4 404F              JC      ?C0189
                                           ; SOURCE LINE # 1262
01C6 C200        E     CLR     pretensioning_flag
                                           ; SOURCE LINE # 1263
01C8 D200        E     SETB    pret_done
                                           ; SOURCE LINE # 1264
01CA 900000      R     MOV     DPTR,#phase
01CD E4                CLR     A
01CE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1265
01CF D200        E     SETB    reset_last_value_flag
                                           ; SOURCE LINE # 1266
01D1 900000      R     MOV     DPTR,#i
01D4 E4                CLR     A
01D5 F0                MOVX    @DPTR,A
01D6         ?C0190:
01D6 900000      R     MOV     DPTR,#i
01D9 E0                MOVX    A,@DPTR
01DA FF                MOV     R7,A
01DB EF                MOV     A,R7
01DC C3                CLR     C
01DD 9402              SUBB    A,#02H
01DF 5034              JNC     ?C0189
                                           ; SOURCE LINE # 1267
01E1 900000      R     MOV     DPTR,#i
01E4 E0                MOVX    A,@DPTR
01E5 FF                MOV     R7,A
01E6 EF                MOV     A,R7
01E7 25E0              ADD     A,ACC
01E9 25E0              ADD     A,ACC
01EB 2400        E     ADD     A,#LOW g_refNew
01ED F582              MOV     DPL,A
01EF E4                CLR     A
01F0 3400        E     ADDC    A,#HIGH g_refNew
01F2 F583              MOV     DPH,A
01F4 120000      E     LCALL   ?C?LLDXDATA
01F7 900000      R     MOV     DPTR,#i
01FA E0                MOVX    A,@DPTR
01FB FB                MOV     R3,A
01FC EB                MOV     A,R3
01FD 25E0              ADD     A,ACC
01FF 25E0              ADD     A,ACC
0201 2400        E     ADD     A,#LOW pret_offset_pos
0203 F582              MOV     DPL,A
0205 E4                CLR     A
0206 3400        E     ADDC    A,#HIGH pret_offset_pos
0208 F583              MOV     DPH,A
020A 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1274
020D 900000      R     MOV     DPTR,#i
0210 E0                MOVX    A,@DPTR
0211 04                INC     A
0212 F0                MOVX    @DPTR,A
0213 80C1              SJMP    ?C0190
                                           ; SOURCE LINE # 1286
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/13/2018 09:39:28 PAGE 84  

0215         ?C0189:
                                           ; SOURCE LINE # 1288
0215 900000      R     MOV     DPTR,#phase_counter
0218 E0                MOVX    A,@DPTR
0219 04                INC     A
021A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1289
                                           ; SOURCE LINE # 1290
                                           ; SOURCE LINE # 1291
                                           ; SOURCE LINE # 1292
                                           ; SOURCE LINE # 1293
021B         ?C0194:
021B 22                RET     
             ; FUNCTION pretensioning_process (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   5824    ----
   CONSTANT SIZE    =     97    ----
   XDATA SIZE       =    168      21
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6      73
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3       1
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
