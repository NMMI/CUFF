C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE COMMAND_PROCESSING
OBJECT MODULE PLACED IN .\DP8051_Keil_951\Debug\command_processing.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -command_processing.c NOIV LARGE MODDP2 OMF2 VB(1) NOIP INCDIR(.,Generated_Source\PSoC3) FF(3) DB WL(2) PR(.\DP8051_Keil_
                    -951\Debug/command_processing.lst) CD OT(2,SIZE) OJ(.\DP8051_Keil_951\Debug\command_processing.obj)

line level    source

   1          // ----------------------------------------------------------------------------
   2          // BSD 3-Clause License
   3          
   4          // Copyright (c) 2016, qbrobotics
   5          // Copyright (c) 2017, Centro "E.Piaggio"
   6          // All rights reserved.
   7          
   8          // Redistribution and use in source and binary forms, with or without
   9          // modification, are permitted provided that the following conditions are met:
  10          
  11          // * Redistributions of source code must retain the above copyright notice, this
  12          //   list of conditions and the following disclaimer.
  13          
  14          // * Redistributions in binary form must reproduce the above copyright notice,
  15          //   this list of conditions and the following disclaimer in the documentation
  16          //   and/or other materials provided with the distribution.
  17          
  18          // * Neither the name of the copyright holder nor the names of its
  19          //   contributors may be used to endorse or promote products derived from
  20          //   this software without specific prior written permission.
  21          
  22          // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23          // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  24          // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25          // DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26          // FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27          // DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28          // SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29          // CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30          // OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31          // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32          // POSSIBILITY OF SUCH DAMAGE.
  33          // ----------------------------------------------------------------------------
  34          
  35          
  36          /**
  37          * \file         command_processing.c
  38          *
  39          
  40          * \brief        Command processing functions.
  41          * \date         October 01, 2017
  42          * \author       _Centro "E.Piaggio"_
  43          * \copyright    (C) 2012-2016 qbrobotics. All rights reserved.
  44          * \copyright    (C) 2017 Centro "E.Piaggio". All rights reserved.
  45          */
  46          
  47          //=================================================================     includes
  48          #include <command_processing.h>
  49          #include <stdio.h>
  50          #include <interruptions.h>
  51          #include <utils.h>
  52          
  53          #include "commands.h"
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 2   

  54          
  55          //================================================================     variables
  56          
  57          reg8 * EEPROM_ADDR = (reg8 *) CYDEV_EE_BASE;
  58          
  59          //==============================================================================
  60          //                                                            RX DATA PROCESSING
  61          //==============================================================================
  62          //  This function checks for the availability of a data packet and process it:
  63          //      - Verify checksum;
  64          //      - Process commands;
  65          //==============================================================================
  66          
  67          void commProcess(){
  68   1          
  69   1          uint8 CYDATA rx_cmd;
  70   1      
  71   1          rx_cmd = g_rx.buffer[0];
  72   1      
  73   1      //==========================================================     verify checksum
  74   1      
  75   1          if (!(LCRChecksum(g_rx.buffer, g_rx.length - 1) == g_rx.buffer[g_rx.length - 1])){
  76   2              // Wrong checksum
  77   2              g_rx.ready = 0;
  78   2              return;
  79   2          }
  80   1      
  81   1          switch(rx_cmd){
  82   2      //=====================================================     CMD_GET_MEASUREMENTS
  83   2      
  84   2              case CMD_GET_MEASUREMENTS:
  85   2                  cmd_get_measurements();
  86   2                  break;
  87   2                  
  88   2      //============================================================     CMD_GET_INPUT
  89   2      
  90   2              case CMD_GET_INPUTS:
  91   2                  cmd_get_inputs();
  92   2                  break;
  93   2      
  94   2      //=========================================================     CMD_GET_CURRENTS
  95   2      
  96   2              case CMD_GET_CURRENTS:
  97   2                  cmd_get_currents();
  98   2                  break;
  99   2      
 100   2      //====================================================     CMD_GET_CURR_AND_MEAS
 101   2      
 102   2              case CMD_GET_CURR_AND_MEAS:
 103   2                  cmd_get_curr_and_meas();
 104   2                  break;
 105   2                  
 106   2      //===========================================================     CMD_SET_INPUTS
 107   2      
 108   2              case CMD_SET_INPUTS:
 109   2                  cmd_set_inputs();
 110   2                  break;
 111   2                  
 112   2      //========================================================     CMD_SET_POS_STIFF
 113   2      
 114   2              case CMD_SET_POS_STIFF:
 115   2                  cmd_set_pos_stiff();
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 3   

 116   2                  break;
 117   2                  
 118   2      //=======================================================     CMD_GET_VELOCITIES
 119   2      
 120   2              case CMD_GET_VELOCITIES:
 121   2                  cmd_get_velocities();
 122   2                  break;
 123   2      
 124   2      //=============================================================     CMD_ACTIVATE
 125   2              case CMD_ACTIVATE:
 126   2                  cmd_activate();
 127   2                  break;
 128   2                  
 129   2      //=============================================================     CMD_WATCHDOG
 130   2                  
 131   2              case CMD_SET_WATCHDOG:
 132   2                  cmd_set_watchdog();
 133   2                  break;
 134   2                  
 135   2      //=========================================================     CMD_GET_ACTIVATE
 136   2                  
 137   2              case CMD_GET_ACTIVATE:
 138   2                  cmd_get_activate();
 139   2                  break;
 140   2                  
 141   2      //=========================================================     CMD_SET_BAUDRATE
 142   2                  
 143   2              case CMD_SET_BAUDRATE:
 144   2                  cmd_set_baudrate();
 145   2                  break;  
 146   2                  
 147   2      //=============================================================     CMD_GET_INFO
 148   2                  
 149   2              case CMD_GET_INFO:
 150   2                  cuff_flag_force = FALSE;
 151   2                  cuff_flag_proprio = FALSE;
 152   2                  infoGet( *((uint16 *) &g_rx.buffer[1]));
 153   2                  break;
 154   2      
 155   2      //============================================================     CMD_SET_PARAM
 156   2                  
 157   2              case CMD_SET_ZEROS:
 158   2                  setZeros();
 159   2                  break;
 160   2      
 161   2      //============================================================     CMD_GET_PARAM
 162   2                  
 163   2              case CMD_GET_PARAM_LIST:
 164   2                  get_param_list( *((uint16 *) &g_rx.buffer[1]));
 165   2                  break;
 166   2      
 167   2      //=================================================================     CMD_PING
 168   2                  
 169   2              case CMD_PING:
 170   2                  cmd_ping();
 171   2                  break;
 172   2      
 173   2      //=========================================================     CMD_STORE_PARAMS
 174   2                  
 175   2              case CMD_STORE_PARAMS:
 176   2                  cmd_store_params();
 177   2                  break;
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 4   

 178   2      
 179   2      //=================================================     CMD_STORE_DEFAULT_PARAMS
 180   2                  
 181   2              case CMD_STORE_DEFAULT_PARAMS:
 182   2                  if ( memStore(DEFAULT_EEPROM_DISPLACEMENT) ) {
 183   3                      sendAcknowledgment(ACK_OK);
 184   3                  } else {
 185   3                      sendAcknowledgment(ACK_ERROR);
 186   3                  }
 187   2                  break;
 188   2      
 189   2      //=======================================================     CMD_RESTORE_PARAMS
 190   2      
 191   2              case CMD_RESTORE_PARAMS:
 192   2                  if ( memRestore() ) {
 193   3                      sendAcknowledgment(ACK_OK);
 194   3                  } else {
 195   3                      sendAcknowledgment(ACK_ERROR);
 196   3                  }
 197   2                  break;
 198   2      
 199   2      //=============================================================     CMD_INIT_MEM
 200   2      
 201   2              case CMD_INIT_MEM:
 202   2                  if ( memInit() ) {
 203   3                      sendAcknowledgment(ACK_OK);
 204   3                  } else {
 205   3                      sendAcknowledgment(ACK_ERROR);
 206   3                  }
 207   2                  break;
 208   2      
 209   2      //===========================================================     CMD_BOOTLOADER
 210   2              case CMD_BOOTLOADER:
 211   2                  sendAcknowledgment(ACK_OK);
 212   2                  CyDelay(1000);
 213   2                  FTDI_ENABLE_REG_Write(0x00);
 214   2                  CyDelay(1000);
 215   2                  Bootloadable_Load();
 216   2                  break;
 217   2      
 218   2      /*//============================================================     CMD_CALIBRATE
 219   2              case CMD_CALIBRATE:
 220   2                  calibration_flag = START;
 221   2                  sendAcknowledgment(ACK_OK);
 222   2                  break;
 223   2      */
 224   2      //=========================================================== ALL OTHER COMMANDS
 225   2              default:
 226   2                  break;
 227   2      
 228   2          }
 229   1      }
 230          
 231          //==============================================================================
 232          //                                                           Cuff inputs driving
 233          //==============================================================================
 234          /* Function called when device.cuff_flag is set. It asks current difference to a 
 235          the SoftHand and sets Cuff inputs proportionally to this difference. It stops when
 236          informations with CMD_GET_INFO are asked */
 237          
 238          void drive_cuff() {
 239   1          uint8 packet_data[16];
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 5   

 240   1          uint8 packet_lenght;
 241   1          int16 curr_diff;
 242   1          int32 aux_val;
 243   1          uint32 t_start, t_end;
 244   1      
 245   1          packet_lenght = 2;
 246   1          packet_data[0] = CMD_GET_CURR_DIFF;
 247   1          packet_data[1] = CMD_GET_CURR_DIFF;
 248   1          commWrite(packet_data, packet_lenght, TRUE);
 249   1          
 250   1          t_start = (uint32) MY_TIMER_ReadCounter();
 251   1          while(g_rx.buffer[0] != CMD_SET_CUFF_INPUTS) {
 252   2              if (interrupt_flag){
 253   3                  interrupt_flag = FALSE;
 254   3                  interrupt_manager();
 255   3              }
 256   2              t_end = (uint32) MY_TIMER_ReadCounter();
 257   2              if((t_start - t_end) > 4500000){             // 4.5 s timeout
 258   3                  cuff_flag_force = FALSE;
 259   3                  break;
 260   3              }
 261   2          }
 262   1      
 263   1          if(cuff_flag_force) {
 264   2              curr_diff = *((int16 *) &g_rx.buffer[1]);
 265   2              // Current difference saturation
 266   2              if(curr_diff > g_mem.curr_sat)
 267   2                  curr_diff = g_mem.curr_sat;
 268   2              //Current difference dead zone
 269   2              if(curr_diff < g_mem.curr_dead_zone)
 270   2                  curr_diff = 0;
 271   2              else
 272   2                  curr_diff -= g_mem.curr_dead_zone;
 273   2      
 274   2              aux_val = ((curr_diff * g_mem.curr_prop_gain) * 65535 / 1440);
 275   2              g_refNew.pos[0] = pret_offset_pos[0] - (aux_val << g_mem.res[0]);     // questa è la parte funzio
             -nante con l'offset settato come variabili aggiuntiva
 276   2              g_refNew.pos[1] = pret_offset_pos[1] + (aux_val << g_mem.res[1]);
 277   2              
 278   2             // g_refNew.pos[0] =  - (aux_val << g_mem.res[0]);
 279   2             // g_refNew.pos[1] =  + (aux_val << g_mem.res[1]);
 280   2      
 281   2              if (c_mem.pos_lim_flag) {                      // pos limiting
 282   3                  if (g_refNew.pos[0] < c_mem.pos_lim_inf[0]) g_refNew.pos[0] = c_mem.pos_lim_inf[0];
 283   3                  if (g_refNew.pos[1] < c_mem.pos_lim_inf[1]) g_refNew.pos[1] = c_mem.pos_lim_inf[1];
 284   3      
 285   3                  if (g_refNew.pos[0] > c_mem.pos_lim_sup[0]) g_refNew.pos[0] = c_mem.pos_lim_sup[0];
 286   3                  if (g_refNew.pos[1] > c_mem.pos_lim_sup[1]) g_refNew.pos[1] = c_mem.pos_lim_sup[1];
 287   3              }
 288   2          }
 289   1          if (!pret_done)
 290   1                  pretensioning_flag = TRUE;
 291   1      }
 292          
 293          void slide_cuff() {
 294   1          uint8 packet_data[16];
 295   1          uint8 packet_lenght;
 296   1          int16 SH_pos;
 297   1          int32 aux_val;
 298   1          uint32 t_start, t_end;
 299   1      
 300   1          packet_lenght = 2;
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 6   

 301   1          packet_data[0] = CMD_GET_MEASUREMENTS;
 302   1          packet_data[1] = CMD_GET_MEASUREMENTS;
 303   1          commWrite(packet_data, packet_lenght, TRUE);
 304   1      
 305   1          t_start = (uint32) MY_TIMER_ReadCounter();
 306   1          while(g_rx.buffer[0] != CMD_GET_MEASUREMENTS) {
 307   2              if (interrupt_flag){
 308   3                  interrupt_flag = FALSE;
 309   3                  interrupt_manager();
 310   3              }
 311   2              t_end = (uint32) MY_TIMER_ReadCounter();
 312   2              if((t_start - t_end) > 4500000){             // 4.5 s timeout
 313   3                  cuff_flag_proprio = FALSE;
 314   3                  break;
 315   3              }
 316   2          }
 317   1      
 318   1          if(cuff_flag_proprio) {
 319   2              SH_pos = *((int16 *) &g_rx.buffer[1]);
 320   2              
 321   2              aux_val = (int32)SH_pos - g_mem.SH_rest_pos;       
 322   2              aux_val = (int32)((aux_val * g_mem.max_slide) / (g_mem.max_SH_pos - g_mem.SH_rest_pos));
 323   2              
 324   2              if (c_mem.right_left) {
 325   3                  // LEFT
 326   3                  g_refNew.pos[0] =  pret_offset_pos[0] + (aux_val << g_mem.res[0]);
 327   3                  g_refNew.pos[1] =  pret_offset_pos[1] + (aux_val << g_mem.res[1]);
 328   3              }
 329   2              else {
 330   3                  // RIGHT
 331   3                  g_refNew.pos[0] =  pret_offset_pos[0] - (aux_val << g_mem.res[0]);
 332   3                  g_refNew.pos[1] =  pret_offset_pos[1] - (aux_val << g_mem.res[1]);
 333   3              }
 334   2             
 335   2             // g_refNew.pos[0] = (aux_val << g_mem.res[0]);
 336   2             // g_refNew.pos[1] = (aux_val << g_mem.res[1]);
 337   2      
 338   2              if (c_mem.pos_lim_flag) {                      // pos limiting
 339   3                  if (g_refNew.pos[0] < c_mem.pos_lim_inf[0]) g_refNew.pos[0] = c_mem.pos_lim_inf[0];
 340   3                  if (g_refNew.pos[1] < c_mem.pos_lim_inf[1]) g_refNew.pos[1] = c_mem.pos_lim_inf[1];
 341   3      
 342   3                  if (g_refNew.pos[0] > c_mem.pos_lim_sup[0]) g_refNew.pos[0] = c_mem.pos_lim_sup[0];
 343   3                  if (g_refNew.pos[1] > c_mem.pos_lim_sup[1]) g_refNew.pos[1] = c_mem.pos_lim_sup[1];
 344   3              }
 345   2              if ((((int32)SH_pos >= (g_mem.SH_rest_pos - 50)) && ((int32)SH_pos <= (g_mem.SH_rest_pos + 50)))&&
             -(!pret_done))
 346   2                  pretensioning_flag = TRUE;
 347   2          }
 348   1      }
 349          
 350          void force_and_slide_cuff(){
 351   1          uint8 packet_data[16];
 352   1          uint8 packet_lenght;
 353   1          int16 curr_diff;
 354   1          int16 SH_pos;
 355   1          int32 aux_val;
 356   1          uint32 t_start, t_end;
 357   1          int32 ref_slide[2];
 358   1      
 359   1          packet_lenght = 2;
 360   1          packet_data[0] = CMD_GET_CURR_AND_MEAS;
 361   1          packet_data[1] = CMD_GET_CURR_AND_MEAS;
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 7   

 362   1          commWrite(packet_data, packet_lenght, TRUE);
 363   1      
 364   1          t_start = (uint32) MY_TIMER_ReadCounter();
 365   1          while(g_rx.buffer[0] != CMD_GET_CURR_AND_MEAS) {
 366   2              if (interrupt_flag){
 367   3                  interrupt_flag = FALSE;
 368   3                  interrupt_manager();
 369   3              }
 370   2              t_end = (uint32) MY_TIMER_ReadCounter();
 371   2              if((t_start - t_end) > 4500000){             // 4.5 s timeout
 372   3                  cuff_flag_force_proprio = FALSE;
 373   3                  break;
 374   3              }
 375   2          } 
 376   1          
 377   1          if(cuff_flag_force_proprio) {
 378   2              curr_diff = *((int16 *) &g_rx.buffer[3]);
 379   2              SH_pos = *((int16 *) &g_rx.buffer[5]);
 380   2              
 381   2              // Current difference saturation
 382   2              if(curr_diff > g_mem.curr_sat)
 383   2                  curr_diff = g_mem.curr_sat;
 384   2              //Current difference dead zone
 385   2              if(curr_diff < g_mem.curr_dead_zone)
 386   2                  curr_diff = 0;
 387   2              else
 388   2                  curr_diff -= g_mem.curr_dead_zone;
 389   2      
 390   2              // Sliding
 391   2              aux_val = (int32)SH_pos - g_mem.SH_rest_pos;       
 392   2              aux_val = (int32)((aux_val * g_mem.max_slide) / (int32)g_mem.max_SH_pos);
 393   2              
 394   2              ref_slide[0] =  (aux_val << g_mem.res[0]);
 395   2              ref_slide[1] =  (aux_val << g_mem.res[1]);
 396   2              
 397   2              // Force
 398   2              aux_val = ((curr_diff * g_mem.curr_prop_gain) * 65535 / 1440);
 399   2              
 400   2              if (c_mem.right_left) {
 401   3                  // LEFT
 402   3                  g_refNew.pos[0] = pret_offset_pos[0] + ref_slide[0] -(aux_val << g_mem.res[0]);
 403   3                  g_refNew.pos[1] = pret_offset_pos[1] + ref_slide[1] +(aux_val << g_mem.res[1]);
 404   3              }
 405   2              else {
 406   3                  // RIGHT
 407   3                  g_refNew.pos[0] = pret_offset_pos[0] - ref_slide[0] -(aux_val << g_mem.res[0]);
 408   3                  g_refNew.pos[1] = pret_offset_pos[1] - ref_slide[1] +(aux_val << g_mem.res[1]);
 409   3              }
 410   2              
 411   2              //g_refNew.pos[0] = ref_slide[0] -(aux_val << g_mem.res[0]);
 412   2              //g_refNew.pos[1] = ref_slide[1] +(aux_val << g_mem.res[1]);
 413   2      
 414   2              // End
 415   2              if (c_mem.pos_lim_flag) {                      // pos limiting
 416   3                  if (g_refNew.pos[0] < c_mem.pos_lim_inf[0]) g_refNew.pos[0] = c_mem.pos_lim_inf[0];
 417   3                  if (g_refNew.pos[1] < c_mem.pos_lim_inf[1]) g_refNew.pos[1] = c_mem.pos_lim_inf[1];
 418   3      
 419   3                  if (g_refNew.pos[0] > c_mem.pos_lim_sup[0]) g_refNew.pos[0] = c_mem.pos_lim_sup[0];
 420   3                  if (g_refNew.pos[1] > c_mem.pos_lim_sup[1]) g_refNew.pos[1] = c_mem.pos_lim_sup[1];
 421   3              }
 422   2              
 423   2              if ((((int32)SH_pos >= (g_mem.SH_rest_pos - 50)) && ((int32)SH_pos <= (g_mem.SH_rest_pos + 50)))&&
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 8   

             -(!pret_done))
 424   2                  pretensioning_flag = TRUE;
 425   2              
 426   2          }
 427   1      }
 428          
 429          //==============================================================================
 430          //                                                              COMMAND GET INFO
 431          //==============================================================================
 432          
 433          void infoGet(uint16 info_type){
 434   1          unsigned char packet_string[1500];
 435   1      
 436   1      //======================================     choose info type and prepare string
 437   1      
 438   1          switch (info_type) {
 439   2              case INFO_ALL:
 440   2                  infoPrepare(packet_string);
 441   2                  UART_RS485_PutString(packet_string);
 442   2                  break;
 443   2              default:
 444   2                  break;
 445   2          }
 446   1      }
 447          
 448          //==============================================================================
 449          //                                                                     SET ZEROS
 450          //==============================================================================
 451          
 452          void setZeros()
 453          {
 454   1          uint8 CYDATA i;        // iterator
 455   1      
 456   1          for(i = 0; i < NUM_OF_SENSORS; ++i) {
 457   2              g_mem.m_off[i] = *((int16 *) &g_rx.buffer[1 + i * 2]);
 458   2              g_mem.m_off[i] = g_mem.m_off[i] << g_mem.res[i];
 459   2      
 460   2              g_meas.rot[i] = 0;
 461   2          }
 462   1          reset_last_value_flag = 1;
 463   1      
 464   1          sendAcknowledgment(ACK_OK);
 465   1      }
 466          
 467          //==============================================================================
 468          //                                                            GET PARAMETER LIST
 469          //==============================================================================
 470          
 471          void get_param_list(uint16 index)
 472          {
 473   1          //Package to be sent variables
 474   1          uint8 packet_data[1901]=""; 
 475   1          uint16 packet_lenght = 1901;
 476   1      
 477   1          //Auxiliary variables
 478   1          uint16 CYDATA i;
 479   1          uint8 string_lenght;
 480   1          int32 aux_int;
 481   1          //char tmp_string[3];
 482   1      
 483   1          //Parameters menu string definitions
 484   1          char id_str[15]             = "1 - Device ID:";
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 9   

 485   1          char pos_pid_str[28]        = "2 - Position PID [P, I, D]:";
 486   1          char curr_pid_str[27]       = "3 - Current PID [P, I, D]:";
 487   1          char startup_str[28]        = "4 - Startup Activation:";
 488   1          char input_str[27]          = "5 - Input mode:";
 489   1          char contr_str[39]          = "6 - Control mode:";
 490   1          char res_str[21]            = "7 - Resolutions:";
 491   1          char m_off_str[25]          = "8 - Measurement Offsets:";
 492   1          char mult_str[17]           = "9 - Multipliers:";
 493   1          char pos_lim_flag_str[28]   = "10 - Pos. limit active:";
 494   1          char pos_lim_str[29]        = "11 - Pos. limits [inf, sup]:";
 495   1          char max_step_str[27]       = "12 - Max steps [neg, pos]:";
 496   1          char curr_limit_str[20]     = "13 - Current limit:";
 497   1          char curr_prop_gain_str[32] = "14 - Current proportional gain:";
 498   1          char curr_sat_str[36]       = "15 - Current difference saturation:";
 499   1          char curr_dead_zone_str[24] = "16 - Current dead zone:";
 500   1          char cuff_activ_force_str[37]     = "17 - Cuff activation flag force:";
 501   1          char pow_tension_str[22]    = "18 - Power tension:";
 502   1          char cuff_activ_proprio_str[39] = "19 - Cuff activation flag proprio:";
 503   1          char max_slide_str[35] = "20 - Max slide movement (proprio):";
 504   1          char max_SH_pos_str[31] = "21 - Max SH closure (proprio):";
 505   1          char hand_ID_str[14] = "22 - Hand ID:";
 506   1          char cuff_activ_force_proprio_str[34] = "23 - Cuff flag force+proprio:";
 507   1          char SH_rest_pos_str[33] = "24 - SH rest pos(proprio):";
 508   1          char right_left_par_str[21] = "25 - Arm side:";
 509   1          
 510   1          //Parameters menus
 511   1          char input_mode_menu[52] = "0 -> Usb\n1 -> Shaft's position controls the motors\n";
 512   1          char control_mode_menu[59] = "0 -> Position\n1 -> PWM\n2 -> Current\n3 -> Position-Current\n";//4 -> D
             -eflection\n5 -> Deflection-Current\n";
 513   1          char yes_no_menu[42] = "0 -> Deactivate [NO]\n1 -> Activate [YES]\n";
 514   1          char right_left_menu[22] = "0 -> Right\n1 -> Left\n";
 515   1      
 516   1          //Strings lenghts
 517   1          uint8 CYDATA id_str_len = strlen(id_str);
 518   1          uint8 CYDATA pos_pid_str_len = strlen(pos_pid_str);
 519   1          uint8 CYDATA curr_pid_str_len = strlen(curr_pid_str);
 520   1          
 521   1          uint8 CYDATA res_str_len = strlen(res_str);
 522   1          uint8 CYDATA m_off_str_len = strlen(m_off_str);
 523   1          uint8 CYDATA mult_str_len = strlen(mult_str);
 524   1      
 525   1          uint8 CYDATA pos_lim_str_len = strlen(pos_lim_str);
 526   1          uint8 CYDATA curr_limit_str_len = strlen(curr_limit_str);
 527   1          
 528   1          uint8 CYDATA curr_prop_gain_str_len = strlen(curr_prop_gain_str);
 529   1          uint8 CYDATA curr_sat_str_len = strlen(curr_sat_str);
 530   1          uint8 CYDATA curr_dead_zone_str_len = strlen(curr_dead_zone_str);
 531   1          uint8 CYDATA pow_tension_str_len = strlen(pow_tension_str);
 532   1      
 533   1          uint8 CYDATA input_mode_menu_len = strlen(input_mode_menu);
 534   1          uint8 CYDATA control_mode_menu_len = strlen(control_mode_menu);
 535   1          uint8 CYDATA yes_no_menu_len = strlen(yes_no_menu);
 536   1          uint8 CYDATA right_left_menu_len = strlen(right_left_menu);
 537   1          
 538   1          uint8 CYDATA max_slide_str_len = strlen(max_slide_str);
 539   1          uint8 CYDATA max_SH_pos_str_len = strlen(max_SH_pos_str);
 540   1          uint8 CYDATA hand_ID_str_len = strlen(hand_ID_str);
 541   1          uint8 SH_rest_pos_str_len = strlen(SH_rest_pos_str);
 542   1      
 543   1          packet_data[0] = CMD_GET_PARAM_LIST;
 544   1          packet_data[1] = NUM_OF_PARAMS;
 545   1      
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 10  

 546   1          switch(index) {
 547   2              case 0:         //List of all parameters with relative types
 548   2                  /*-----------------ID-----------------*/
 549   2      
 550   2                  packet_data[2] = TYPE_UINT8;
 551   2                  packet_data[3] = 1;
 552   2                  packet_data[4] = c_mem.id;
 553   2                  for(i = id_str_len; i != 0; i--)
 554   2                      packet_data[5 + id_str_len - i] = id_str[id_str_len - i];
 555   2      
 556   2                  /*-------------POSITION PID-----------*/
 557   2      
 558   2                  packet_data[52] = TYPE_FLOAT;
 559   2                  packet_data[53] = 3;
 560   2                  if(c_mem.control_mode != CURR_AND_POS_CONTROL /*&& c_mem.control_mode != DEFL_CURRENT_CONTROL*
             -/) {
 561   3                      *((float *) (packet_data + 54)) = (float) c_mem.k_p / 65536;
 562   3                      *((float *) (packet_data + 58)) = (float) c_mem.k_i / 65536;
 563   3                      *((float *) (packet_data + 62)) = (float) c_mem.k_d / 65536;
 564   3                  }
 565   2                  else {
 566   3                      *((float *) (packet_data + 54)) = (float) c_mem.k_p_dl / 65536;
 567   3                      *((float *) (packet_data + 58)) = (float) c_mem.k_i_dl / 65536;
 568   3                      *((float *) (packet_data + 62)) = (float) c_mem.k_d_dl / 65536;
 569   3                  }
 570   2                  for(i = pos_pid_str_len; i != 0; i--)
 571   2                      packet_data[66 + pos_pid_str_len - i] = pos_pid_str[pos_pid_str_len - i];
 572   2      
 573   2                  /*--------------CURRENT PID-----------*/
 574   2      
 575   2                  packet_data[102] = TYPE_FLOAT;
 576   2                  packet_data[103] = 3;
 577   2                  if(c_mem.control_mode != CURR_AND_POS_CONTROL /*&& c_mem.control_mode != DEFL_CURRENT_CONTROL*
             -/) {
 578   3                      *((float *) (packet_data + 104)) = (float) c_mem.k_p_c / 65536;
 579   3                      *((float *) (packet_data + 108)) = (float) c_mem.k_i_c / 65536;
 580   3                      *((float *) (packet_data + 112)) = (float) c_mem.k_d_c / 65536;
 581   3                  }
 582   2                  else {
 583   3                      *((float *) (packet_data + 104)) = (float) c_mem.k_p_c_dl / 65536;
 584   3                      *((float *) (packet_data + 108)) = (float) c_mem.k_i_c_dl / 65536;
 585   3                      *((float *) (packet_data + 112)) = (float) c_mem.k_d_c_dl / 65536;
 586   3                  }
 587   2                  for(i = curr_pid_str_len; i != 0; i--)
 588   2                      packet_data[116 + curr_pid_str_len - i] = curr_pid_str[curr_pid_str_len - i];
 589   2      
 590   2                  /*----------STARTUP ACTIVATION--------*/
 591   2      
 592   2                  packet_data[152] = TYPE_FLAG;
 593   2                  packet_data[153] = 1;
 594   2                  packet_data[154] = c_mem.activ;
 595   2                  if(c_mem.activ) {
 596   3                      strcat(startup_str, " YES\0");
 597   3                      string_lenght = 28;
 598   3                  }
 599   2                  else {
 600   3                      strcat(startup_str, " NO\0");
 601   3                      string_lenght = 27;
 602   3                  }
 603   2                  for(i = string_lenght; i != 0; i--)
 604   2                      packet_data[155 + string_lenght - i] = startup_str[string_lenght - i];
 605   2                  //The following byte indicates the number of menus at the end of the packet to send
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 11  

 606   2                  packet_data[155 + string_lenght]  = 3;
 607   2      
 608   2                  /*--------------INPUT MODE------------*/
 609   2                  
 610   2                  packet_data[202] = TYPE_FLAG;
 611   2                  packet_data[203] = 1;
 612   2                  packet_data[204] = c_mem.input_mode;
 613   2                  switch(c_mem.input_mode) {
 614   3                      case INPUT_MODE_EXTERNAL:
 615   3                          strcat(input_str, " Usb\0");
 616   3                          string_lenght = 20;
 617   3                      break;
 618   3                      case INPUT_MODE_ENCODER3:
 619   3                          strcat(input_str, " Encoder 3\0");
 620   3                          string_lenght = 26;
 621   3                      break;
 622   3                  }
 623   2                  for(i = string_lenght; i != 0; i--)
 624   2                      packet_data[205 + string_lenght - i] = input_str[string_lenght - i];
 625   2                  //The following byte indicates the number of menus at the end of the packet to send
 626   2                  packet_data[205 + string_lenght] = 1;
 627   2                  
 628   2                  /*-------------CONTROL MODE-----------*/
 629   2                  
 630   2                  packet_data[252] = TYPE_FLAG;
 631   2                  packet_data[253] = 1;
 632   2                  packet_data[254] = c_mem.control_mode;
 633   2                  switch(c_mem.control_mode){
 634   3                      case CONTROL_ANGLE:
 635   3                          strcat(contr_str, " Position\0");
 636   3                          string_lenght = 27;
 637   3                      break;
 638   3                      case CONTROL_PWM:
 639   3                          strcat(contr_str, " PWM\0");
 640   3                          string_lenght = 22;
 641   3                      break;
 642   3                      case CONTROL_CURRENT:
 643   3                          strcat(contr_str, " Current\0");
 644   3                          string_lenght = 26;
 645   3                      break;
 646   3                      case CURR_AND_POS_CONTROL:
 647   3                          strcat(contr_str, " Position and current\0");
 648   3                          string_lenght = 39;
 649   3                      break;
 650   3                      /*case DEFLECTION_CONTROL:
 651   3                          strcat(contr_str, " Deflection\0");
 652   3                          string_lenght = 29;
 653   3                      break;
 654   3                      case DEFL_CURRENT_CONTROL:
 655   3                          strcat(contr_str, " Deflection and current\0");
 656   3                          string_lenght = 41;
 657   3                      break;*/
 658   3                  }
 659   2                  for(i = string_lenght; i != 0; i--)
 660   2                      packet_data[255 + string_lenght - i] = contr_str[string_lenght - i];
 661   2                  //The following byte indicates the number of menus at the end of the packet to send
 662   2                  packet_data[255 + string_lenght] = 2;
 663   2                  
 664   2                   /*-------------RESOLUTIONS------------*/
 665   2                  
 666   2                  packet_data[302] = TYPE_UINT8;
 667   2                  packet_data[303] = 2;
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 12  

 668   2                  for(i = 0; i < NUM_OF_SENSORS; i++)
 669   2                      packet_data[i + 304] = c_mem.res[i];
 670   2                  for(i = res_str_len; i != 0; i--)
 671   2                      packet_data[306 + res_str_len - i] = res_str[res_str_len - i];
 672   2                      
 673   2                      /*-------------RESOLUTIONS------------*/
 674   2             /*     
 675   2                  packet_data[302] = TYPE_FLAG;
 676   2                  packet_data[303] = 2;
 677   2                  packet_data[304] = 0;   //Fake data used to correctly read string
 678   2                  packet_data[305] = 0;
 679   2                  for(i = 0; i < NUM_OF_SENSORS; i++) {
 680   2                      sprintf(tmp_string, " %d", (int) c_mem.res[i]);
 681   2                      strcat(res_str, tmp_string);
 682   2                  }
 683   2                  //strcat(res_str, "\0");
 684   2                  string_lenght = 21;
 685   2                  for(i = string_lenght; i != 0; i--)
 686   2                      packet_data[306 + string_lenght - i] = res_str[string_lenght - i];
 687   2                  //The following byte indicates the number of menus at the end of the packet to send
 688   2                  packet_data[306 + string_lenght] = 3;
 689   2               */   
 690   2                  /*----------MEASUREMENT OFFSET--------*/
 691   2                  
 692   2                  packet_data[352] = TYPE_INT16;
 693   2                  packet_data[353] = 2;
 694   2                  for(i = 0; i < NUM_OF_SENSORS; i++) 
 695   2                      *((int16 *) ( packet_data + 354 + (i * 2) )) = (int16) (c_mem.m_off[i] >> c_mem.res[i]);
 696   2                  for(i = m_off_str_len; i != 0; i--)
 697   2                      packet_data[358 + m_off_str_len - i] = m_off_str[m_off_str_len - i];
 698   2                  
 699   2                  /*------------MULTIPLIERS-------------*/
 700   2                  
 701   2                  packet_data[402] = TYPE_FLOAT;
 702   2                  packet_data[403] = 2;
 703   2                  for(i = 0; i < NUM_OF_SENSORS; i++)
 704   2                      *((float *) ( packet_data + 404 + (i * 4) )) = c_mem.m_mult[i];
 705   2                  for(i = 0; i < strlen(mult_str); i++)
 706   2                      packet_data[412 + i] = mult_str[i];
 707   2      
 708   2                  /*-----------POS LIMIT FLAG-----------*/
 709   2                  
 710   2                  packet_data[452] = TYPE_FLAG;
 711   2                  packet_data[453] = 1;
 712   2                  packet_data[454] = c_mem.pos_lim_flag;
 713   2                  if(c_mem.pos_lim_flag) {
 714   3                      strcat(pos_lim_flag_str, " YES\0");
 715   3                      string_lenght = 28;
 716   3                  }
 717   2                  else {
 718   3                      strcat(pos_lim_flag_str, " NO\0");
 719   3                      string_lenght = 27;
 720   3                  }
 721   2                  for(i = string_lenght; i != 0; i--)
 722   2                      packet_data[455 + string_lenght - i] = pos_lim_flag_str[string_lenght - i];
 723   2                  //The following byte indicates the number of menus at the end of the packet to send
 724   2                  packet_data[455 + string_lenght] = 3;
 725   2                  
 726   2                  /*-----------POSITION LIMITS----------*/
 727   2                  
 728   2                  packet_data[502] = TYPE_INT32;
 729   2                  packet_data[503] = 4;
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 13  

 730   2                  for (i = 0; i < NUM_OF_MOTORS; i++) {
 731   3                      *((int32 *)( packet_data + 504 + (i * 2 * 4) )) = (c_mem.pos_lim_inf[i] >> c_mem.res[i]);
 732   3                      *((int32 *)( packet_data + 504 + (i * 2 * 4) + 4)) = (c_mem.pos_lim_sup[i] >> c_mem.res[i]
             -);
 733   3                  }
 734   2                  for(i = pos_lim_str_len; i != 0; i--)
 735   2                      packet_data[520 + pos_lim_str_len - i] = pos_lim_str[pos_lim_str_len - i];
 736   2      
 737   2                  /*--------------MAX STEPS-------------*/
 738   2                  
 739   2                  packet_data[552] = TYPE_INT32;
 740   2                  packet_data[553] = 2;
 741   2                  *((int32 *)(packet_data + 554)) = c_mem.max_step_neg;
 742   2                  *((int32 *)(packet_data + 558)) = c_mem.max_step_pos;
 743   2                  for(i = 0; i < strlen(max_step_str); i++)
 744   2                      packet_data[562 + i] = max_step_str[i];
 745   2      
 746   2                  /*------------CURRENT LIMIT-----------*/
 747   2      
 748   2                  packet_data[602] = TYPE_INT16;
 749   2                  packet_data[603] = 1;
 750   2                  *((int16 *)(packet_data + 604)) = c_mem.current_limit;
 751   2                  for(i = curr_limit_str_len; i != 0; i--)
 752   2                      packet_data[606 + curr_limit_str_len - i] = curr_limit_str[curr_limit_str_len - i];
 753   2      
 754   2                  /*-----CURRENT PROPORTIONAL GAIN-----*/
 755   2      
 756   2                  packet_data[652] = TYPE_FLOAT;
 757   2                  packet_data[653] = 1;
 758   2                  *((float *)(packet_data + 654)) = c_mem.curr_prop_gain;
 759   2                  for(i = curr_prop_gain_str_len; i!= 0; i--)
 760   2                      packet_data[658 + curr_prop_gain_str_len - i] = curr_prop_gain_str[curr_prop_gain_str_len 
             -- i];
 761   2      
 762   2                  /*---------CURRENT SATURATION--------*/
 763   2      
 764   2                  packet_data[702] = TYPE_INT16;
 765   2                  packet_data[703] = 1;
 766   2                  *((int16 *)(packet_data + 704)) = c_mem.curr_sat;
 767   2                  for(i = curr_sat_str_len; i!= 0; i--)
 768   2                      packet_data[706 + curr_sat_str_len - i] = curr_sat_str[curr_sat_str_len - i];
 769   2      
 770   2                  /*---------CURRENT DEAD ZONE---------*/
 771   2      
 772   2                  packet_data[752] = TYPE_INT16;
 773   2                  packet_data[753] = 1;
 774   2                  *((int16 *)(packet_data + 754)) = c_mem.curr_dead_zone;
 775   2                  for(i = curr_dead_zone_str_len; i!= 0; i--)
 776   2                      packet_data[756 + curr_dead_zone_str_len - i] = curr_dead_zone_str[curr_dead_zone_str_len 
             -- i];
 777   2      
 778   2                  /*--------CUFF ACTIVATION FLAG FORCE-------*/
 779   2      
 780   2                  packet_data[802] = TYPE_FLAG;
 781   2                  packet_data[803] = 1;
 782   2                  packet_data[804] = c_mem.cuff_activation_flag_force;
 783   2                  if(c_mem.cuff_activation_flag_force) {
 784   3                      strcat(cuff_activ_force_str, " YES\0");
 785   3                      string_lenght = 37;
 786   3                  }
 787   2                  else {
 788   3                      strcat(cuff_activ_force_str, " NO\0");
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 14  

 789   3                      string_lenght = 36;
 790   3                  }
 791   2                  for(i = string_lenght; i!=0; i--)
 792   2                      packet_data[805 + string_lenght - i] = cuff_activ_force_str[string_lenght - i];
 793   2                  //The following byte indicates the number of menus at the end of the packet to send
 794   2                  packet_data[805 + string_lenght] = 3;
 795   2                      
 796   2                  /*------------POWER TENSION----------*/
 797   2      
 798   2                  packet_data[852] = TYPE_UINT16;
 799   2                  packet_data[853] = 1;
 800   2                  *((uint16 *)(packet_data + 854)) = c_mem.power_tension;
 801   2                  for(i = pow_tension_str_len; i!= 0; i--)
 802   2                      packet_data[856 + pow_tension_str_len - i] = pow_tension_str[pow_tension_str_len - i];
 803   2                      
 804   2                   /*--------CUFF ACTIVATION FLAG PROPRIO-------*/
 805   2      
 806   2                  packet_data[902] = TYPE_FLAG;
 807   2                  packet_data[903] = 1;
 808   2                  packet_data[904] = c_mem.cuff_activation_flag_proprio;
 809   2                  if(c_mem.cuff_activation_flag_proprio) {
 810   3                      strcat(cuff_activ_proprio_str, " YES\0");
 811   3                      string_lenght = 39;
 812   3                  }
 813   2                  else {
 814   3                      strcat(cuff_activ_proprio_str, " NO\0");
 815   3                      string_lenght = 38;
 816   3                  }
 817   2                  for(i = string_lenght; i!=0; i--)
 818   2                      packet_data[905 + string_lenght - i] = cuff_activ_proprio_str[string_lenght - i];
 819   2                  //The following byte indicates the number of menus at the end of the packet to send
 820   2                  packet_data[905 + string_lenght] = 3;
 821   2      
 822   2                  /*---------MAX SLIDE---------*/
 823   2      
 824   2                  packet_data[952] = TYPE_INT32;
 825   2                  packet_data[953] = 1;
 826   2                  *((int32 *)(packet_data + 954)) = c_mem.max_slide;
 827   2                  for(i = max_slide_str_len; i!= 0; i--)
 828   2                      packet_data[958 + max_slide_str_len - i] = max_slide_str[max_slide_str_len - i];
 829   2                      
 830   2                  /*---------MAX SH POS---------*/
 831   2      
 832   2                  packet_data[1002] = TYPE_INT32;
 833   2                  packet_data[1003] = 1;
 834   2                  *((int32 *)(packet_data + 1004)) = c_mem.max_SH_pos;
 835   2                  for(i = max_SH_pos_str_len; i!= 0; i--)
 836   2                      packet_data[1008 + max_SH_pos_str_len - i] = max_SH_pos_str[max_SH_pos_str_len - i];
 837   2                      
 838   2                  /*---------HAND ID---------*/
 839   2      
 840   2                  packet_data[1052] = TYPE_UINT8;
 841   2                  packet_data[1053] = 1;
 842   2                  *((uint8 *)(packet_data + 1054)) = c_mem.hand_ID;
 843   2                  for(i = hand_ID_str_len; i!= 0; i--)
 844   2                      packet_data[1055 + hand_ID_str_len - i] = hand_ID_str[hand_ID_str_len - i];
 845   2      
 846   2                  /*--------CUFF ACTIVATION FLAG FORCE + PROPRIO-------*/
 847   2      
 848   2                  packet_data[1102] = TYPE_FLAG;
 849   2                  packet_data[1103] = 1;
 850   2                  packet_data[1104] = c_mem.cuff_activation_flag_force_proprio;
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 15  

 851   2                  if(c_mem.cuff_activation_flag_force_proprio) {
 852   3                      strcat(cuff_activ_force_proprio_str, " YES\0");
 853   3                      string_lenght = 34;
 854   3                  }
 855   2                  else {
 856   3                      strcat(cuff_activ_force_proprio_str, " NO\0");
 857   3                      string_lenght = 33;
 858   3                  }
 859   2                  for(i = string_lenght; i!=0; i--)
 860   2                      packet_data[1105 + string_lenght - i] = cuff_activ_force_proprio_str[string_lenght - i];
 861   2                  //The following byte indicates the number of menus at the end of the packet to sen
 862   2                  packet_data[1105 + string_lenght] = 3;
 863   2      
 864   2                  
 865   2                  /*---------SH REST POS---------*/
 866   2      
 867   2                  packet_data[1152] = TYPE_INT32;
 868   2                  packet_data[1153] = 1;
 869   2                  *((int32 *)(packet_data + 1154)) = c_mem.SH_rest_pos;
 870   2                  for(i = SH_rest_pos_str_len; i!= 0; i--)
 871   2                      packet_data[1158 + SH_rest_pos_str_len - i] = SH_rest_pos_str[SH_rest_pos_str_len - i];
 872   2                  
 873   2                  /*--------RIGHT LEFT-------*/
 874   2      
 875   2                  packet_data[1202] = TYPE_FLAG;
 876   2                  packet_data[1203] = 1;
 877   2                  packet_data[1204] = c_mem.right_left;
 878   2                  if(c_mem.right_left) {
 879   3                      strcat(right_left_par_str, " Left\0");
 880   3                      string_lenght = 20;
 881   3                  }
 882   2                  else {
 883   3                      strcat(right_left_par_str, " Right\0");
 884   3                      string_lenght = 21;
 885   3                  }
 886   2                  for(i = string_lenght; i!=0; i--)
 887   2                      packet_data[1205 + string_lenght - i] = right_left_par_str[string_lenght - i];
 888   2                  //The following byte indicates the number of menus at the end of the packet to sen
 889   2                  packet_data[1205 + string_lenght] = 4;
 890   2                  
 891   2                  /*-----------PARAMETERS MENU----------*/
 892   2      
 893   2                  for(i = input_mode_menu_len; i != 0; i--)
 894   2                      packet_data[1252 + input_mode_menu_len - i] = input_mode_menu[input_mode_menu_len - i];
 895   2      
 896   2                  for(i = control_mode_menu_len; i != 0; i--)
 897   2                      packet_data[1402 + control_mode_menu_len - i] = control_mode_menu[control_mode_menu_len - 
             -i];
 898   2                     
 899   2                  for(i = yes_no_menu_len; i!= 0; i--)
 900   2                      packet_data[1552 + yes_no_menu_len - i] = yes_no_menu[yes_no_menu_len - i];
 901   2                     
 902   2                  for(i = right_left_menu_len; i!= 0; i--)
 903   2                      packet_data[1702 + right_left_menu_len - i] = right_left_menu[right_left_menu_len - i];
 904   2      
 905   2                  packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
 906   2                  commWrite(packet_data, packet_lenght, FALSE);
 907   2                  UART_RS485_ClearTxBuffer();
 908   2              break;
 909   2      
 910   2      //===================================================================     set_id
 911   2              case 1:         //ID - uint8
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 16  

 912   2                  g_mem.id = g_rx.buffer[3];
 913   2              break;
 914   2              
 915   2      //=======================================================     set_pid_parameters
 916   2              case 2:         //Position PID - float[3]
 917   2                  if(c_mem.control_mode != CURR_AND_POS_CONTROL /*&& c_mem.control_mode != DEFL_CURRENT_CONTROL*
             -/) {
 918   3                      g_mem.k_p = *((float *) &g_rx.buffer[3]) * 65536;
 919   3                      g_mem.k_i = *((float *) &g_rx.buffer[3 + 4]) * 65536;
 920   3                      g_mem.k_d = *((float *) &g_rx.buffer[3 + 8]) * 65536;
 921   3                  }
 922   2                  else {
 923   3                      g_mem.k_p_dl = *((float *) &g_rx.buffer[3]) * 65536;
 924   3                      g_mem.k_i_dl = *((float *) &g_rx.buffer[3 + 4]) * 65536;
 925   3                      g_mem.k_d_dl = *((float *) &g_rx.buffer[3 + 8]) * 65536;
 926   3                  }
 927   2              break;
 928   2      
 929   2      //==================================================     set_curr_pid_parameters
 930   2              case 3:         //Current PID - float[3]
 931   2                  if(c_mem.control_mode != CURR_AND_POS_CONTROL /*&& c_mem.control_mode != DEFL_CURRENT_CONTROL*
             -/) {              
 932   3                      g_mem.k_p_c = *((float *) &g_rx.buffer[3]) * 65536;
 933   3                      g_mem.k_i_c = *((float *) &g_rx.buffer[3 + 4]) * 65536;
 934   3                      g_mem.k_d_c = *((float *) &g_rx.buffer[3 + 8]) * 65536;
 935   3                  }
 936   2                  else {
 937   3                      g_mem.k_p_c_dl = *((float *) &g_rx.buffer[3]) * 65536;
 938   3                      g_mem.k_i_c_dl = *((float *) &g_rx.buffer[3 + 4]) * 65536;
 939   3                      g_mem.k_d_c_dl = *((float *) &g_rx.buffer[3 + 8]) * 65536;
 940   3                  }
 941   2              break;
 942   2      
 943   2      //===================================================     set_startup_activation        
 944   2              case 4:         //Startup flag - uint8
 945   2                  if(g_rx.buffer[3])
 946   2                      g_mem.activ = 0x03;
 947   2                  else
 948   2                      g_mem.activ = 0x00;
 949   2              break;
 950   2      
 951   2      //===========================================================     set_input_mode        
 952   2              case 5:         //Input mode - uint8
 953   2                  g_mem.input_mode = g_rx.buffer[3];
 954   2              break;
 955   2              
 956   2      //=========================================================     set_control_mode
 957   2              case 6:         //Control mode - uint8
 958   2                  g_mem.control_mode = g_rx.buffer[3];
 959   2              break;
 960   2              
 961   2      //===========================================================     set_resolution
 962   2              case 7:         //Resolution - uint8[3]
 963   2                  for (i =0; i < NUM_OF_SENSORS; i++)
 964   2                      g_mem.res[i] = *((uint8 *) &g_rx.buffer[i+3]);
 965   2              break;
 966   2              
 967   2      //===============================================================     set_offset
 968   2              case 8:         //Measurement Offset - int32[3] 
 969   2                  for(i = 0; i < NUM_OF_SENSORS; ++i) {
 970   3                      g_mem.m_off[i] = *((int16 *) &g_rx.buffer[3 + i * 2]);
 971   3                      g_mem.m_off[i] = g_mem.m_off[i] << g_mem.res[i];
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 17  

 972   3      
 973   3                      g_meas.rot[i] = 0;
 974   3                  }
 975   2                  reset_last_value_flag = 1;
 976   2              break;
 977   2              
 978   2      //===========================================================     set_multiplier
 979   2              case 9:         //Multipliers - float[3]
 980   2                  for(i = 0; i < NUM_OF_SENSORS; ++i)
 981   2                      g_mem.m_mult[i] = *((float *) &g_rx.buffer[3 + i * 4]);
 982   2              break;
 983   2              
 984   2      //=====================================================     set_pos_limit_enable
 985   2              case 10:        //Position limit flag - uint8
 986   2                  g_mem.pos_lim_flag = *((uint8 *) &g_rx.buffer[3]);
 987   2              break;
 988   2      
 989   2      //============================================================     set_pos_limit
 990   2              case 11:        //Position limits - int32[4]
 991   2                  for (i = 0; i < NUM_OF_MOTORS; i++) {
 992   3                      g_mem.pos_lim_inf[i] = *((int32 *) &g_rx.buffer[3 + (i * 2 * 4)]);
 993   3                      g_mem.pos_lim_sup[i] = *((int32 *) &g_rx.buffer[3 + (i * 2 * 4) + 4]);
 994   3      
 995   3                      g_mem.pos_lim_inf[i] = g_mem.pos_lim_inf[i] << g_mem.res[i];
 996   3                      g_mem.pos_lim_sup[i] = g_mem.pos_lim_sup[i] << g_mem.res[i];
 997   3                  }
 998   2              break;
 999   2      
1000   2      //==================================================     set_max_steps_per_cycle
1001   2              case 12:        //Max steps - int32[2]
1002   2                  aux_int = *((int32 *) &g_rx.buffer[3]);
1003   2                  if (aux_int <= 0)
1004   2                      g_mem.max_step_neg = aux_int;
1005   2      
1006   2                  aux_int = *((int32 *) &g_rx.buffer[3 + 4]);
1007   2                  if (aux_int >= 0) 
1008   2                      g_mem.max_step_pos = aux_int;
1009   2              break;
1010   2              
1011   2      //========================================================     set_current_limit
1012   2              case 13:        //Current limit - int16
1013   2                  g_mem.current_limit = *((int16*) &g_rx.buffer[3]);
1014   2              break;
1015   2      
1016   2      //=======================================================     set_curr_prop_gain
1017   2              case 14:
1018   2                  g_mem.curr_prop_gain = *((float*) &g_rx.buffer[3]);
1019   2              break;
1020   2      
1021   2      //=============================================================     set_curr_sat
1022   2              case 15: 
1023   2                  g_mem.curr_sat = *((int16*) &g_rx.buffer[3]);
1024   2              break;
1025   2      
1026   2      //=======================================================     set_curr_dead_zone
1027   2              case 16:
1028   2                  g_mem.curr_dead_zone = *((int16*) &g_rx.buffer[3]);
1029   2              break;
1030   2      
1031   2      //=================================================     set_cuff_activation_flag
1032   2              case 17:
1033   2                  g_mem.cuff_activation_flag_force = *((uint8*) & g_rx.buffer[3]);
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 18  

1034   2                  if (g_mem.cuff_activation_flag_force) {
1035   3                      g_mem.cuff_activation_flag_proprio = 0;
1036   3                      g_mem.cuff_activation_flag_force_proprio = 0;
1037   3                  }
1038   2              break;
1039   2      
1040   2      //========================================================     set_power_tension
1041   2              case 18:
1042   2                  g_mem.power_tension = *((uint16*) &g_rx.buffer[3]);
1043   2              break;
1044   2                  
1045   2      //=================================================     set_cuff_activation_flag
1046   2              case 19:
1047   2                  g_mem.cuff_activation_flag_proprio = *((uint8*) & g_rx.buffer[3]);
1048   2                  if (g_mem.cuff_activation_flag_proprio) {
1049   3                      g_mem.cuff_activation_flag_force = 0;
1050   3                      g_mem.cuff_activation_flag_force_proprio = 0;
1051   3                  }
1052   2              break;  
1053   2                  
1054   2      //=============================================================     set_max_slide
1055   2              case 20: 
1056   2                  g_mem.max_slide = *((int32*) &g_rx.buffer[3]);
1057   2              break;
1058   2                  
1059   2      //=============================================================     set_max_SH_pos
1060   2              case 21: 
1061   2                  g_mem.max_SH_pos = *((int32*) &g_rx.buffer[3]);
1062   2              break;   
1063   2      //=============================================================     set_hand_ID
1064   2              case 22: 
1065   2                  g_mem.hand_ID = *((uint8*) &g_rx.buffer[3]);
1066   2              break;           
1067   2      //=================================================     set_cuff_activation_flag
1068   2              case 23:
1069   2                  g_mem.cuff_activation_flag_force_proprio = *((uint8*) & g_rx.buffer[3]);
1070   2                  if (g_mem.cuff_activation_flag_force_proprio){
1071   3                      g_mem.cuff_activation_flag_force = 0;
1072   3                      g_mem.cuff_activation_flag_proprio = 0;
1073   3                  }
1074   2              break;  
1075   2       //=============================================================     set_SH_rest_pos
1076   2              case 24: 
1077   2                  g_mem.SH_rest_pos = *((int32*) &g_rx.buffer[3]);
1078   2              break; 
1079   2      //=================================================     set_cuff_activation_flag
1080   2              case 25:
1081   2                  g_mem.right_left = *((uint8*) & g_rx.buffer[3]);
1082   2              break;              
1083   2          }
1084   1      }
1085          
1086          //==============================================================================
1087          //                                                           PREPARE DEVICE INFO
1088          //==============================================================================
1089          
1090          void infoPrepare(unsigned char *info_string)
1091          {
1092   1          int CYDATA i;
1093   1      
1094   1          unsigned char str[50];
1095   1          
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 19  

1096   1          strcpy(info_string, "");
1097   1          strcat(info_string, "\r\n");
1098   1          strcat(info_string, "Firmware version: ");
1099   1          strcat(info_string, VERSION);
1100   1          strcat(info_string, ".\r\n\r\n");
1101   1      
1102   1          strcat(info_string, "DEVICE INFO\r\n");
1103   1          sprintf(str, "ID: %d\r\n", (int) c_mem.id);
1104   1          strcat(info_string, str);
1105   1          sprintf(str, "Number of sensors: %d\r\n", (int) NUM_OF_SENSORS);
1106   1          strcat(info_string, str);
1107   1          sprintf(str, "Supply tension: %d\r\n", c_mem.power_tension);
1108   1          strcat(info_string, str);
1109   1          sprintf(str, "PWM Limit: %d\r\n", (int) dev_pwm_limit);
1110   1          strcat(info_string, str);
1111   1          strcat(info_string, "\r\n");
1112   1      
1113   1          strcat(info_string, "MOTOR INFO\r\n");
1114   1          strcat(info_string, "Motor references: ");
1115   1          
1116   1          for (i = 0; i < NUM_OF_MOTORS; i++) {
1117   2              sprintf(str, "%d ", (int)(g_refOld.pos[i] >> c_mem.res[i]));
1118   2              strcat(info_string,str);
1119   2          }
1120   1          strcat(info_string,"\r\n");
1121   1      
1122   1          sprintf(str, "Motor enabled: ");
1123   1          
1124   1          if (g_refOld.onoff & 0x03) {
1125   2              strcat(str,"YES\r\n");
1126   2          } else {
1127   2              strcat(str,"NO\r\n");
1128   2          }
1129   1          strcat(info_string, str);
1130   1      
1131   1      
1132   1          strcat(info_string,"\r\nMEASUREMENTS INFO\r\n");
1133   1          strcat(info_string, "Sensor value:\r\n");
1134   1          for (i = 0; i < NUM_OF_SENSORS; i++) {
1135   2              sprintf(str,"%d -> %d", i+1,
1136   2                  (int)(g_measOld.pos[i] >> c_mem.res[i]));
1137   2              strcat(info_string, str);
1138   2              strcat(info_string, "\r\n");
1139   2          }
1140   1          sprintf(str,"Voltage (mV): %ld", (int32) dev_tension );
1141   1          strcat(info_string, str);
1142   1          strcat(info_string,"\r\n");
1143   1      
1144   1          sprintf(str,"Current 1 (mA): %ld", (int32) g_measOld.curr[0] );
1145   1          strcat(info_string, str);
1146   1          strcat(info_string,"\r\n");
1147   1      
1148   1          sprintf(str,"Current 2 (mA): %ld", (int32) g_measOld.curr[1] );
1149   1          strcat(info_string, str);
1150   1          strcat(info_string,"\r\n");
1151   1      
1152   1      
1153   1          strcat(info_string, "\r\nDEVICE PARAMETERS\r\n");
1154   1      
1155   1          strcat(info_string, "PID Controller:\r\n");
1156   1          if(c_mem.control_mode != CURR_AND_POS_CONTROL) {
1157   2              sprintf(str,"P -> %f\r\n", ((double) c_mem.k_p / 65536));
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 20  

1158   2              strcat(info_string, str);
1159   2              sprintf(str,"I -> %f\r\n", ((double) c_mem.k_i / 65536));
1160   2              strcat(info_string, str);
1161   2              sprintf(str,"D -> %f\r\n", ((double) c_mem.k_d / 65536));
1162   2              strcat(info_string, str);
1163   2          }
1164   1          else {
1165   2              sprintf(str,"P -> %f\r\n", ((double) c_mem.k_p_dl / 65536));
1166   2              strcat(info_string, str);
1167   2              sprintf(str,"I -> %f\r\n", ((double) c_mem.k_i_dl / 65536));
1168   2              strcat(info_string, str);
1169   2              sprintf(str,"D -> %f\r\n", ((double) c_mem.k_d_dl / 65536));
1170   2              strcat(info_string, str);
1171   2          }
1172   1      
1173   1          strcat(info_string, "Current PID Controller:\r\n");
1174   1          if(c_mem.control_mode != CURR_AND_POS_CONTROL) {
1175   2              sprintf(str,"P -> %f\r\n", ((double) c_mem.k_p_c / 65536));
1176   2              strcat(info_string, str);
1177   2              sprintf(str,"I -> %f\r\n", ((double) c_mem.k_i_c / 65536));
1178   2              strcat(info_string, str);
1179   2              sprintf(str,"D -> %f\r\n", ((double) c_mem.k_d_c / 65536));
1180   2              strcat(info_string, str);
1181   2          }
1182   1          else {
1183   2              sprintf(str,"P -> %f\r\n", ((double) c_mem.k_p_c_dl / 65536));
1184   2              strcat(info_string, str);
1185   2              sprintf(str,"I -> %f\r\n", ((double) c_mem.k_i_c_dl / 65536));
1186   2              strcat(info_string, str);
1187   2              sprintf(str,"D -> %f\r\n", ((double) c_mem.k_d_c_dl / 65536));
1188   2              strcat(info_string, str);
1189   2          }
1190   1      
1191   1          strcat(info_string,"\r\n");
1192   1      
1193   1          if (c_mem.activ == 0x03) {
1194   2              strcat(info_string, "Startup activation: YES\r\n");
1195   2          } else {
1196   2              strcat(info_string, "Startup activation: NO\r\n");
1197   2          }
1198   1      
1199   1          switch(c_mem.input_mode) {
1200   2              case 0:
1201   2                  strcat(info_string, "Input mode: USB\r\n");
1202   2              break;
1203   2              case 1:
1204   2                  strcat(info_string, "Input mode: Sensor 3\r\n");
1205   2              break;
1206   2          }
1207   1          
1208   1          strcat(info_string, "Control Mode: ");
1209   1          switch(c_mem.control_mode) {
1210   2              case CONTROL_ANGLE:
1211   2                  strcat(info_string, "Position\r\n");
1212   2              break;
1213   2              case CONTROL_PWM:
1214   2                  strcat(info_string, "PWM\r\n");
1215   2                  break;
1216   2              case CONTROL_CURRENT:
1217   2                  strcat(info_string, "Current\r\n");
1218   2                  break;
1219   2              case CURR_AND_POS_CONTROL:
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 21  

1220   2                  strcat(info_string, "Position and current\r\n");
1221   2                  break;
1222   2              /*case DEFLECTION_CONTROL: 
1223   2                  strcat(info_string, "Deflection\r\n");
1224   2                  break;
1225   2              case DEFL_CURRENT_CONTROL:
1226   2                  strcat(info_string, "Deflection and current\r\n");
1227   2                  break;*/
1228   2          }
1229   1      
1230   1          strcat(info_string, "Sensor resolution:\r\n");
1231   1          for(i = 0; i < NUM_OF_SENSORS; ++i)
1232   1          {
1233   2              sprintf(str,"%d -> %d", (int) (i + 1),
1234   2                  (int) c_mem.res[i]);
1235   2              strcat(info_string, str);
1236   2              strcat(info_string,"\r\n");
1237   2          }
1238   1      
1239   1      
1240   1          strcat(info_string, "Measurement Offset:\r\n");
1241   1          for(i = 0; i < NUM_OF_SENSORS; ++i)
1242   1          {
1243   2              sprintf(str,"%d -> %ld", (int) (i + 1),
1244   2                  (int32) c_mem.m_off[i] >> c_mem.res[i]);
1245   2              strcat(info_string, str);
1246   2              strcat(info_string,"\r\n");
1247   2          }
1248   1      
1249   1          strcat(info_string, "Measurement Multiplier:\r\n");
1250   1          for(i = 0; i < NUM_OF_SENSORS; ++i)
1251   1          {
1252   2              sprintf(str,"%d -> %f", (int)(i + 1),
1253   2                  (double) c_mem.m_mult[i]);
1254   2              strcat(info_string, str);
1255   2              strcat(info_string,"\r\n");
1256   2          }
1257   1      
1258   1          strcat(info_string, "\nCurrent controller's parameters:\nProportional gain: ");
1259   1          sprintf(str, "%f", c_mem.curr_prop_gain);
1260   1          strcat(info_string, str);
1261   1          strcat(info_string, "\r\n");
1262   1      
1263   1          strcat(info_string, "Saturation value: ");
1264   1          sprintf(str, "%hd", c_mem.curr_sat);
1265   1          strcat(info_string, str);
1266   1          strcat(info_string, "\r\n");
1267   1      
1268   1          strcat(info_string, "Dead zone: ");
1269   1          sprintf(str, "%hd", c_mem.curr_dead_zone);
1270   1          strcat(info_string, str);
1271   1          strcat(info_string, "\r\n\n");
1272   1      
1273   1          sprintf(str, "Position limit active: %d", (int)g_mem.pos_lim_flag);
1274   1          strcat(info_string, str);
1275   1          strcat(info_string,"\r\n");
1276   1      
1277   1          for (i = 0; i < NUM_OF_MOTORS; i++) {
1278   2              sprintf(str, "Position limit motor %d: inf -> %ld  ", (int)(i + 1),
1279   2                      (int32)g_mem.pos_lim_inf[i] >> g_mem.res[i]);
1280   2              strcat(info_string, str);
1281   2      
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 22  

1282   2              sprintf(str, "sup -> %ld\r\n",
1283   2                      (int32)g_mem.pos_lim_sup[i] >> g_mem.res[i]);
1284   2              strcat(info_string, str);
1285   2          }
1286   1      
1287   1          sprintf(str, "Max stiffness: %d", (int)g_mem.max_stiffness >> g_mem.res[0]);
1288   1          strcat(info_string, str);
1289   1          strcat(info_string,"\r\n");
1290   1      
1291   1          sprintf(str, "Current limit: %d", (int)g_mem.current_limit);
1292   1          strcat(info_string, str);
1293   1          strcat(info_string,"\r\n");
1294   1      
1295   1          if(c_mem.cuff_activation_flag_force)
1296   1              strcat(info_string, "Cuff startup activation (force): YES\r\n");
1297   1          else
1298   1              strcat(info_string, "Cuff startup activation (force): NO\r\n");
1299   1      
1300   1          if(c_mem.cuff_activation_flag_proprio)
1301   1              strcat(info_string, "Cuff startup activation (proprioception): YES\r\n");
1302   1          else
1303   1              strcat(info_string, "Cuff startup activation (proprioception): NO\r\n");
1304   1          
1305   1          if(c_mem.cuff_activation_flag_force_proprio)
1306   1              strcat(info_string, "Cuff startup activation (force + proprio): YES\r\n");
1307   1          else
1308   1              strcat(info_string, "Cuff startup activation (force + proprio): NO\r\n");
1309   1              
1310   1          if(cuff_flag_force)
1311   1              strcat(info_string, "Cuff active (force): YES\r\n");
1312   1          else
1313   1              strcat(info_string, "Cuff active (force): NO\r\n");
1314   1              
1315   1          if(cuff_flag_proprio)
1316   1              strcat(info_string, "Cuff active (proprioception): YES\r\n");
1317   1          else
1318   1              strcat(info_string, "Cuff active (proprioception): NO\r\n");
1319   1          
1320   1          if(cuff_flag_force_proprio)
1321   1              strcat(info_string, "Cuff active (force + proprio): YES\r\n");
1322   1          else
1323   1              strcat(info_string, "Cuff active (force + proprio): NO\r\n");
1324   1              
1325   1          if(c_mem.right_left)
1326   1              strcat(info_string, "Cuff side: RIGHT\r\n");
1327   1          else
1328   1              strcat(info_string, "Cuff side: LEFT\r\n");
1329   1          
1330   1          sprintf(str, "debug: %ld", (uint32) timer_value0 - (uint32) timer_value);
1331   1          strcat(info_string, str);
1332   1          strcat(info_string, "\r\n");
1333   1      }
1334          
1335          //==============================================================================
1336          //                                                     WRITE FUNCTIONS FOR RS485
1337          //==============================================================================
1338          
1339          void commWrite_old_id(uint8 *packet_data, uint16 packet_lenght, uint8 old_id)
1340          {
1341   1          uint16 CYDATA index;    // iterator
1342   1      
1343   1          // frame - start
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 23  

1344   1          UART_RS485_PutChar(':');
1345   1          UART_RS485_PutChar(':');
1346   1          // frame - ID
1347   1          //if(old_id)
1348   1              UART_RS485_PutChar(old_id);
1349   1          //else
1350   1              //UART_RS485_PutChar(g_mem.id);
1351   1              
1352   1          // frame - length
1353   1          UART_RS485_PutChar((uint8)packet_lenght);
1354   1          // frame - packet data
1355   1          for(index = 0; index < packet_lenght; ++index) {
1356   2              UART_RS485_PutChar(packet_data[index]);
1357   2          }
1358   1      
1359   1          index = 0;
1360   1      
1361   1          while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
1362   1      
1363   1          RS485_CTS_Write(1);
1364   1          RS485_CTS_Write(0);
1365   1      }
1366          
1367          void commWrite(uint8 *packet_data,const uint16 packet_lenght, uint8 next)
1368          {
1369   1          uint16 CYDATA index;
1370   1      
1371   1          // frame - start
1372   1          UART_RS485_PutChar(':');
1373   1          UART_RS485_PutChar(':');
1374   1          
1375   1          // frame - ID
1376   1          if(next)
1377   1          // If next flag is set the message is sent to the device with ID with value
1378   1          // greater by one than the one that sends the message
1379   1              UART_RS485_PutChar((uint8) g_mem.hand_ID);
1380   1          else
1381   1              UART_RS485_PutChar((uint8) g_mem.id);
1382   1          
1383   1          // frame - length
1384   1          UART_RS485_PutChar((uint8)packet_lenght);
1385   1          
1386   1          // frame - packet data
1387   1          for(index = 0; index < packet_lenght; ++index)
1388   1              UART_RS485_PutChar(packet_data[index]);
1389   1          
1390   1          index = 0;
1391   1      
1392   1          while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
1393   1      
1394   1          if(!next) {
1395   2              RS485_CTS_Write(1);
1396   2              RS485_CTS_Write(0);
1397   2          }
1398   1      }
1399          
1400          //==============================================================================
1401          //                                                       ACKNOWLEDGMENT FUNCTION
1402          //==============================================================================
1403          
1404          void sendAcknowledgment(const uint8 value) {
1405   1      
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 24  

1406   1          // Packet: header + crc
1407   1          
1408   1          uint8 CYDATA packet_data[2];
1409   1      
1410   1          // Header
1411   1          packet_data[0] = value;
1412   1          
1413   1          // Payload/CRC
1414   1          packet_data[1] = value;
1415   1      
1416   1          commWrite(packet_data, 2, FALSE);
1417   1      }
1418          
1419          //==============================================================================
1420          //                                                                  STORE MEMORY
1421          //==============================================================================
1422          /**
1423          * This function stores current memory settings on the eeprom with the specified
1424          * displacement
1425          **/
1426          
1427          uint8 memStore(int displacement) {
1428   1      
1429   1          uint8 writeStatus;
1430   1          int i;
1431   1          int pages;
1432   1          uint8 ret_val = 1;
1433   1      
1434   1          PWM_MOTORS_WriteCompare1(0);
1435   1          PWM_MOTORS_WriteCompare2(0);
1436   1      
1437   1          // Retrieve temperature for better writing performance
1438   1          EEPROM_UpdateTemperature();
1439   1      
1440   1          memcpy( &c_mem, &g_mem, sizeof(g_mem) );
1441   1      
1442   1          pages = sizeof(g_mem) / 16 + (sizeof(g_mem) % 16 > 0);
1443   1      
1444   1          for(i = 0; i < pages; ++i) {
1445   2              writeStatus = EEPROM_Write(&g_mem.flag + 16 * i, i + displacement);
1446   2              if(writeStatus != CYRET_SUCCESS) {
1447   3                  ret_val = 0;
1448   3                  break;
1449   3              }
1450   2          }
1451   1      
1452   1          memcpy( &g_mem, &c_mem, sizeof(g_mem) );
1453   1      
1454   1          return ret_val;
1455   1      }
1456          
1457          
1458          //==============================================================================
1459          //                                                                 RECALL MEMORY
1460          //==============================================================================
1461          /**
1462          * This function loads user settings from the eeprom.
1463          **/
1464          
1465          void memRecall(void) {
1466   1      
1467   1          uint16 i;
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 25  

1468   1      
1469   1          for (i = 0; i < sizeof(g_mem); i++) 
1470   1              ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
1471   1         
1472   1      
1473   1          //check for initialization
1474   1          if (g_mem.flag == FALSE) 
1475   1              memRestore();
1476   1          else 
1477   1              memcpy( &c_mem, &g_mem, sizeof(g_mem) );
1478   1          
1479   1      }
1480          
1481          
1482          //==============================================================================
1483          //                                                                RESTORE MEMORY
1484          //==============================================================================
1485          /**
1486          * This function loads default settings from the eeprom.
1487          **/
1488          
1489          uint8 memRestore(void) {
1490   1      
1491   1          uint16 i;
1492   1      
1493   1          for (i = 0; i < sizeof(g_mem); i++) 
1494   1              ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
1495   1          
1496   1      
1497   1          //check for initialization
1498   1          if (g_mem.flag == FALSE) 
1499   1              return memInit();
1500   1           else 
1501   1              return memStore(0);
1502   1         
1503   1      }
1504          
1505          //==============================================================================
1506          //                                                                   MEMORY INIT
1507          //==============================================================================
1508          /**
1509          * This function initialize memory when eeprom is compromised.
1510          **/
1511          
1512          uint8 memInit(void) {
1513   1      
1514   1          uint8 CYDATA i;
1515   1          //initialize memory settings
1516   1          g_mem.id                =   1;
1517   1          g_mem.k_p               =   0.1 * 65536;
1518   1          g_mem.k_i               =   0 * 65536;
1519   1          g_mem.k_d               =   0.8 * 65536;
1520   1          g_mem.k_p_c             =   6 * 65536;
1521   1          g_mem.k_i_c             =   0 * 65536;
1522   1          g_mem.k_d_c             =   0 * 65536;
1523   1      
1524   1          g_mem.k_p_dl            =   -0.1 * 65536;
1525   1          g_mem.k_i_dl            =   0 * 65536;
1526   1          g_mem.k_d_dl            =   0 * 65536;
1527   1          g_mem.k_p_c_dl          =   0.3 * 65536;
1528   1          g_mem.k_i_c_dl          =   0.0002 * 65536;
1529   1          g_mem.k_d_c_dl          =   0 * 65536;
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 26  

1530   1          
1531   1          g_mem.activ             =   0x03;
1532   1          g_mem.input_mode        =   0;
1533   1          g_mem.control_mode      =   CURR_AND_POS_CONTROL;
1534   1          g_mem.watchdog_period   =   0; //MAX_WATCHDOG_TIMER;
1535   1      
1536   1          g_mem.pos_lim_flag = 0;
1537   1      
1538   1          for (i = 0; i < NUM_OF_MOTORS; i++) {
1539   2              g_mem.pos_lim_inf[i] = -30000;
1540   2              g_mem.pos_lim_sup[i] =  30000;
1541   2          }
1542   1      
1543   1          for(i = 0; i < NUM_OF_SENSORS; ++i)
1544   1          {
1545   2              g_mem.m_mult[i] = 1;
1546   2              g_mem.res[i] = 2;
1547   2              g_mem.m_off[i] = (int32)0 << g_mem.res[i];
1548   2          }
1549   1      
1550   1          g_mem.curr_prop_gain = 0.3;
1551   1          g_mem.curr_sat = 1000;
1552   1          g_mem.curr_dead_zone = 75;
1553   1          g_mem.cuff_activation_flag_force = 0;
1554   1          g_mem.cuff_activation_flag_proprio = 0;
1555   1          g_mem.cuff_activation_flag_force_proprio = 0;
1556   1          g_mem.power_tension = 12000;         //mV of needed supply power
1557   1          g_mem.hand_ID = 2;
1558   1          
1559   1          g_mem.max_step_neg = 0;
1560   1          g_mem.max_step_pos = 0;
1561   1          
1562   1          g_mem.max_slide = 8400;
1563   1          g_mem.max_SH_pos = 19000;
1564   1      
1565   1          g_mem.right_left = 1;       // LEFT CUFF
1566   1          
1567   1          //g_mem.m_off[1] = (int32)0 << g_mem.res[1];
1568   1      
1569   1          g_mem.max_stiffness = 0; //(int32)3000 << g_mem.res[0];
1570   1      
1571   1          g_mem.current_limit = DEFAULT_CURRENT_LIMIT;
1572   1      
1573   1          //set the initialized flag to show EEPROM has been populated
1574   1          g_mem.flag = TRUE;
1575   1          
1576   1          g_mem.SH_rest_pos = 7000;
1577   1      
1578   1          //write that configuration to EEPROM
1579   1          return ( memStore(0) && memStore(DEFAULT_EEPROM_DISPLACEMENT) );
1580   1      }
1581          
1582          //==============================================================================
1583          //                                                    ROUTINE INTERRUPT FUNCTION
1584          //==============================================================================
1585          /**
1586          * Bunch of functions used on request from UART communication
1587          **/
1588          
1589          void cmd_get_measurements(){
1590   1         
1591   1          
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 27  

1592   1          uint8 CYDATA index;
1593   1         
1594   1          // Packet: header + measure(int16) + crc
1595   1          
1596   1          #if (NUM_OF_SENSORS == 4)
                      uint8 packet_data[10];
                  #endif
1599   1          #if  (NUM_OF_SENSORS == 3)
                      uint8 packet_data[8]; 
                  #endif
1602   1          #if (NUM_OF_SENSORS == 2)
1603   1              uint8 packet_data[6]; 
1604   1          #endif
1605   1      
1606   1          //Header package
1607   1          packet_data[0] = CMD_GET_MEASUREMENTS;   
1608   1          
1609   1          for (index = NUM_OF_SENSORS; index--;) 
1610   1              *((int16 *) &packet_data[(index << 1) + 1]) = (int16)(g_measOld.pos[index] >> g_mem.res[index]);
1611   1                  
1612   1          // Calculate Checksum and send message to UART 
1613   1              
1614   1          #if (NUM_OF_SENSORS == 4)
                      packet_data[9] = LCRChecksum (packet_data, 9);
                      commWrite(packet_data, 10, FALSE);
                  #endif
1618   1          #if  (NUM_OF_SENSORS == 3)
                      packet_data[7] = LCRChecksum (packet_data, 7);
                      commWrite(packet_data, 8, FALSE);
                  #endif
1622   1          
1623   1      }
1624          
1625          void cmd_get_inputs(){
1626   1      
1627   1          // Packet: header + motor_measure(int16) + crc
1628   1      
1629   1          uint8 packet_data[6]; 
1630   1          
1631   1          //Header package
1632   1      
1633   1          packet_data[0] = CMD_GET_INPUTS;
1634   1          
1635   1          *((int16 *) &packet_data[1]) = (int16) (g_refOld.pos[0]  >> g_mem.res[0]);
1636   1          *((int16 *) &packet_data[3]) = (int16) (g_refOld.pos[1]  >> g_mem.res[1]);
1637   1          
1638   1          // Calculate Checksum and send message to UART 
1639   1      
1640   1          packet_data[5] = LCRChecksum(packet_data, 5);
1641   1      
1642   1          commWrite(packet_data, 6, FALSE);
1643   1      
1644   1      }
1645          
1646          void cmd_get_currents(){
1647   1          
1648   1          // Packet: header + motor_measure(int16) + crc
1649   1          
1650   1          uint8 packet_data[6]; 
1651   1          
1652   1          //Header package
1653   1      
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 28  

1654   1          packet_data[0] = CMD_GET_CURRENTS;
1655   1      
1656   1          *((int16 *) &packet_data[1]) = (int16) g_measOld.curr[0];
1657   1          *((int16 *) &packet_data[3]) = (int16) g_measOld.curr[1];
1658   1      
1659   1          // Calculate Checksum and send message to UART 
1660   1      
1661   1          packet_data[5] = LCRChecksum (packet_data, 5);
1662   1      
1663   1          commWrite(packet_data, 6, FALSE);
1664   1      }
1665          
1666          void cmd_get_curr_and_meas(){
1667   1          
1668   1          uint8 CYDATA index;
1669   1         
1670   1          //Packet: header + curr_meas(int16) + pos_meas(int16) + CRC
1671   1          
1672   1          #if (NUM_OF_SENSORS == 4)
                      uint8 packet_data[14];
                  #endif
1675   1          #if  (NUM_OF_SENSORS == 3)
                      uint8 packet_data[12]; 
                  #endif
1678   1          #if (NUM_OF_SENSORS == 2)
1679   1              uint8 packet_data[6]; 
1680   1          #endif
1681   1      
1682   1          //Header package
1683   1          packet_data[0] = CMD_GET_CURR_AND_MEAS;
1684   1          
1685   1          // Currents
1686   1          *((int16 *) &packet_data[1]) = (int16) g_measOld.curr[0];
1687   1          *((int16 *) &packet_data[3]) = (int16) g_measOld.curr[1];
1688   1      
1689   1          // Positions
1690   1          for (index = NUM_OF_SENSORS; index--;) 
1691   1              *((int16 *) &packet_data[(index << 2) + 5]) = (int16) (g_measOld.pos[index] >> g_mem.res[index]);
1692   1              
1693   1          // Calculate Checksum and send message to UART 
1694   1              
1695   1          #if (NUM_OF_SENSORS == 4)
                      packet_data[13] = LCRChecksum (packet_data, 13);
                      commWrite(packet_data, 14, FALSE);
                  #endif
1699   1          #if  (NUM_OF_SENSORS == 3)
                      packet_data[11] = LCRChecksum (packet_data, 11);
                      commWrite(packet_data, 12, FALSE);
                  #endif
1703   1      }
1704          
1705          void cmd_set_inputs(){
1706   1          
1707   1          // Store position setted in right variables
1708   1          g_refNew.pos[0] = *((int16 *) &g_rx.buffer[1]);   // motor 1
1709   1          g_refNew.pos[0] = g_refNew.pos[0] << g_mem.res[0];
1710   1      
1711   1          g_refNew.pos[1] = *((int16 *) &g_rx.buffer[3]);   // motor 2
1712   1          g_refNew.pos[1] = g_refNew.pos[1] << g_mem.res[1];
1713   1      
1714   1          // Check Position Limit cmd
1715   1          if (c_mem.pos_lim_flag) {                      
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 29  

1716   2              
1717   2              if (g_refNew.pos[0] < c_mem.pos_lim_inf[0]) 
1718   2                  g_refNew.pos[0] = c_mem.pos_lim_inf[0];
1719   2              if (g_refNew.pos[1] < c_mem.pos_lim_inf[1]) 
1720   2                  g_refNew.pos[1] = c_mem.pos_lim_inf[1];
1721   2      
1722   2              if (g_refNew.pos[0] > c_mem.pos_lim_sup[0]) 
1723   2                  g_refNew.pos[0] = c_mem.pos_lim_sup[0];
1724   2              if (g_refNew.pos[1] > c_mem.pos_lim_sup[1]) 
1725   2                  g_refNew.pos[1] = c_mem.pos_lim_sup[1];
1726   2          }
1727   1      }
1728          
1729          void cmd_set_pos_stiff(){
1730   1          
1731   1          int32 CYDATA pos, stiff;
1732   1          
1733   1          // Load position e stiffness
1734   1      
1735   1          pos = *((int16 *) &g_rx.buffer[1]);      // equilibrium position
1736   1          stiff = *((int16 *) &g_rx.buffer[3]);    // stiffness
1737   1      
1738   1          // Convert position in ticks
1739   1          pos = pos << g_mem.res[0];
1740   1      
1741   1          // Check position limits
1742   1          if (pos > (c_mem.pos_lim_sup[0] - c_mem.max_stiffness))
1743   1              pos = c_mem.pos_lim_sup[0] - c_mem.max_stiffness;
1744   1      
1745   1          if (pos < (c_mem.pos_lim_inf[0] + c_mem.max_stiffness))
1746   1              pos = c_mem.pos_lim_inf[0] + c_mem.max_stiffness;
1747   1      
1748   1          // Stiffness is intended between -32768 and 32767
1749   1          // remap  stiff value between -MAX_STIFFNESS and MAX_STIFFNESS
1750   1              
1751   1          stiff = (int32)(((float) c_mem.max_stiffness / 32768.0) * stiff);
1752   1      
1753   1          // Store pos/stiff rule
1754   1          g_refNew.pos[0] = pos + stiff;
1755   1          g_refNew.pos[1] = pos - stiff;
1756   1      }
1757          
1758          void cmd_get_velocities(){
1759   1          
1760   1          uint8 CYDATA index;
1761   1          
1762   1          // Packet: header + measure(int16) + crc
1763   1      
1764   1          #if (NUM_OF_SENSORS == 4)
                      uint8 packet_data[10];
                  #endif
1767   1          #if (NUM_OF_SENSORS == 3)
                      uint8 packet_data[8];     
                  #endif
1770   1          #if (NUM_OF_SENSORS == 2)
1771   1              uint8 packet_data[6]; 
1772   1          #endif
1773   1          
1774   1          //Header package
1775   1        
1776   1          packet_data[0] = CMD_GET_VELOCITIES;   
1777   1         
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 30  

1778   1          for (index = NUM_OF_SENSORS; index--;)
1779   1              *((int16 *) &packet_data[(index << 2) + 1]) = (int16)(g_measOld.vel[index]);
1780   1      
1781   1          // Calculate Checksum and send message to UART 
1782   1      
1783   1          #if (NUM_OF_SENSORS == 4)
                      packet_data[9] = LCRChecksum (packet_data, 9);
                      commWrite(packet_data, 10, FALSE);
                  #endif
1787   1          #if  (NUM_OF_SENSORS == 3)
                      packet_data[7] = LCRChecksum (packet_data, 7);
                      commWrite(packet_data, 8, FALSE);
                  #endif
1791   1      }
1792          
1793          void cmd_activate(){
1794   1          
1795   1          // Store new value reads
1796   1          g_refNew.onoff = g_rx.buffer[1];
1797   1          
1798   1          // Check type of control mode enabled
1799   1          if (g_mem.control_mode == CONTROL_ANGLE || g_mem.control_mode == CURR_AND_POS_CONTROL
1800   1           /*|| g_mem.control_mode == DEFLECTION_CONTROL || g_mem.control_mode == DEFL_CURRENT_CONTROL*/) {
1801   2              g_refNew.pos[0] = g_meas.pos[0];
1802   2              g_refNew.pos[1] = g_meas.pos[1];
1803   2          }
1804   1          
1805   1          // Safety start position (eliminate "lost rotation" problem)    
1806   1          /*if((g_meas.pos[0] > 26000) || (g_meas.pos[0] < -26000) || 
1807   1             (g_meas.pos[1] > 26000) || (g_meas.pos[1] < -26000) ||
1808   1             (g_meas.pos[2] > 26000) || (g_meas.pos[2] < -26000))
1809   1              g_refNew.onoff = 0x00;*/
1810   1          
1811   1          // Activate/Disactivate motors
1812   1          MOTOR_ON_OFF_Write(g_refNew.onoff);
1813   1      
1814   1      }
1815          
1816          void cmd_set_watchdog(){
1817   1            
1818   1          if (g_rx.buffer[1] <= 0){
1819   2              // Deactivate Watchdog
1820   2              WATCHDOG_ENABLER_Write(1); 
1821   2              g_mem.watchdog_period = 0;   
1822   2          }
1823   1          else{
1824   2              // Activate Watchdog        
1825   2              if (g_rx.buffer[1] > MAX_WATCHDOG_TIMER)
1826   2                  g_rx.buffer[1] = MAX_WATCHDOG_TIMER;
1827   2                  
1828   2              // Period * Time_CLK = WDT
1829   2              // Period = WTD / Time_CLK =     (WTD    )  / ( ( 1 / Freq_CLK ) )
1830   2              // Set request watchdog period - (WTD * 2)  * (250 / 1024        )
1831   2              g_mem.watchdog_period = (uint8) (((uint32) g_rx.buffer[1] * 2 * 250 ) >> 10);   
1832   2              WATCHDOG_COUNTER_WritePeriod(g_mem.watchdog_period); 
1833   2              WATCHDOG_ENABLER_Write(0); 
1834   2          }
1835   1      }
1836          
1837          void cmd_get_activate(){
1838   1          
1839   1          uint8 packet_data[3];
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 31  

1840   1      
1841   1          // Header        
1842   1          packet_data[0] = CMD_GET_ACTIVATE;
1843   1          
1844   1          // Fill payload
1845   1          packet_data[1] = g_ref.onoff;
1846   1          
1847   1          // Calculate checksum
1848   1          packet_data[2] = LCRChecksum(packet_data, 2);
1849   1          
1850   1          // Send package to UART
1851   1          commWrite(packet_data, 3, FALSE);
1852   1      
1853   1      }
1854          
1855          void cmd_ping(){
1856   1      
1857   1          uint8 packet_data[2];
1858   1      
1859   1          // Header
1860   1          packet_data[0] = CMD_PING;
1861   1          
1862   1          // Load Payload
1863   1          packet_data[1] = CMD_PING;
1864   1      
1865   1          // Send Package to uart
1866   1          commWrite(packet_data, 2, FALSE);
1867   1      }
1868          
1869          void cmd_store_params(){
1870   1          
1871   1          uint8 CYDATA packet_lenght = 2;
1872   1          uint8 CYDATA packet_data[2];
1873   1          uint8 CYDATA old_id;
1874   1          
1875   1          // Check input mode enabled
1876   1          if( c_mem.input_mode == INPUT_MODE_EXTERNAL ){
1877   2          
1878   2              if (c_mem.m_mult[0] != g_mem.m_mult[0]){
1879   3                  // Old m_mult
1880   3                  g_refNew.pos[0] /= c_mem.m_mult[0];
1881   3                  // New m_mult
1882   3                  g_refNew.pos[0] *= g_mem.m_mult[0];
1883   3              }
1884   2              
1885   2              if (c_mem.m_mult[1] != g_mem.m_mult[1]){
1886   3                  // Old m_mult
1887   3                  g_refNew.pos[1] /= c_mem.m_mult[1];
1888   3                  // New m_mult
1889   3                  g_refNew.pos[1] *= g_mem.m_mult[1];
1890   3              }
1891   2              
1892   2              if (c_mem.m_off[0] != g_mem.m_off[0])
1893   2                  g_refNew.pos[0] += g_mem.m_off[0] - c_mem.m_off[0];
1894   2      
1895   2              if (c_mem.m_off[1] != g_mem.m_off[1])
1896   2                  g_refNew.pos[1] += g_mem.m_off[1] - c_mem.m_off[1];
1897   2                  
1898   2              // Check position Limits
1899   2              if (c_mem.pos_lim_flag) {                   // position limiting
1900   3                  if (g_refNew.pos[0] < c_mem.pos_lim_inf[0]) g_refNew.pos[0] = c_mem.pos_lim_inf[0];
1901   3                  if (g_refNew.pos[1] < c_mem.pos_lim_inf[1]) g_refNew.pos[1] = c_mem.pos_lim_inf[1];
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 32  

1902   3      
1903   3                  if (g_refNew.pos[0] > c_mem.pos_lim_sup[0]) g_refNew.pos[0] = c_mem.pos_lim_sup[0];
1904   3                  if (g_refNew.pos[1] > c_mem.pos_lim_sup[1]) g_refNew.pos[1] = c_mem.pos_lim_sup[1];
1905   3              }
1906   2          }
1907   1          
1908   1          // Store params 
1909   1          if (c_mem.id != g_mem.id) {     //If a new id is going to be set we will lose communication 
1910   2              old_id = c_mem.id;          //after the memstore(0) and the ACK won't be recognised
1911   2              if(memStore(0)) {
1912   3                  packet_data[0] = ACK_OK;
1913   3                  packet_data[1] = ACK_OK;
1914   3                  commWrite_old_id(packet_data, packet_lenght, old_id);
1915   3              }    
1916   2              else{
1917   3                  packet_data[0] = ACK_ERROR;
1918   3                  packet_data[1] = ACK_ERROR;
1919   3                  commWrite_old_id(packet_data, packet_lenght, old_id);
1920   3              }
1921   2          }    
1922   1          else {
1923   2              if ( memStore(0) ) {
1924   3                  sendAcknowledgment(ACK_OK);
1925   3              } else {
1926   3                  sendAcknowledgment(ACK_ERROR);
1927   3              }
1928   2          }
1929   1      }
1930          
1931          void cmd_set_baudrate(){
1932   1          
1933   1          // Set BaudRate
1934   1          c_mem.baud_rate = g_rx.buffer[1];
1935   1          
1936   1          switch(g_rx.buffer[1]){
1937   2              case 13:
1938   2                  CLOCK_UART_SetDividerValue(13);
1939   2                  break;
1940   2              default:
1941   2                  CLOCK_UART_SetDividerValue(3);
1942   2          }
1943   1      }
1944          
1945          /* [] END OF FILE */
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 33  

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION commProcess (BEGIN)
                                           ; SOURCE LINE # 67
                                           ; SOURCE LINE # 71
0000 900000      E     MOV     DPTR,#g_rx
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 8F00        R     MOV     rx_cmd,R7
                                           ; SOURCE LINE # 75
0007 7B01              MOV     R3,#01H
0009 7A00        E     MOV     R2,#HIGH g_rx
000B 7900        E     MOV     R1,#LOW g_rx
000D 900000      E     MOV     DPTR,#g_rx+080H
0010 E0                MOVX    A,@DPTR
0011 FE                MOV     R6,A
0012 A3                INC     DPTR
0013 E0                MOVX    A,@DPTR
0014 FF                MOV     R7,A
0015 EF                MOV     A,R7
0016 14                DEC     A
0017 FD                MOV     R5,A
0018 120000      E     LCALL   _LCRChecksum
001B 900000      E     MOV     DPTR,#g_rx+080H
001E E0                MOVX    A,@DPTR
001F FC                MOV     R4,A
0020 A3                INC     DPTR
0021 E0                MOVX    A,@DPTR
0022 FD                MOV     R5,A
0023 7400        E     MOV     A,#LOW g_rx+0FFFFH
0025 2D                ADD     A,R5
0026 F582              MOV     DPL,A
0028 7400        E     MOV     A,#HIGH g_rx+0FFFFH
002A 3C                ADDC    A,R4
002B F583              MOV     DPH,A
002D E0                MOVX    A,@DPTR
002E FE                MOV     R6,A
002F EF                MOV     A,R7
0030 B50603            CJNE    A,AR6,?C0002
0033 D3                SETB    C
0034 8001              SJMP    ?C0003
0036         ?C0002:
0036 C3                CLR     C
0037         ?C0003:
0037 4006              JC      ?C0001
                                           ; SOURCE LINE # 77
0039 900000      E     MOV     DPTR,#g_rx+084H
003C E4                CLR     A
003D F0                MOVX    @DPTR,A
003E 22                RET     
                                           ; SOURCE LINE # 79
003F         ?C0001:
                                           ; SOURCE LINE # 81
003F E500        R     MOV     A,rx_cmd
0041 120000      E     LCALL   ?C?CCASE
0044 0000        R     DW      ?C0020
0046 00                DB      00H
0047 0000        R     DW      ?C0018
0049 01                DB      01H
004A 0000        R     DW      ?C0021
004C 03                DB      03H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 34  

004D 0000        R     DW      ?C0022
004F 04                DB      04H
0050 0000        R     DW      ?C0025
0052 05                DB      05H
0053 0000        R     DW      ?C0017
0055 06                DB      06H
0056 0000        R     DW      ?C0031
0058 09                DB      09H
0059 0000        R     DW      ?C0028
005B 0A                DB      0AH
005C 0000        R     DW      ?C0019
005E 0C                DB      0CH
005F 0000        R     DW      ?C0013
0061 80                DB      080H
0062 0000        R     DW      ?C0015
0064 81                DB      081H
0065 0000        R     DW      ?C0010
0067 82                DB      082H
0068 0000        R     DW      ?C0007
006A 83                DB      083H
006B 0000        R     DW      ?C0006
006D 84                DB      084H
006E 0000        R     DW      ?C0008
0070 85                DB      085H
0071 0000        R     DW      ?C0009
0073 86                DB      086H
0074 0000        R     DW      ?C0011
0076 87                DB      087H
0077 0000        R     DW      ?C0012
0079 89                DB      089H
007A 0000        R     DW      ?C0014
007C 8F                DB      08FH
007D 0000        R     DW      ?C0016
007F 90                DB      090H
0080 0000              DW      00H
0082 0000        R     DW      ?C0004
                                           ; SOURCE LINE # 84
0084         ?C0006:
                                           ; SOURCE LINE # 85
0084 120000      R     LCALL   cmd_get_measurements
                                           ; SOURCE LINE # 86
0087 22                RET     
                                           ; SOURCE LINE # 90
0088         ?C0007:
                                           ; SOURCE LINE # 91
0088 120000      R     LCALL   cmd_get_inputs
                                           ; SOURCE LINE # 92
008B 22                RET     
                                           ; SOURCE LINE # 96
008C         ?C0008:
                                           ; SOURCE LINE # 97
008C 120000      R     LCALL   cmd_get_currents
                                           ; SOURCE LINE # 98
008F 22                RET     
                                           ; SOURCE LINE # 102
0090         ?C0009:
                                           ; SOURCE LINE # 103
0090 120000      R     LCALL   cmd_get_curr_and_meas
                                           ; SOURCE LINE # 104
0093 22                RET     
                                           ; SOURCE LINE # 108
0094         ?C0010:
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 35  

                                           ; SOURCE LINE # 109
0094 120000      R     LCALL   cmd_set_inputs
                                           ; SOURCE LINE # 110
0097 22                RET     
                                           ; SOURCE LINE # 114
0098         ?C0011:
                                           ; SOURCE LINE # 115
0098 120000      R     LCALL   cmd_set_pos_stiff
                                           ; SOURCE LINE # 116
009B 22                RET     
                                           ; SOURCE LINE # 120
009C         ?C0012:
                                           ; SOURCE LINE # 121
009C 120000      R     LCALL   cmd_get_velocities
                                           ; SOURCE LINE # 122
009F 22                RET     
                                           ; SOURCE LINE # 125
00A0         ?C0013:
                                           ; SOURCE LINE # 126
00A0 120000      R     LCALL   cmd_activate
                                           ; SOURCE LINE # 127
00A3 22                RET     
                                           ; SOURCE LINE # 131
00A4         ?C0014:
                                           ; SOURCE LINE # 132
00A4 120000      R     LCALL   cmd_set_watchdog
                                           ; SOURCE LINE # 133
00A7 22                RET     
                                           ; SOURCE LINE # 137
00A8         ?C0015:
                                           ; SOURCE LINE # 138
00A8 120000      R     LCALL   cmd_get_activate
                                           ; SOURCE LINE # 139
00AB 22                RET     
                                           ; SOURCE LINE # 143
00AC         ?C0016:
                                           ; SOURCE LINE # 144
00AC 120000      R     LCALL   cmd_set_baudrate
                                           ; SOURCE LINE # 145
00AF 22                RET     
                                           ; SOURCE LINE # 149
00B0         ?C0017:
                                           ; SOURCE LINE # 150
00B0 C200        E     CLR     cuff_flag_force
                                           ; SOURCE LINE # 151
00B2 C200        E     CLR     cuff_flag_proprio
                                           ; SOURCE LINE # 152
00B4 900000      E     MOV     DPTR,#g_rx+01H
00B7 E0                MOVX    A,@DPTR
00B8 FE                MOV     R6,A
00B9 A3                INC     DPTR
00BA E0                MOVX    A,@DPTR
00BB FF                MOV     R7,A
00BC 120000      R     LCALL   _infoGet
                                           ; SOURCE LINE # 153
00BF 22                RET     
                                           ; SOURCE LINE # 157
00C0         ?C0018:
                                           ; SOURCE LINE # 158
00C0 120000      R     LCALL   setZeros
                                           ; SOURCE LINE # 159
00C3 22                RET     
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 36  

                                           ; SOURCE LINE # 163
00C4         ?C0019:
                                           ; SOURCE LINE # 164
00C4 900000      E     MOV     DPTR,#g_rx+01H
00C7 E0                MOVX    A,@DPTR
00C8 FE                MOV     R6,A
00C9 A3                INC     DPTR
00CA E0                MOVX    A,@DPTR
00CB FF                MOV     R7,A
00CC 120000      R     LCALL   _get_param_list
                                           ; SOURCE LINE # 165
00CF 22                RET     
                                           ; SOURCE LINE # 169
00D0         ?C0020:
                                           ; SOURCE LINE # 170
00D0 120000      R     LCALL   cmd_ping
                                           ; SOURCE LINE # 171
00D3 22                RET     
                                           ; SOURCE LINE # 175
00D4         ?C0021:
                                           ; SOURCE LINE # 176
00D4 120000      R     LCALL   cmd_store_params
                                           ; SOURCE LINE # 177
00D7 22                RET     
                                           ; SOURCE LINE # 181
00D8         ?C0022:
                                           ; SOURCE LINE # 182
00D8 7F08              MOV     R7,#08H
00DA 7E00              MOV     R6,#00H
00DC 120000      R     LCALL   _memStore
00DF EF                MOV     A,R7
00E0 6006              JZ      ?C0023
                                           ; SOURCE LINE # 183
00E2 7F01              MOV     R7,#01H
00E4 120000      R     LCALL   _sendAcknowledgment
                                           ; SOURCE LINE # 184
00E7 22                RET     
00E8         ?C0023:
                                           ; SOURCE LINE # 185
00E8 7F00              MOV     R7,#00H
00EA 120000      R     LCALL   _sendAcknowledgment
                                           ; SOURCE LINE # 186
                                           ; SOURCE LINE # 187
00ED 22                RET     
                                           ; SOURCE LINE # 191
00EE         ?C0025:
                                           ; SOURCE LINE # 192
00EE 120000      R     LCALL   memRestore
00F1 EF                MOV     A,R7
00F2 6006              JZ      ?C0026
                                           ; SOURCE LINE # 193
00F4 7F01              MOV     R7,#01H
00F6 120000      R     LCALL   _sendAcknowledgment
                                           ; SOURCE LINE # 194
00F9 22                RET     
00FA         ?C0026:
                                           ; SOURCE LINE # 195
00FA 7F00              MOV     R7,#00H
00FC 120000      R     LCALL   _sendAcknowledgment
                                           ; SOURCE LINE # 196
                                           ; SOURCE LINE # 197
00FF 22                RET     
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 37  

                                           ; SOURCE LINE # 201
0100         ?C0028:
                                           ; SOURCE LINE # 202
0100 120000      R     LCALL   memInit
0103 EF                MOV     A,R7
0104 6006              JZ      ?C0029
                                           ; SOURCE LINE # 203
0106 7F01              MOV     R7,#01H
0108 120000      R     LCALL   _sendAcknowledgment
                                           ; SOURCE LINE # 204
010B 22                RET     
010C         ?C0029:
                                           ; SOURCE LINE # 205
010C 7F00              MOV     R7,#00H
010E 120000      R     LCALL   _sendAcknowledgment
                                           ; SOURCE LINE # 206
                                           ; SOURCE LINE # 207
0111 22                RET     
                                           ; SOURCE LINE # 210
0112         ?C0031:
                                           ; SOURCE LINE # 211
0112 7F01              MOV     R7,#01H
0114 120000      R     LCALL   _sendAcknowledgment
                                           ; SOURCE LINE # 212
0117 7FE8              MOV     R7,#0E8H
0119 7E03              MOV     R6,#03H
011B 7D00              MOV     R5,#00H
011D 7C00              MOV     R4,#00H
011F 120000      E     LCALL   _?CyDelay
                                           ; SOURCE LINE # 213
0122 7F00              MOV     R7,#00H
0124 120000      E     LCALL   _FTDI_ENABLE_REG_Write
                                           ; SOURCE LINE # 214
0127 7FE8              MOV     R7,#0E8H
0129 7E03              MOV     R6,#03H
012B 7D00              MOV     R5,#00H
012D 7C00              MOV     R4,#00H
012F 120000      E     LCALL   _?CyDelay
                                           ; SOURCE LINE # 215
0132 120000      E     LCALL   Bootloadable_Load
                                           ; SOURCE LINE # 216
                                           ; SOURCE LINE # 225
                                           ; SOURCE LINE # 226
                                           ; SOURCE LINE # 228
                                           ; SOURCE LINE # 229
0135         ?C0004:
0135 22                RET     
             ; FUNCTION commProcess (END)

             ; FUNCTION drive_cuff (BEGIN)
                                           ; SOURCE LINE # 238
                                           ; SOURCE LINE # 245
0000 900000      R     MOV     DPTR,#packet_lenght
0003 7402              MOV     A,#02H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 246
0006 900000      R     MOV     DPTR,#packet_data
0009 748C              MOV     A,#08CH
000B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 247
000C 900000      R     MOV     DPTR,#packet_data+01H
000F 748C              MOV     A,#08CH
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 38  

0011 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 248
0012 7B01              MOV     R3,#01H
0014 7A00        R     MOV     R2,#HIGH packet_data
0016 7900        R     MOV     R1,#LOW packet_data
0018 900000      R     MOV     DPTR,#packet_lenght
001B E0                MOVX    A,@DPTR
001C FF                MOV     R7,A
001D EF                MOV     A,R7
001E FD                MOV     R5,A
001F 7C00              MOV     R4,#00H
0021 900000      R     MOV     DPTR,#?_commWrite?BYTE+05H
0024 7401              MOV     A,#01H
0026 F0                MOVX    @DPTR,A
0027 120000      R     LCALL   _commWrite
                                           ; SOURCE LINE # 250
002A 120000      E     LCALL   MY_TIMER_ReadCounter
002D 900000      R     MOV     DPTR,#t_start
0030 120000      E     LCALL   ?C?LSTXDATA
0033         ?C0033:
                                           ; SOURCE LINE # 251
0033 900000      E     MOV     DPTR,#g_rx
0036 E0                MOVX    A,@DPTR
0037 FF                MOV     R7,A
0038 EF                MOV     A,R7
0039 648E              XRL     A,#08EH
003B 6030              JZ      ?C0034
                                           ; SOURCE LINE # 252
003D 300005            JNB     interrupt_flag,?C0035
                                           ; SOURCE LINE # 253
0040 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 254
0042 120000      E     LCALL   interrupt_manager
                                           ; SOURCE LINE # 255
0045         ?C0035:
                                           ; SOURCE LINE # 256
0045 120000      E     LCALL   MY_TIMER_ReadCounter
0048 900000      R     MOV     DPTR,#t_end
004B 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 257
004E 900000      R     MOV     DPTR,#t_end
0051 120000      E     LCALL   ?C?LLDXDATA0
0054 900000      R     MOV     DPTR,#t_start
0057 120000      E     LCALL   ?C?LLDXDATA
005A 120000      E     LCALL   ?C?LSUB
005D 7B20              MOV     R3,#020H
005F 7AAA              MOV     R2,#0AAH
0061 7944              MOV     R1,#044H
0063 7800              MOV     R0,#00H
0065 C3                CLR     C
0066 120000      E     LCALL   ?C?ULCMP
0069 50C8              JNC     ?C0033
                                           ; SOURCE LINE # 258
006B C200        E     CLR     cuff_flag_force
                                           ; SOURCE LINE # 259
                                           ; SOURCE LINE # 260
                                           ; SOURCE LINE # 261
006D         ?C0034:
                                           ; SOURCE LINE # 263
006D 200003      E     JB      cuff_flag_force,$ + 6H
0070 020000      R     LJMP    ?C0037
                                           ; SOURCE LINE # 264
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 39  

0073 900000      E     MOV     DPTR,#g_rx+01H
0076 E0                MOVX    A,@DPTR
0077 FE                MOV     R6,A
0078 A3                INC     DPTR
0079 E0                MOVX    A,@DPTR
007A FF                MOV     R7,A
007B 900000      R     MOV     DPTR,#curr_diff
007E EE                MOV     A,R6
007F F0                MOVX    @DPTR,A
0080 A3                INC     DPTR
0081 EF                MOV     A,R7
0082 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 266
0083 900000      E     MOV     DPTR,#g_mem+06BH
0086 E0                MOVX    A,@DPTR
0087 FE                MOV     R6,A
0088 A3                INC     DPTR
0089 E0                MOVX    A,@DPTR
008A FF                MOV     R7,A
008B 900000      R     MOV     DPTR,#curr_diff
008E E0                MOVX    A,@DPTR
008F FC                MOV     R4,A
0090 A3                INC     DPTR
0091 E0                MOVX    A,@DPTR
0092 FD                MOV     R5,A
0093 D3                SETB    C
0094 ED                MOV     A,R5
0095 9F                SUBB    A,R7
0096 EE                MOV     A,R6
0097 6480              XRL     A,#080H
0099 F8                MOV     R0,A
009A EC                MOV     A,R4
009B 6480              XRL     A,#080H
009D 98                SUBB    A,R0
009E 4010              JC      ?C0038
                                           ; SOURCE LINE # 267
00A0 900000      E     MOV     DPTR,#g_mem+06BH
00A3 E0                MOVX    A,@DPTR
00A4 FE                MOV     R6,A
00A5 A3                INC     DPTR
00A6 E0                MOVX    A,@DPTR
00A7 FF                MOV     R7,A
00A8 900000      R     MOV     DPTR,#curr_diff
00AB EE                MOV     A,R6
00AC F0                MOVX    @DPTR,A
00AD A3                INC     DPTR
00AE EF                MOV     A,R7
00AF F0                MOVX    @DPTR,A
00B0         ?C0038:
                                           ; SOURCE LINE # 269
00B0 900000      E     MOV     DPTR,#g_mem+06DH
00B3 E0                MOVX    A,@DPTR
00B4 FE                MOV     R6,A
00B5 A3                INC     DPTR
00B6 E0                MOVX    A,@DPTR
00B7 FF                MOV     R7,A
00B8 900000      R     MOV     DPTR,#curr_diff
00BB E0                MOVX    A,@DPTR
00BC FC                MOV     R4,A
00BD A3                INC     DPTR
00BE E0                MOVX    A,@DPTR
00BF FD                MOV     R5,A
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 40  

00C0 C3                CLR     C
00C1 ED                MOV     A,R5
00C2 9F                SUBB    A,R7
00C3 EE                MOV     A,R6
00C4 6480              XRL     A,#080H
00C6 F8                MOV     R0,A
00C7 EC                MOV     A,R4
00C8 6480              XRL     A,#080H
00CA 98                SUBB    A,R0
00CB 500A              JNC     ?C0039
                                           ; SOURCE LINE # 270
00CD 900000      R     MOV     DPTR,#curr_diff
00D0 E4                CLR     A
00D1 F0                MOVX    @DPTR,A
00D2 A3                INC     DPTR
00D3 E4                CLR     A
00D4 F0                MOVX    @DPTR,A
00D5 801F              SJMP    ?C0040
00D7         ?C0039:
                                           ; SOURCE LINE # 272
00D7 900000      R     MOV     DPTR,#curr_diff
00DA E0                MOVX    A,@DPTR
00DB FE                MOV     R6,A
00DC A3                INC     DPTR
00DD E0                MOVX    A,@DPTR
00DE FF                MOV     R7,A
00DF 900000      E     MOV     DPTR,#g_mem+06DH
00E2 E0                MOVX    A,@DPTR
00E3 FC                MOV     R4,A
00E4 A3                INC     DPTR
00E5 E0                MOVX    A,@DPTR
00E6 FD                MOV     R5,A
00E7 C3                CLR     C
00E8 EF                MOV     A,R7
00E9 9D                SUBB    A,R5
00EA FF                MOV     R7,A
00EB EE                MOV     A,R6
00EC 9C                SUBB    A,R4
00ED FE                MOV     R6,A
00EE 900000      R     MOV     DPTR,#curr_diff
00F1 EE                MOV     A,R6
00F2 F0                MOVX    @DPTR,A
00F3 A3                INC     DPTR
00F4 EF                MOV     A,R7
00F5 F0                MOVX    @DPTR,A
00F6         ?C0040:
                                           ; SOURCE LINE # 274
00F6 900000      R     MOV     DPTR,#curr_diff
00F9 E0                MOVX    A,@DPTR
00FA FC                MOV     R4,A
00FB A3                INC     DPTR
00FC E0                MOVX    A,@DPTR
00FD FD                MOV     R5,A
00FE EC                MOV     A,R4
00FF 120000      E     LCALL   ?C?FCASTI
0102 900000      E     MOV     DPTR,#g_mem+067H
0105 120000      E     LCALL   ?C?LLDXDATA0
0108 120000      E     LCALL   ?C?FPMUL
010B 7B00              MOV     R3,#00H
010D 7AFF              MOV     R2,#0FFH
010F 797F              MOV     R1,#07FH
0111 7847              MOV     R0,#047H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 41  

0113 120000      E     LCALL   ?C?FPMUL
0116 7B00              MOV     R3,#00H
0118 7A00              MOV     R2,#00H
011A 79B4              MOV     R1,#0B4H
011C 7844              MOV     R0,#044H
011E 120000      E     LCALL   ?C?FPDIV
0121 120000      E     LCALL   ?C?CASTF
0124 900000      R     MOV     DPTR,#aux_val
0127 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 275
012A 900000      R     MOV     DPTR,#aux_val
012D 120000      E     LCALL   ?C?LLDXDATA
0130 900000      E     MOV     DPTR,#g_mem+037H
0133 E0                MOVX    A,@DPTR
0134 F9                MOV     R1,A
0135 A801              MOV     R0,AR1
0137 120000      E     LCALL   ?C?LSHL
013A A804              MOV     R0,AR4
013C A905              MOV     R1,AR5
013E AA06              MOV     R2,AR6
0140 AB07              MOV     R3,AR7
0142 900000      E     MOV     DPTR,#pret_offset_pos
0145 120000      E     LCALL   ?C?LLDXDATA
0148 120000      E     LCALL   ?C?LSUB
014B 900000      E     MOV     DPTR,#g_refNew
014E 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 276
0151 900000      R     MOV     DPTR,#aux_val
0154 120000      E     LCALL   ?C?LLDXDATA
0157 900000      E     MOV     DPTR,#g_mem+038H
015A E0                MOVX    A,@DPTR
015B F9                MOV     R1,A
015C A801              MOV     R0,AR1
015E 120000      E     LCALL   ?C?LSHL
0161 900000      E     MOV     DPTR,#pret_offset_pos+04H
0164 120000      E     LCALL   ?C?LLDXDATA0
0167 120000      E     LCALL   ?C?LADD
016A 900000      E     MOV     DPTR,#g_refNew+04H
016D 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 281
0170 900000      E     MOV     DPTR,#c_mem+049H
0173 E0                MOVX    A,@DPTR
0174 FF                MOV     R7,A
0175 EF                MOV     A,R7
0176 6078              JZ      ?C0037
                                           ; SOURCE LINE # 282
0178 900000      E     MOV     DPTR,#c_mem+04AH
017B 120000      E     LCALL   ?C?LLDXDATA
017E 900000      E     MOV     DPTR,#g_refNew
0181 120000      E     LCALL   ?C?LLDXDATA0
0184 C3                CLR     C
0185 120000      E     LCALL   ?C?SLCMP
0188 500C              JNC     ?C0042
018A 900000      E     MOV     DPTR,#c_mem+04AH
018D 120000      E     LCALL   ?C?LLDXDATA
0190 900000      E     MOV     DPTR,#g_refNew
0193 120000      E     LCALL   ?C?LSTXDATA
0196         ?C0042:
                                           ; SOURCE LINE # 283
0196 900000      E     MOV     DPTR,#c_mem+04EH
0199 120000      E     LCALL   ?C?LLDXDATA
019C 900000      E     MOV     DPTR,#g_refNew+04H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 42  

019F 120000      E     LCALL   ?C?LLDXDATA0
01A2 C3                CLR     C
01A3 120000      E     LCALL   ?C?SLCMP
01A6 500C              JNC     ?C0043
01A8 900000      E     MOV     DPTR,#c_mem+04EH
01AB 120000      E     LCALL   ?C?LLDXDATA
01AE 900000      E     MOV     DPTR,#g_refNew+04H
01B1 120000      E     LCALL   ?C?LSTXDATA
01B4         ?C0043:
                                           ; SOURCE LINE # 285
01B4 900000      E     MOV     DPTR,#c_mem+052H
01B7 120000      E     LCALL   ?C?LLDXDATA
01BA 900000      E     MOV     DPTR,#g_refNew
01BD 120000      E     LCALL   ?C?LLDXDATA0
01C0 D3                SETB    C
01C1 120000      E     LCALL   ?C?SLCMP
01C4 400C              JC      ?C0044
01C6 900000      E     MOV     DPTR,#c_mem+052H
01C9 120000      E     LCALL   ?C?LLDXDATA
01CC 900000      E     MOV     DPTR,#g_refNew
01CF 120000      E     LCALL   ?C?LSTXDATA
01D2         ?C0044:
                                           ; SOURCE LINE # 286
01D2 900000      E     MOV     DPTR,#c_mem+056H
01D5 120000      E     LCALL   ?C?LLDXDATA
01D8 900000      E     MOV     DPTR,#g_refNew+04H
01DB 120000      E     LCALL   ?C?LLDXDATA0
01DE D3                SETB    C
01DF 120000      E     LCALL   ?C?SLCMP
01E2 400C              JC      ?C0037
01E4 900000      E     MOV     DPTR,#c_mem+056H
01E7 120000      E     LCALL   ?C?LLDXDATA
01EA 900000      E     MOV     DPTR,#g_refNew+04H
01ED 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 287
                                           ; SOURCE LINE # 288
01F0         ?C0037:
                                           ; SOURCE LINE # 289
01F0 200002            JB      pret_done,?C0047
                                           ; SOURCE LINE # 290
01F3 D200        E     SETB    pretensioning_flag
                                           ; SOURCE LINE # 291
01F5         ?C0047:
01F5 22                RET     
             ; FUNCTION drive_cuff (END)

             ; FUNCTION slide_cuff (BEGIN)
                                           ; SOURCE LINE # 293
                                           ; SOURCE LINE # 300
0000 900000      R     MOV     DPTR,#packet_lenght
0003 7402              MOV     A,#02H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 301
0006 900000      R     MOV     DPTR,#packet_data
0009 7484              MOV     A,#084H
000B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 302
000C 900000      R     MOV     DPTR,#packet_data+01H
000F 7484              MOV     A,#084H
0011 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 303
0012 7B01              MOV     R3,#01H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 43  

0014 7A00        R     MOV     R2,#HIGH packet_data
0016 7900        R     MOV     R1,#LOW packet_data
0018 900000      R     MOV     DPTR,#packet_lenght
001B E0                MOVX    A,@DPTR
001C FF                MOV     R7,A
001D EF                MOV     A,R7
001E FD                MOV     R5,A
001F 7C00              MOV     R4,#00H
0021 900000      R     MOV     DPTR,#?_commWrite?BYTE+05H
0024 7401              MOV     A,#01H
0026 F0                MOVX    @DPTR,A
0027 120000      R     LCALL   _commWrite
                                           ; SOURCE LINE # 305
002A 120000      E     LCALL   MY_TIMER_ReadCounter
002D 900000      R     MOV     DPTR,#t_start
0030 120000      E     LCALL   ?C?LSTXDATA
0033         ?C0048:
                                           ; SOURCE LINE # 306
0033 900000      E     MOV     DPTR,#g_rx
0036 E0                MOVX    A,@DPTR
0037 FF                MOV     R7,A
0038 EF                MOV     A,R7
0039 6484              XRL     A,#084H
003B 6030              JZ      ?C0049
                                           ; SOURCE LINE # 307
003D 300005            JNB     interrupt_flag,?C0050
                                           ; SOURCE LINE # 308
0040 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 309
0042 120000      E     LCALL   interrupt_manager
                                           ; SOURCE LINE # 310
0045         ?C0050:
                                           ; SOURCE LINE # 311
0045 120000      E     LCALL   MY_TIMER_ReadCounter
0048 900000      R     MOV     DPTR,#t_end
004B 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 312
004E 900000      R     MOV     DPTR,#t_end
0051 120000      E     LCALL   ?C?LLDXDATA0
0054 900000      R     MOV     DPTR,#t_start
0057 120000      E     LCALL   ?C?LLDXDATA
005A 120000      E     LCALL   ?C?LSUB
005D 7B20              MOV     R3,#020H
005F 7AAA              MOV     R2,#0AAH
0061 7944              MOV     R1,#044H
0063 7800              MOV     R0,#00H
0065 C3                CLR     C
0066 120000      E     LCALL   ?C?ULCMP
0069 50C8              JNC     ?C0048
                                           ; SOURCE LINE # 313
006B C200        E     CLR     cuff_flag_proprio
                                           ; SOURCE LINE # 314
                                           ; SOURCE LINE # 315
                                           ; SOURCE LINE # 316
006D         ?C0049:
                                           ; SOURCE LINE # 318
006D 200003      E     JB      cuff_flag_proprio,$ + 6H
0070 020000      R     LJMP    ?C0061
                                           ; SOURCE LINE # 319
0073 900000      E     MOV     DPTR,#g_rx+01H
0076 E0                MOVX    A,@DPTR
0077 FE                MOV     R6,A
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 44  

0078 A3                INC     DPTR
0079 E0                MOVX    A,@DPTR
007A FF                MOV     R7,A
007B 900000      R     MOV     DPTR,#SH_pos
007E EE                MOV     A,R6
007F F0                MOVX    @DPTR,A
0080 A3                INC     DPTR
0081 EF                MOV     A,R7
0082 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 321
0083 900000      R     MOV     DPTR,#SH_pos
0086 E0                MOVX    A,@DPTR
0087 FE                MOV     R6,A
0088 A3                INC     DPTR
0089 E0                MOVX    A,@DPTR
008A FF                MOV     R7,A
008B EE                MOV     A,R6
008C 33                RLC     A
008D 95E0              SUBB    A,ACC
008F FD                MOV     R5,A
0090 FC                MOV     R4,A
0091 900000      E     MOV     DPTR,#g_mem+07CH
0094 120000      E     LCALL   ?C?LLDXDATA0
0097 120000      E     LCALL   ?C?LSUB
009A 900000      R     MOV     DPTR,#aux_val
009D 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 322
00A0 900000      E     MOV     DPTR,#g_mem+070H
00A3 120000      E     LCALL   ?C?LLDXDATA
00A6 900000      R     MOV     DPTR,#aux_val
00A9 120000      E     LCALL   ?C?LLDXDATA0
00AC 120000      E     LCALL   ?C?LMUL
00AF C004              PUSH    AR4
00B1 C005              PUSH    AR5
00B3 C006              PUSH    AR6
00B5 C007              PUSH    AR7
00B7 900000      E     MOV     DPTR,#g_mem+07CH
00BA 120000      E     LCALL   ?C?LLDXDATA0
00BD 900000      E     MOV     DPTR,#g_mem+074H
00C0 120000      E     LCALL   ?C?LLDXDATA
00C3 120000      E     LCALL   ?C?LSUB
00C6 A804              MOV     R0,AR4
00C8 A905              MOV     R1,AR5
00CA AA06              MOV     R2,AR6
00CC AB07              MOV     R3,AR7
00CE D007              POP     AR7
00D0 D006              POP     AR6
00D2 D005              POP     AR5
00D4 D004              POP     AR4
00D6 120000      E     LCALL   ?C?SLDIV
00D9 900000      R     MOV     DPTR,#aux_val
00DC 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 324
00DF 900000      E     MOV     DPTR,#c_mem+080H
00E2 E0                MOVX    A,@DPTR
00E3 FF                MOV     R7,A
00E4 EF                MOV     A,R7
00E5 6040              JZ      ?C0053
                                           ; SOURCE LINE # 326
00E7 900000      R     MOV     DPTR,#aux_val
00EA 120000      E     LCALL   ?C?LLDXDATA
00ED 900000      E     MOV     DPTR,#g_mem+037H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 45  

00F0 E0                MOVX    A,@DPTR
00F1 F9                MOV     R1,A
00F2 A801              MOV     R0,AR1
00F4 120000      E     LCALL   ?C?LSHL
00F7 900000      E     MOV     DPTR,#pret_offset_pos
00FA 120000      E     LCALL   ?C?LLDXDATA0
00FD 120000      E     LCALL   ?C?LADD
0100 900000      E     MOV     DPTR,#g_refNew
0103 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 327
0106 900000      R     MOV     DPTR,#aux_val
0109 120000      E     LCALL   ?C?LLDXDATA
010C 900000      E     MOV     DPTR,#g_mem+038H
010F E0                MOVX    A,@DPTR
0110 F9                MOV     R1,A
0111 A801              MOV     R0,AR1
0113 120000      E     LCALL   ?C?LSHL
0116 900000      E     MOV     DPTR,#pret_offset_pos+04H
0119 120000      E     LCALL   ?C?LLDXDATA0
011C 120000      E     LCALL   ?C?LADD
011F 900000      E     MOV     DPTR,#g_refNew+04H
0122 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 328
0125 804E              SJMP    ?C0054
0127         ?C0053:
                                           ; SOURCE LINE # 329
                                           ; SOURCE LINE # 331
0127 900000      R     MOV     DPTR,#aux_val
012A 120000      E     LCALL   ?C?LLDXDATA
012D 900000      E     MOV     DPTR,#g_mem+037H
0130 E0                MOVX    A,@DPTR
0131 F9                MOV     R1,A
0132 A801              MOV     R0,AR1
0134 120000      E     LCALL   ?C?LSHL
0137 A804              MOV     R0,AR4
0139 A905              MOV     R1,AR5
013B AA06              MOV     R2,AR6
013D AB07              MOV     R3,AR7
013F 900000      E     MOV     DPTR,#pret_offset_pos
0142 120000      E     LCALL   ?C?LLDXDATA
0145 120000      E     LCALL   ?C?LSUB
0148 900000      E     MOV     DPTR,#g_refNew
014B 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 332
014E 900000      R     MOV     DPTR,#aux_val
0151 120000      E     LCALL   ?C?LLDXDATA
0154 900000      E     MOV     DPTR,#g_mem+038H
0157 E0                MOVX    A,@DPTR
0158 F9                MOV     R1,A
0159 A801              MOV     R0,AR1
015B 120000      E     LCALL   ?C?LSHL
015E A804              MOV     R0,AR4
0160 A905              MOV     R1,AR5
0162 AA06              MOV     R2,AR6
0164 AB07              MOV     R3,AR7
0166 900000      E     MOV     DPTR,#pret_offset_pos+04H
0169 120000      E     LCALL   ?C?LLDXDATA
016C 120000      E     LCALL   ?C?LSUB
016F 900000      E     MOV     DPTR,#g_refNew+04H
0172 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 333
0175         ?C0054:
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 46  

                                           ; SOURCE LINE # 338
0175 900000      E     MOV     DPTR,#c_mem+049H
0178 E0                MOVX    A,@DPTR
0179 FF                MOV     R7,A
017A EF                MOV     A,R7
017B 6078              JZ      ?C0055
                                           ; SOURCE LINE # 339
017D 900000      E     MOV     DPTR,#c_mem+04AH
0180 120000      E     LCALL   ?C?LLDXDATA
0183 900000      E     MOV     DPTR,#g_refNew
0186 120000      E     LCALL   ?C?LLDXDATA0
0189 C3                CLR     C
018A 120000      E     LCALL   ?C?SLCMP
018D 500C              JNC     ?C0056
018F 900000      E     MOV     DPTR,#c_mem+04AH
0192 120000      E     LCALL   ?C?LLDXDATA
0195 900000      E     MOV     DPTR,#g_refNew
0198 120000      E     LCALL   ?C?LSTXDATA
019B         ?C0056:
                                           ; SOURCE LINE # 340
019B 900000      E     MOV     DPTR,#c_mem+04EH
019E 120000      E     LCALL   ?C?LLDXDATA
01A1 900000      E     MOV     DPTR,#g_refNew+04H
01A4 120000      E     LCALL   ?C?LLDXDATA0
01A7 C3                CLR     C
01A8 120000      E     LCALL   ?C?SLCMP
01AB 500C              JNC     ?C0057
01AD 900000      E     MOV     DPTR,#c_mem+04EH
01B0 120000      E     LCALL   ?C?LLDXDATA
01B3 900000      E     MOV     DPTR,#g_refNew+04H
01B6 120000      E     LCALL   ?C?LSTXDATA
01B9         ?C0057:
                                           ; SOURCE LINE # 342
01B9 900000      E     MOV     DPTR,#c_mem+052H
01BC 120000      E     LCALL   ?C?LLDXDATA
01BF 900000      E     MOV     DPTR,#g_refNew
01C2 120000      E     LCALL   ?C?LLDXDATA0
01C5 D3                SETB    C
01C6 120000      E     LCALL   ?C?SLCMP
01C9 400C              JC      ?C0058
01CB 900000      E     MOV     DPTR,#c_mem+052H
01CE 120000      E     LCALL   ?C?LLDXDATA
01D1 900000      E     MOV     DPTR,#g_refNew
01D4 120000      E     LCALL   ?C?LSTXDATA
01D7         ?C0058:
                                           ; SOURCE LINE # 343
01D7 900000      E     MOV     DPTR,#c_mem+056H
01DA 120000      E     LCALL   ?C?LLDXDATA
01DD 900000      E     MOV     DPTR,#g_refNew+04H
01E0 120000      E     LCALL   ?C?LLDXDATA0
01E3 D3                SETB    C
01E4 120000      E     LCALL   ?C?SLCMP
01E7 400C              JC      ?C0055
01E9 900000      E     MOV     DPTR,#c_mem+056H
01EC 120000      E     LCALL   ?C?LLDXDATA
01EF 900000      E     MOV     DPTR,#g_refNew+04H
01F2 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 344
01F5         ?C0055:
                                           ; SOURCE LINE # 345
01F5 900000      E     MOV     DPTR,#g_mem+07CH
01F8 120000      E     LCALL   ?C?LLDXDATA
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 47  

01FB EF                MOV     A,R7
01FC 24CE              ADD     A,#0CEH
01FE FB                MOV     R3,A
01FF EE                MOV     A,R6
0200 34FF              ADDC    A,#0FFH
0202 FA                MOV     R2,A
0203 ED                MOV     A,R5
0204 34FF              ADDC    A,#0FFH
0206 F9                MOV     R1,A
0207 EC                MOV     A,R4
0208 34FF              ADDC    A,#0FFH
020A F8                MOV     R0,A
020B 900000      R     MOV     DPTR,#SH_pos
020E E0                MOVX    A,@DPTR
020F FE                MOV     R6,A
0210 A3                INC     DPTR
0211 E0                MOVX    A,@DPTR
0212 FF                MOV     R7,A
0213 EE                MOV     A,R6
0214 33                RLC     A
0215 95E0              SUBB    A,ACC
0217 FD                MOV     R5,A
0218 FC                MOV     R4,A
0219 D3                SETB    C
021A 120000      E     LCALL   ?C?SLCMP
021D 502F              JNC     ?C0061
021F 900000      E     MOV     DPTR,#g_mem+07CH
0222 120000      E     LCALL   ?C?LLDXDATA
0225 EF                MOV     A,R7
0226 2432              ADD     A,#032H
0228 FB                MOV     R3,A
0229 EE                MOV     A,R6
022A 3400              ADDC    A,#00H
022C FA                MOV     R2,A
022D ED                MOV     A,R5
022E 3400              ADDC    A,#00H
0230 F9                MOV     R1,A
0231 EC                MOV     A,R4
0232 3400              ADDC    A,#00H
0234 F8                MOV     R0,A
0235 900000      R     MOV     DPTR,#SH_pos
0238 E0                MOVX    A,@DPTR
0239 FE                MOV     R6,A
023A A3                INC     DPTR
023B E0                MOVX    A,@DPTR
023C FF                MOV     R7,A
023D EE                MOV     A,R6
023E 33                RLC     A
023F 95E0              SUBB    A,ACC
0241 FD                MOV     R5,A
0242 FC                MOV     R4,A
0243 C3                CLR     C
0244 120000      E     LCALL   ?C?SLCMP
0247 4005              JC      ?C0061
0249 200002            JB      pret_done,?C0061
                                           ; SOURCE LINE # 346
024C D200        E     SETB    pretensioning_flag
                                           ; SOURCE LINE # 347
                                           ; SOURCE LINE # 348
024E         ?C0061:
024E 22                RET     
             ; FUNCTION slide_cuff (END)
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 48  


             ; FUNCTION force_and_slide_cuff (BEGIN)
                                           ; SOURCE LINE # 350
                                           ; SOURCE LINE # 359
0000 900000      R     MOV     DPTR,#packet_lenght
0003 7402              MOV     A,#02H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 360
0006 900000      R     MOV     DPTR,#packet_data
0009 7486              MOV     A,#086H
000B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 361
000C 900000      R     MOV     DPTR,#packet_data+01H
000F 7486              MOV     A,#086H
0011 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 362
0012 7B01              MOV     R3,#01H
0014 7A00        R     MOV     R2,#HIGH packet_data
0016 7900        R     MOV     R1,#LOW packet_data
0018 900000      R     MOV     DPTR,#packet_lenght
001B E0                MOVX    A,@DPTR
001C FF                MOV     R7,A
001D EF                MOV     A,R7
001E FD                MOV     R5,A
001F 7C00              MOV     R4,#00H
0021 900000      R     MOV     DPTR,#?_commWrite?BYTE+05H
0024 7401              MOV     A,#01H
0026 F0                MOVX    @DPTR,A
0027 120000      R     LCALL   _commWrite
                                           ; SOURCE LINE # 364
002A 120000      E     LCALL   MY_TIMER_ReadCounter
002D 900000      R     MOV     DPTR,#t_start
0030 120000      E     LCALL   ?C?LSTXDATA
0033         ?C0062:
                                           ; SOURCE LINE # 365
0033 900000      E     MOV     DPTR,#g_rx
0036 E0                MOVX    A,@DPTR
0037 FF                MOV     R7,A
0038 EF                MOV     A,R7
0039 6486              XRL     A,#086H
003B 6030              JZ      ?C0063
                                           ; SOURCE LINE # 366
003D 300005            JNB     interrupt_flag,?C0064
                                           ; SOURCE LINE # 367
0040 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 368
0042 120000      E     LCALL   interrupt_manager
                                           ; SOURCE LINE # 369
0045         ?C0064:
                                           ; SOURCE LINE # 370
0045 120000      E     LCALL   MY_TIMER_ReadCounter
0048 900000      R     MOV     DPTR,#t_end
004B 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 371
004E 900000      R     MOV     DPTR,#t_end
0051 120000      E     LCALL   ?C?LLDXDATA0
0054 900000      R     MOV     DPTR,#t_start
0057 120000      E     LCALL   ?C?LLDXDATA
005A 120000      E     LCALL   ?C?LSUB
005D 7B20              MOV     R3,#020H
005F 7AAA              MOV     R2,#0AAH
0061 7944              MOV     R1,#044H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 49  

0063 7800              MOV     R0,#00H
0065 C3                CLR     C
0066 120000      E     LCALL   ?C?ULCMP
0069 50C8              JNC     ?C0062
                                           ; SOURCE LINE # 372
006B C200        E     CLR     cuff_flag_force_proprio
                                           ; SOURCE LINE # 373
                                           ; SOURCE LINE # 374
                                           ; SOURCE LINE # 375
006D         ?C0063:
                                           ; SOURCE LINE # 377
006D 200003      E     JB      cuff_flag_force_proprio,$ + 6H
0070 020000      R     LJMP    ?C0078
                                           ; SOURCE LINE # 378
0073 900000      E     MOV     DPTR,#g_rx+03H
0076 E0                MOVX    A,@DPTR
0077 FE                MOV     R6,A
0078 A3                INC     DPTR
0079 E0                MOVX    A,@DPTR
007A FF                MOV     R7,A
007B 900000      R     MOV     DPTR,#curr_diff
007E EE                MOV     A,R6
007F F0                MOVX    @DPTR,A
0080 A3                INC     DPTR
0081 EF                MOV     A,R7
0082 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 379
0083 900000      E     MOV     DPTR,#g_rx+05H
0086 E0                MOVX    A,@DPTR
0087 FE                MOV     R6,A
0088 A3                INC     DPTR
0089 E0                MOVX    A,@DPTR
008A FF                MOV     R7,A
008B 900000      R     MOV     DPTR,#SH_pos
008E EE                MOV     A,R6
008F F0                MOVX    @DPTR,A
0090 A3                INC     DPTR
0091 EF                MOV     A,R7
0092 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 382
0093 900000      E     MOV     DPTR,#g_mem+06BH
0096 E0                MOVX    A,@DPTR
0097 FE                MOV     R6,A
0098 A3                INC     DPTR
0099 E0                MOVX    A,@DPTR
009A FF                MOV     R7,A
009B 900000      R     MOV     DPTR,#curr_diff
009E E0                MOVX    A,@DPTR
009F FC                MOV     R4,A
00A0 A3                INC     DPTR
00A1 E0                MOVX    A,@DPTR
00A2 FD                MOV     R5,A
00A3 D3                SETB    C
00A4 ED                MOV     A,R5
00A5 9F                SUBB    A,R7
00A6 EE                MOV     A,R6
00A7 6480              XRL     A,#080H
00A9 F8                MOV     R0,A
00AA EC                MOV     A,R4
00AB 6480              XRL     A,#080H
00AD 98                SUBB    A,R0
00AE 4010              JC      ?C0067
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 50  

                                           ; SOURCE LINE # 383
00B0 900000      E     MOV     DPTR,#g_mem+06BH
00B3 E0                MOVX    A,@DPTR
00B4 FE                MOV     R6,A
00B5 A3                INC     DPTR
00B6 E0                MOVX    A,@DPTR
00B7 FF                MOV     R7,A
00B8 900000      R     MOV     DPTR,#curr_diff
00BB EE                MOV     A,R6
00BC F0                MOVX    @DPTR,A
00BD A3                INC     DPTR
00BE EF                MOV     A,R7
00BF F0                MOVX    @DPTR,A
00C0         ?C0067:
                                           ; SOURCE LINE # 385
00C0 900000      E     MOV     DPTR,#g_mem+06DH
00C3 E0                MOVX    A,@DPTR
00C4 FE                MOV     R6,A
00C5 A3                INC     DPTR
00C6 E0                MOVX    A,@DPTR
00C7 FF                MOV     R7,A
00C8 900000      R     MOV     DPTR,#curr_diff
00CB E0                MOVX    A,@DPTR
00CC FC                MOV     R4,A
00CD A3                INC     DPTR
00CE E0                MOVX    A,@DPTR
00CF FD                MOV     R5,A
00D0 C3                CLR     C
00D1 ED                MOV     A,R5
00D2 9F                SUBB    A,R7
00D3 EE                MOV     A,R6
00D4 6480              XRL     A,#080H
00D6 F8                MOV     R0,A
00D7 EC                MOV     A,R4
00D8 6480              XRL     A,#080H
00DA 98                SUBB    A,R0
00DB 500A              JNC     ?C0068
                                           ; SOURCE LINE # 386
00DD 900000      R     MOV     DPTR,#curr_diff
00E0 E4                CLR     A
00E1 F0                MOVX    @DPTR,A
00E2 A3                INC     DPTR
00E3 E4                CLR     A
00E4 F0                MOVX    @DPTR,A
00E5 801F              SJMP    ?C0069
00E7         ?C0068:
                                           ; SOURCE LINE # 388
00E7 900000      R     MOV     DPTR,#curr_diff
00EA E0                MOVX    A,@DPTR
00EB FE                MOV     R6,A
00EC A3                INC     DPTR
00ED E0                MOVX    A,@DPTR
00EE FF                MOV     R7,A
00EF 900000      E     MOV     DPTR,#g_mem+06DH
00F2 E0                MOVX    A,@DPTR
00F3 FC                MOV     R4,A
00F4 A3                INC     DPTR
00F5 E0                MOVX    A,@DPTR
00F6 FD                MOV     R5,A
00F7 C3                CLR     C
00F8 EF                MOV     A,R7
00F9 9D                SUBB    A,R5
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 51  

00FA FF                MOV     R7,A
00FB EE                MOV     A,R6
00FC 9C                SUBB    A,R4
00FD FE                MOV     R6,A
00FE 900000      R     MOV     DPTR,#curr_diff
0101 EE                MOV     A,R6
0102 F0                MOVX    @DPTR,A
0103 A3                INC     DPTR
0104 EF                MOV     A,R7
0105 F0                MOVX    @DPTR,A
0106         ?C0069:
                                           ; SOURCE LINE # 391
0106 900000      R     MOV     DPTR,#SH_pos
0109 E0                MOVX    A,@DPTR
010A FE                MOV     R6,A
010B A3                INC     DPTR
010C E0                MOVX    A,@DPTR
010D FF                MOV     R7,A
010E EE                MOV     A,R6
010F 33                RLC     A
0110 95E0              SUBB    A,ACC
0112 FD                MOV     R5,A
0113 FC                MOV     R4,A
0114 900000      E     MOV     DPTR,#g_mem+07CH
0117 120000      E     LCALL   ?C?LLDXDATA0
011A 120000      E     LCALL   ?C?LSUB
011D 900000      R     MOV     DPTR,#aux_val
0120 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 392
0123 900000      E     MOV     DPTR,#g_mem+070H
0126 120000      E     LCALL   ?C?LLDXDATA
0129 900000      R     MOV     DPTR,#aux_val
012C 120000      E     LCALL   ?C?LLDXDATA0
012F 120000      E     LCALL   ?C?LMUL
0132 900000      E     MOV     DPTR,#g_mem+074H
0135 120000      E     LCALL   ?C?LLDXDATA0
0138 120000      E     LCALL   ?C?SLDIV
013B 900000      R     MOV     DPTR,#aux_val
013E 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 394
0141 900000      R     MOV     DPTR,#aux_val
0144 120000      E     LCALL   ?C?LLDXDATA
0147 900000      E     MOV     DPTR,#g_mem+037H
014A E0                MOVX    A,@DPTR
014B F9                MOV     R1,A
014C A801              MOV     R0,AR1
014E 120000      E     LCALL   ?C?LSHL
0151 900000      R     MOV     DPTR,#ref_slide
0154 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 395
0157 900000      R     MOV     DPTR,#aux_val
015A 120000      E     LCALL   ?C?LLDXDATA
015D 900000      E     MOV     DPTR,#g_mem+038H
0160 E0                MOVX    A,@DPTR
0161 F9                MOV     R1,A
0162 A801              MOV     R0,AR1
0164 120000      E     LCALL   ?C?LSHL
0167 900000      R     MOV     DPTR,#ref_slide+04H
016A 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 398
016D 900000      R     MOV     DPTR,#curr_diff
0170 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 52  

0171 FC                MOV     R4,A
0172 A3                INC     DPTR
0173 E0                MOVX    A,@DPTR
0174 FD                MOV     R5,A
0175 EC                MOV     A,R4
0176 120000      E     LCALL   ?C?FCASTI
0179 900000      E     MOV     DPTR,#g_mem+067H
017C 120000      E     LCALL   ?C?LLDXDATA0
017F 120000      E     LCALL   ?C?FPMUL
0182 7B00              MOV     R3,#00H
0184 7AFF              MOV     R2,#0FFH
0186 797F              MOV     R1,#07FH
0188 7847              MOV     R0,#047H
018A 120000      E     LCALL   ?C?FPMUL
018D 7B00              MOV     R3,#00H
018F 7A00              MOV     R2,#00H
0191 79B4              MOV     R1,#0B4H
0193 7844              MOV     R0,#044H
0195 120000      E     LCALL   ?C?FPDIV
0198 120000      E     LCALL   ?C?CASTF
019B 900000      R     MOV     DPTR,#aux_val
019E 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 400
01A1 900000      E     MOV     DPTR,#c_mem+080H
01A4 E0                MOVX    A,@DPTR
01A5 FF                MOV     R7,A
01A6 EF                MOV     A,R7
01A7 7003              JNZ     $ + 5H
01A9 020000      R     LJMP    ?C0070
                                           ; SOURCE LINE # 402
01AC 900000      R     MOV     DPTR,#ref_slide
01AF 120000      E     LCALL   ?C?LLDXDATA
01B2 900000      E     MOV     DPTR,#pret_offset_pos
01B5 120000      E     LCALL   ?C?LLDXDATA0
01B8 120000      E     LCALL   ?C?LADD
01BB C004              PUSH    AR4
01BD C005              PUSH    AR5
01BF C006              PUSH    AR6
01C1 C007              PUSH    AR7
01C3 900000      R     MOV     DPTR,#aux_val
01C6 120000      E     LCALL   ?C?LLDXDATA
01C9 900000      E     MOV     DPTR,#g_mem+037H
01CC E0                MOVX    A,@DPTR
01CD F9                MOV     R1,A
01CE A801              MOV     R0,AR1
01D0 120000      E     LCALL   ?C?LSHL
01D3 A804              MOV     R0,AR4
01D5 A905              MOV     R1,AR5
01D7 AA06              MOV     R2,AR6
01D9 AB07              MOV     R3,AR7
01DB D007              POP     AR7
01DD D006              POP     AR6
01DF D005              POP     AR5
01E1 D004              POP     AR4
01E3 120000      E     LCALL   ?C?LSUB
01E6 900000      E     MOV     DPTR,#g_refNew
01E9 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 403
01EC 900000      R     MOV     DPTR,#ref_slide+04H
01EF 120000      E     LCALL   ?C?LLDXDATA
01F2 900000      E     MOV     DPTR,#pret_offset_pos+04H
01F5 120000      E     LCALL   ?C?LLDXDATA0
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 53  

01F8 120000      E     LCALL   ?C?LADD
01FB C004              PUSH    AR4
01FD C005              PUSH    AR5
01FF C006              PUSH    AR6
0201 C007              PUSH    AR7
0203 900000      R     MOV     DPTR,#aux_val
0206 120000      E     LCALL   ?C?LLDXDATA
0209 900000      E     MOV     DPTR,#g_mem+038H
020C E0                MOVX    A,@DPTR
020D F9                MOV     R1,A
020E A801              MOV     R0,AR1
0210 120000      E     LCALL   ?C?LSHL
0213 A804              MOV     R0,AR4
0215 A905              MOV     R1,AR5
0217 AA06              MOV     R2,AR6
0219 AB07              MOV     R3,AR7
021B D007              POP     AR7
021D D006              POP     AR6
021F D005              POP     AR5
0221 D004              POP     AR4
0223 120000      E     LCALL   ?C?LADD
0226 900000      E     MOV     DPTR,#g_refNew+04H
0229 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 404
022C 020000      R     LJMP    ?C0071
022F         ?C0070:
                                           ; SOURCE LINE # 405
                                           ; SOURCE LINE # 407
022F 900000      R     MOV     DPTR,#ref_slide
0232 120000      E     LCALL   ?C?LLDXDATA0
0235 900000      E     MOV     DPTR,#pret_offset_pos
0238 120000      E     LCALL   ?C?LLDXDATA
023B 120000      E     LCALL   ?C?LSUB
023E C004              PUSH    AR4
0240 C005              PUSH    AR5
0242 C006              PUSH    AR6
0244 C007              PUSH    AR7
0246 900000      R     MOV     DPTR,#aux_val
0249 120000      E     LCALL   ?C?LLDXDATA
024C 900000      E     MOV     DPTR,#g_mem+037H
024F E0                MOVX    A,@DPTR
0250 F9                MOV     R1,A
0251 A801              MOV     R0,AR1
0253 120000      E     LCALL   ?C?LSHL
0256 A804              MOV     R0,AR4
0258 A905              MOV     R1,AR5
025A AA06              MOV     R2,AR6
025C AB07              MOV     R3,AR7
025E D007              POP     AR7
0260 D006              POP     AR6
0262 D005              POP     AR5
0264 D004              POP     AR4
0266 120000      E     LCALL   ?C?LSUB
0269 900000      E     MOV     DPTR,#g_refNew
026C 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 408
026F 900000      R     MOV     DPTR,#ref_slide+04H
0272 120000      E     LCALL   ?C?LLDXDATA0
0275 900000      E     MOV     DPTR,#pret_offset_pos+04H
0278 120000      E     LCALL   ?C?LLDXDATA
027B 120000      E     LCALL   ?C?LSUB
027E C004              PUSH    AR4
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 54  

0280 C005              PUSH    AR5
0282 C006              PUSH    AR6
0284 C007              PUSH    AR7
0286 900000      R     MOV     DPTR,#aux_val
0289 120000      E     LCALL   ?C?LLDXDATA
028C 900000      E     MOV     DPTR,#g_mem+038H
028F E0                MOVX    A,@DPTR
0290 F9                MOV     R1,A
0291 A801              MOV     R0,AR1
0293 120000      E     LCALL   ?C?LSHL
0296 A804              MOV     R0,AR4
0298 A905              MOV     R1,AR5
029A AA06              MOV     R2,AR6
029C AB07              MOV     R3,AR7
029E D007              POP     AR7
02A0 D006              POP     AR6
02A2 D005              POP     AR5
02A4 D004              POP     AR4
02A6 120000      E     LCALL   ?C?LADD
02A9 900000      E     MOV     DPTR,#g_refNew+04H
02AC 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 409
02AF         ?C0071:
                                           ; SOURCE LINE # 415
02AF 900000      E     MOV     DPTR,#c_mem+049H
02B2 E0                MOVX    A,@DPTR
02B3 FF                MOV     R7,A
02B4 EF                MOV     A,R7
02B5 6078              JZ      ?C0072
                                           ; SOURCE LINE # 416
02B7 900000      E     MOV     DPTR,#c_mem+04AH
02BA 120000      E     LCALL   ?C?LLDXDATA
02BD 900000      E     MOV     DPTR,#g_refNew
02C0 120000      E     LCALL   ?C?LLDXDATA0
02C3 C3                CLR     C
02C4 120000      E     LCALL   ?C?SLCMP
02C7 500C              JNC     ?C0073
02C9 900000      E     MOV     DPTR,#c_mem+04AH
02CC 120000      E     LCALL   ?C?LLDXDATA
02CF 900000      E     MOV     DPTR,#g_refNew
02D2 120000      E     LCALL   ?C?LSTXDATA
02D5         ?C0073:
                                           ; SOURCE LINE # 417
02D5 900000      E     MOV     DPTR,#c_mem+04EH
02D8 120000      E     LCALL   ?C?LLDXDATA
02DB 900000      E     MOV     DPTR,#g_refNew+04H
02DE 120000      E     LCALL   ?C?LLDXDATA0
02E1 C3                CLR     C
02E2 120000      E     LCALL   ?C?SLCMP
02E5 500C              JNC     ?C0074
02E7 900000      E     MOV     DPTR,#c_mem+04EH
02EA 120000      E     LCALL   ?C?LLDXDATA
02ED 900000      E     MOV     DPTR,#g_refNew+04H
02F0 120000      E     LCALL   ?C?LSTXDATA
02F3         ?C0074:
                                           ; SOURCE LINE # 419
02F3 900000      E     MOV     DPTR,#c_mem+052H
02F6 120000      E     LCALL   ?C?LLDXDATA
02F9 900000      E     MOV     DPTR,#g_refNew
02FC 120000      E     LCALL   ?C?LLDXDATA0
02FF D3                SETB    C
0300 120000      E     LCALL   ?C?SLCMP
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 55  

0303 400C              JC      ?C0075
0305 900000      E     MOV     DPTR,#c_mem+052H
0308 120000      E     LCALL   ?C?LLDXDATA
030B 900000      E     MOV     DPTR,#g_refNew
030E 120000      E     LCALL   ?C?LSTXDATA
0311         ?C0075:
                                           ; SOURCE LINE # 420
0311 900000      E     MOV     DPTR,#c_mem+056H
0314 120000      E     LCALL   ?C?LLDXDATA
0317 900000      E     MOV     DPTR,#g_refNew+04H
031A 120000      E     LCALL   ?C?LLDXDATA0
031D D3                SETB    C
031E 120000      E     LCALL   ?C?SLCMP
0321 400C              JC      ?C0072
0323 900000      E     MOV     DPTR,#c_mem+056H
0326 120000      E     LCALL   ?C?LLDXDATA
0329 900000      E     MOV     DPTR,#g_refNew+04H
032C 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 421
032F         ?C0072:
                                           ; SOURCE LINE # 423
032F 900000      E     MOV     DPTR,#g_mem+07CH
0332 120000      E     LCALL   ?C?LLDXDATA
0335 EF                MOV     A,R7
0336 24CE              ADD     A,#0CEH
0338 FB                MOV     R3,A
0339 EE                MOV     A,R6
033A 34FF              ADDC    A,#0FFH
033C FA                MOV     R2,A
033D ED                MOV     A,R5
033E 34FF              ADDC    A,#0FFH
0340 F9                MOV     R1,A
0341 EC                MOV     A,R4
0342 34FF              ADDC    A,#0FFH
0344 F8                MOV     R0,A
0345 900000      R     MOV     DPTR,#SH_pos
0348 E0                MOVX    A,@DPTR
0349 FE                MOV     R6,A
034A A3                INC     DPTR
034B E0                MOVX    A,@DPTR
034C FF                MOV     R7,A
034D EE                MOV     A,R6
034E 33                RLC     A
034F 95E0              SUBB    A,ACC
0351 FD                MOV     R5,A
0352 FC                MOV     R4,A
0353 D3                SETB    C
0354 120000      E     LCALL   ?C?SLCMP
0357 502F              JNC     ?C0078
0359 900000      E     MOV     DPTR,#g_mem+07CH
035C 120000      E     LCALL   ?C?LLDXDATA
035F EF                MOV     A,R7
0360 2432              ADD     A,#032H
0362 FB                MOV     R3,A
0363 EE                MOV     A,R6
0364 3400              ADDC    A,#00H
0366 FA                MOV     R2,A
0367 ED                MOV     A,R5
0368 3400              ADDC    A,#00H
036A F9                MOV     R1,A
036B EC                MOV     A,R4
036C 3400              ADDC    A,#00H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 56  

036E F8                MOV     R0,A
036F 900000      R     MOV     DPTR,#SH_pos
0372 E0                MOVX    A,@DPTR
0373 FE                MOV     R6,A
0374 A3                INC     DPTR
0375 E0                MOVX    A,@DPTR
0376 FF                MOV     R7,A
0377 EE                MOV     A,R6
0378 33                RLC     A
0379 95E0              SUBB    A,ACC
037B FD                MOV     R5,A
037C FC                MOV     R4,A
037D C3                CLR     C
037E 120000      E     LCALL   ?C?SLCMP
0381 4005              JC      ?C0078
0383 200002            JB      pret_done,?C0078
                                           ; SOURCE LINE # 424
0386 D200        E     SETB    pretensioning_flag
                                           ; SOURCE LINE # 426
                                           ; SOURCE LINE # 427
0388         ?C0078:
0388 22                RET     
             ; FUNCTION force_and_slide_cuff (END)

             ; FUNCTION _infoGet (BEGIN)
                                           ; SOURCE LINE # 433
0000 900000      R     MOV     DPTR,#info_type
0003 EE                MOV     A,R6
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EF                MOV     A,R7
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 438
0008 900000      R     MOV     DPTR,#info_type
000B E0                MOVX    A,@DPTR
000C FE                MOV     R6,A
000D A3                INC     DPTR
000E E0                MOVX    A,@DPTR
000F FF                MOV     R7,A
0010 EF                MOV     A,R7
0011 8EF0              MOV     B,R6
0013 120000      E     LCALL   ?C?ICASE
0016 0000        R     DW      ?C0080
0018 0000              DW      00H
001A 0000              DW      00H
001C 0000        R     DW      ?C0082
                                           ; SOURCE LINE # 439
001E         ?C0080:
                                           ; SOURCE LINE # 440
001E 7B01              MOV     R3,#01H
0020 7A00        R     MOV     R2,#HIGH packet_string
0022 7900        R     MOV     R1,#LOW packet_string
0024 120000      R     LCALL   _infoPrepare
                                           ; SOURCE LINE # 441
0027 7B01              MOV     R3,#01H
0029 7A00        R     MOV     R2,#HIGH packet_string
002B 7900        R     MOV     R1,#LOW packet_string
002D 120000      E     LCALL   _UART_RS485_PutString
                                           ; SOURCE LINE # 442
                                           ; SOURCE LINE # 443
                                           ; SOURCE LINE # 444
                                           ; SOURCE LINE # 445
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 57  

                                           ; SOURCE LINE # 446
0030         ?C0082:
0030 22                RET     
             ; FUNCTION _infoGet (END)

             ; FUNCTION setZeros (BEGIN)
                                           ; SOURCE LINE # 452
                                           ; SOURCE LINE # 453
                                           ; SOURCE LINE # 456
0000 750000      R     MOV     i,#00H
0003         ?C0083:
0003 E500        R     MOV     A,i
0005 C3                CLR     C
0006 9402              SUBB    A,#02H
0008 506F              JNC     ?C0084
                                           ; SOURCE LINE # 457
000A AF00        R     MOV     R7,i
000C EF                MOV     A,R7
000D 25E0              ADD     A,ACC
000F 2400        E     ADD     A,#LOW g_rx+01H
0011 F582              MOV     DPL,A
0013 E4                CLR     A
0014 3400        E     ADDC    A,#HIGH g_rx+01H
0016 F583              MOV     DPH,A
0018 E0                MOVX    A,@DPTR
0019 FE                MOV     R6,A
001A A3                INC     DPTR
001B E0                MOVX    A,@DPTR
001C FF                MOV     R7,A
001D EE                MOV     A,R6
001E 33                RLC     A
001F 95E0              SUBB    A,ACC
0021 FD                MOV     R5,A
0022 FC                MOV     R4,A
0023 AB00        R     MOV     R3,i
0025 EB                MOV     A,R3
0026 25E0              ADD     A,ACC
0028 25E0              ADD     A,ACC
002A 2400        E     ADD     A,#LOW g_mem+039H
002C F582              MOV     DPL,A
002E E4                CLR     A
002F 3400        E     ADDC    A,#HIGH g_mem+039H
0031 F583              MOV     DPH,A
0033 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 458
0036 AF00        R     MOV     R7,i
0038 EF                MOV     A,R7
0039 25E0              ADD     A,ACC
003B 25E0              ADD     A,ACC
003D 2400        E     ADD     A,#LOW g_mem+039H
003F F582              MOV     DPL,A
0041 E4                CLR     A
0042 3400        E     ADDC    A,#HIGH g_mem+039H
0044 F583              MOV     DPH,A
0046 C083              PUSH    DPH
0048 C082              PUSH    DPL
004A 120000      E     LCALL   ?C?LLDXDATA
004D AB00        R     MOV     R3,i
004F 7400        E     MOV     A,#LOW g_mem+037H
0051 2B                ADD     A,R3
0052 F582              MOV     DPL,A
0054 E4                CLR     A
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 58  

0055 3400        E     ADDC    A,#HIGH g_mem+037H
0057 F583              MOV     DPH,A
0059 E0                MOVX    A,@DPTR
005A F9                MOV     R1,A
005B A801              MOV     R0,AR1
005D 120000      E     LCALL   ?C?LSHL
0060 D082              POP     DPL
0062 D083              POP     DPH
0064 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 460
0067 AF00        R     MOV     R7,i
0069 7400        E     MOV     A,#LOW g_meas+0CH
006B 2F                ADD     A,R7
006C F582              MOV     DPL,A
006E E4                CLR     A
006F 3400        E     ADDC    A,#HIGH g_meas+0CH
0071 F583              MOV     DPH,A
0073 E4                CLR     A
0074 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 461
0075 0500        R     INC     i
0077 808A              SJMP    ?C0083
0079         ?C0084:
                                           ; SOURCE LINE # 462
0079 D200        E     SETB    reset_last_value_flag
                                           ; SOURCE LINE # 464
007B 7F01              MOV     R7,#01H
007D 120000      R     LCALL   _sendAcknowledgment
                                           ; SOURCE LINE # 465
0080 22                RET     
             ; FUNCTION setZeros (END)

             ; FUNCTION _get_param_list (BEGIN)
                                           ; SOURCE LINE # 471
0000 900000      R     MOV     DPTR,#index
0003 EE                MOV     A,R6
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EF                MOV     A,R7
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 472
                                           ; SOURCE LINE # 474
0008 7BFF              MOV     R3,#0FFH
000A 7A00        R     MOV     R2,#HIGH _?ix1000
000C 7900        R     MOV     R1,#LOW _?ix1000
000E C003              PUSH    AR3
0010 C002              PUSH    AR2
0012 C001              PUSH    AR1
0014 7B01              MOV     R3,#01H
0016 7A00        R     MOV     R2,#HIGH packet_data
0018 7900        R     MOV     R1,#LOW packet_data
001A A801              MOV     R0,AR1
001C AC02              MOV     R4,AR2
001E AD03              MOV     R5,AR3
0020 D001              POP     AR1
0022 D002              POP     AR2
0024 D003              POP     AR3
0026 7E07              MOV     R6,#07H
0028 7F6D              MOV     R7,#06DH
002A 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 475
002D 900000      R     MOV     DPTR,#packet_lenght
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 59  

0030 7407              MOV     A,#07H
0032 F0                MOVX    @DPTR,A
0033 A3                INC     DPTR
0034 746D              MOV     A,#06DH
0036 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 484
0037 7BFF              MOV     R3,#0FFH
0039 7A00        R     MOV     R2,#HIGH _?ix1001
003B 7900        R     MOV     R1,#LOW _?ix1001
003D C003              PUSH    AR3
003F C002              PUSH    AR2
0041 C001              PUSH    AR1
0043 7B01              MOV     R3,#01H
0045 7A00        R     MOV     R2,#HIGH id_str
0047 7900        R     MOV     R1,#LOW id_str
0049 A801              MOV     R0,AR1
004B AC02              MOV     R4,AR2
004D AD03              MOV     R5,AR3
004F D001              POP     AR1
0051 D002              POP     AR2
0053 D003              POP     AR3
0055 7E00              MOV     R6,#00H
0057 7F0F              MOV     R7,#0FH
0059 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 485
005C 7BFF              MOV     R3,#0FFH
005E 7A00        R     MOV     R2,#HIGH _?ix1002
0060 7900        R     MOV     R1,#LOW _?ix1002
0062 C003              PUSH    AR3
0064 C002              PUSH    AR2
0066 C001              PUSH    AR1
0068 7B01              MOV     R3,#01H
006A 7A00        R     MOV     R2,#HIGH pos_pid_str
006C 7900        R     MOV     R1,#LOW pos_pid_str
006E A801              MOV     R0,AR1
0070 AC02              MOV     R4,AR2
0072 AD03              MOV     R5,AR3
0074 D001              POP     AR1
0076 D002              POP     AR2
0078 D003              POP     AR3
007A 7E00              MOV     R6,#00H
007C 7F1C              MOV     R7,#01CH
007E 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 486
0081 7BFF              MOV     R3,#0FFH
0083 7A00        R     MOV     R2,#HIGH _?ix1003
0085 7900        R     MOV     R1,#LOW _?ix1003
0087 C003              PUSH    AR3
0089 C002              PUSH    AR2
008B C001              PUSH    AR1
008D 7B01              MOV     R3,#01H
008F 7A00        R     MOV     R2,#HIGH curr_pid_str
0091 7900        R     MOV     R1,#LOW curr_pid_str
0093 A801              MOV     R0,AR1
0095 AC02              MOV     R4,AR2
0097 AD03              MOV     R5,AR3
0099 D001              POP     AR1
009B D002              POP     AR2
009D D003              POP     AR3
009F 7E00              MOV     R6,#00H
00A1 7F1B              MOV     R7,#01BH
00A3 120000      E     LCALL   ?C?COPYAMD
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 60  

                                           ; SOURCE LINE # 487
00A6 7BFF              MOV     R3,#0FFH
00A8 7A00        R     MOV     R2,#HIGH _?ix1004
00AA 7900        R     MOV     R1,#LOW _?ix1004
00AC C003              PUSH    AR3
00AE C002              PUSH    AR2
00B0 C001              PUSH    AR1
00B2 7B01              MOV     R3,#01H
00B4 7A00        R     MOV     R2,#HIGH startup_str
00B6 7900        R     MOV     R1,#LOW startup_str
00B8 A801              MOV     R0,AR1
00BA AC02              MOV     R4,AR2
00BC AD03              MOV     R5,AR3
00BE D001              POP     AR1
00C0 D002              POP     AR2
00C2 D003              POP     AR3
00C4 7E00              MOV     R6,#00H
00C6 7F1C              MOV     R7,#01CH
00C8 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 488
00CB 7BFF              MOV     R3,#0FFH
00CD 7A00        R     MOV     R2,#HIGH _?ix1005
00CF 7900        R     MOV     R1,#LOW _?ix1005
00D1 C003              PUSH    AR3
00D3 C002              PUSH    AR2
00D5 C001              PUSH    AR1
00D7 7B01              MOV     R3,#01H
00D9 7A00        R     MOV     R2,#HIGH input_str
00DB 7900        R     MOV     R1,#LOW input_str
00DD A801              MOV     R0,AR1
00DF AC02              MOV     R4,AR2
00E1 AD03              MOV     R5,AR3
00E3 D001              POP     AR1
00E5 D002              POP     AR2
00E7 D003              POP     AR3
00E9 7E00              MOV     R6,#00H
00EB 7F1B              MOV     R7,#01BH
00ED 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 489
00F0 7BFF              MOV     R3,#0FFH
00F2 7A00        R     MOV     R2,#HIGH _?ix1006
00F4 7900        R     MOV     R1,#LOW _?ix1006
00F6 C003              PUSH    AR3
00F8 C002              PUSH    AR2
00FA C001              PUSH    AR1
00FC 7B01              MOV     R3,#01H
00FE 7A00        R     MOV     R2,#HIGH contr_str
0100 7900        R     MOV     R1,#LOW contr_str
0102 A801              MOV     R0,AR1
0104 AC02              MOV     R4,AR2
0106 AD03              MOV     R5,AR3
0108 D001              POP     AR1
010A D002              POP     AR2
010C D003              POP     AR3
010E 7E00              MOV     R6,#00H
0110 7F27              MOV     R7,#027H
0112 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 490
0115 7BFF              MOV     R3,#0FFH
0117 7A00        R     MOV     R2,#HIGH _?ix1007
0119 7900        R     MOV     R1,#LOW _?ix1007
011B C003              PUSH    AR3
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 61  

011D C002              PUSH    AR2
011F C001              PUSH    AR1
0121 7B01              MOV     R3,#01H
0123 7A00        R     MOV     R2,#HIGH res_str
0125 7900        R     MOV     R1,#LOW res_str
0127 A801              MOV     R0,AR1
0129 AC02              MOV     R4,AR2
012B AD03              MOV     R5,AR3
012D D001              POP     AR1
012F D002              POP     AR2
0131 D003              POP     AR3
0133 7E00              MOV     R6,#00H
0135 7F15              MOV     R7,#015H
0137 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 491
013A 7BFF              MOV     R3,#0FFH
013C 7A00        R     MOV     R2,#HIGH _?ix1008
013E 7900        R     MOV     R1,#LOW _?ix1008
0140 C003              PUSH    AR3
0142 C002              PUSH    AR2
0144 C001              PUSH    AR1
0146 7B01              MOV     R3,#01H
0148 7A00        R     MOV     R2,#HIGH m_off_str
014A 7900        R     MOV     R1,#LOW m_off_str
014C A801              MOV     R0,AR1
014E AC02              MOV     R4,AR2
0150 AD03              MOV     R5,AR3
0152 D001              POP     AR1
0154 D002              POP     AR2
0156 D003              POP     AR3
0158 7E00              MOV     R6,#00H
015A 7F19              MOV     R7,#019H
015C 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 492
015F 7BFF              MOV     R3,#0FFH
0161 7A00        R     MOV     R2,#HIGH _?ix1009
0163 7900        R     MOV     R1,#LOW _?ix1009
0165 C003              PUSH    AR3
0167 C002              PUSH    AR2
0169 C001              PUSH    AR1
016B 7B01              MOV     R3,#01H
016D 7A00        R     MOV     R2,#HIGH mult_str
016F 7900        R     MOV     R1,#LOW mult_str
0171 A801              MOV     R0,AR1
0173 AC02              MOV     R4,AR2
0175 AD03              MOV     R5,AR3
0177 D001              POP     AR1
0179 D002              POP     AR2
017B D003              POP     AR3
017D 7E00              MOV     R6,#00H
017F 7F11              MOV     R7,#011H
0181 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 493
0184 7BFF              MOV     R3,#0FFH
0186 7A00        R     MOV     R2,#HIGH _?ix1010
0188 7900        R     MOV     R1,#LOW _?ix1010
018A C003              PUSH    AR3
018C C002              PUSH    AR2
018E C001              PUSH    AR1
0190 7B01              MOV     R3,#01H
0192 7A00        R     MOV     R2,#HIGH pos_lim_flag_str
0194 7900        R     MOV     R1,#LOW pos_lim_flag_str
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 62  

0196 A801              MOV     R0,AR1
0198 AC02              MOV     R4,AR2
019A AD03              MOV     R5,AR3
019C D001              POP     AR1
019E D002              POP     AR2
01A0 D003              POP     AR3
01A2 7E00              MOV     R6,#00H
01A4 7F1C              MOV     R7,#01CH
01A6 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 494
01A9 7BFF              MOV     R3,#0FFH
01AB 7A00        R     MOV     R2,#HIGH _?ix1011
01AD 7900        R     MOV     R1,#LOW _?ix1011
01AF C003              PUSH    AR3
01B1 C002              PUSH    AR2
01B3 C001              PUSH    AR1
01B5 7B01              MOV     R3,#01H
01B7 7A00        R     MOV     R2,#HIGH pos_lim_str
01B9 7900        R     MOV     R1,#LOW pos_lim_str
01BB A801              MOV     R0,AR1
01BD AC02              MOV     R4,AR2
01BF AD03              MOV     R5,AR3
01C1 D001              POP     AR1
01C3 D002              POP     AR2
01C5 D003              POP     AR3
01C7 7E00              MOV     R6,#00H
01C9 7F1D              MOV     R7,#01DH
01CB 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 495
01CE 7BFF              MOV     R3,#0FFH
01D0 7A00        R     MOV     R2,#HIGH _?ix1012
01D2 7900        R     MOV     R1,#LOW _?ix1012
01D4 C003              PUSH    AR3
01D6 C002              PUSH    AR2
01D8 C001              PUSH    AR1
01DA 7B01              MOV     R3,#01H
01DC 7A00        R     MOV     R2,#HIGH max_step_str
01DE 7900        R     MOV     R1,#LOW max_step_str
01E0 A801              MOV     R0,AR1
01E2 AC02              MOV     R4,AR2
01E4 AD03              MOV     R5,AR3
01E6 D001              POP     AR1
01E8 D002              POP     AR2
01EA D003              POP     AR3
01EC 7E00              MOV     R6,#00H
01EE 7F1B              MOV     R7,#01BH
01F0 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 496
01F3 7BFF              MOV     R3,#0FFH
01F5 7A00        R     MOV     R2,#HIGH _?ix1013
01F7 7900        R     MOV     R1,#LOW _?ix1013
01F9 C003              PUSH    AR3
01FB C002              PUSH    AR2
01FD C001              PUSH    AR1
01FF 7B01              MOV     R3,#01H
0201 7A00        R     MOV     R2,#HIGH curr_limit_str
0203 7900        R     MOV     R1,#LOW curr_limit_str
0205 A801              MOV     R0,AR1
0207 AC02              MOV     R4,AR2
0209 AD03              MOV     R5,AR3
020B D001              POP     AR1
020D D002              POP     AR2
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 63  

020F D003              POP     AR3
0211 7E00              MOV     R6,#00H
0213 7F14              MOV     R7,#014H
0215 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 497
0218 7BFF              MOV     R3,#0FFH
021A 7A00        R     MOV     R2,#HIGH _?ix1014
021C 7900        R     MOV     R1,#LOW _?ix1014
021E C003              PUSH    AR3
0220 C002              PUSH    AR2
0222 C001              PUSH    AR1
0224 7B01              MOV     R3,#01H
0226 7A00        R     MOV     R2,#HIGH curr_prop_gain_str
0228 7900        R     MOV     R1,#LOW curr_prop_gain_str
022A A801              MOV     R0,AR1
022C AC02              MOV     R4,AR2
022E AD03              MOV     R5,AR3
0230 D001              POP     AR1
0232 D002              POP     AR2
0234 D003              POP     AR3
0236 7E00              MOV     R6,#00H
0238 7F20              MOV     R7,#020H
023A 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 498
023D 7BFF              MOV     R3,#0FFH
023F 7A00        R     MOV     R2,#HIGH _?ix1015
0241 7900        R     MOV     R1,#LOW _?ix1015
0243 C003              PUSH    AR3
0245 C002              PUSH    AR2
0247 C001              PUSH    AR1
0249 7B01              MOV     R3,#01H
024B 7A00        R     MOV     R2,#HIGH curr_sat_str
024D 7900        R     MOV     R1,#LOW curr_sat_str
024F A801              MOV     R0,AR1
0251 AC02              MOV     R4,AR2
0253 AD03              MOV     R5,AR3
0255 D001              POP     AR1
0257 D002              POP     AR2
0259 D003              POP     AR3
025B 7E00              MOV     R6,#00H
025D 7F24              MOV     R7,#024H
025F 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 499
0262 7BFF              MOV     R3,#0FFH
0264 7A00        R     MOV     R2,#HIGH _?ix1016
0266 7900        R     MOV     R1,#LOW _?ix1016
0268 C003              PUSH    AR3
026A C002              PUSH    AR2
026C C001              PUSH    AR1
026E 7B01              MOV     R3,#01H
0270 7A00        R     MOV     R2,#HIGH curr_dead_zone_str
0272 7900        R     MOV     R1,#LOW curr_dead_zone_str
0274 A801              MOV     R0,AR1
0276 AC02              MOV     R4,AR2
0278 AD03              MOV     R5,AR3
027A D001              POP     AR1
027C D002              POP     AR2
027E D003              POP     AR3
0280 7E00              MOV     R6,#00H
0282 7F18              MOV     R7,#018H
0284 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 500
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 64  

0287 7BFF              MOV     R3,#0FFH
0289 7A00        R     MOV     R2,#HIGH _?ix1017
028B 7900        R     MOV     R1,#LOW _?ix1017
028D C003              PUSH    AR3
028F C002              PUSH    AR2
0291 C001              PUSH    AR1
0293 7B01              MOV     R3,#01H
0295 7A00        R     MOV     R2,#HIGH cuff_activ_force_str
0297 7900        R     MOV     R1,#LOW cuff_activ_force_str
0299 A801              MOV     R0,AR1
029B AC02              MOV     R4,AR2
029D AD03              MOV     R5,AR3
029F D001              POP     AR1
02A1 D002              POP     AR2
02A3 D003              POP     AR3
02A5 7E00              MOV     R6,#00H
02A7 7F25              MOV     R7,#025H
02A9 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 501
02AC 7BFF              MOV     R3,#0FFH
02AE 7A00        R     MOV     R2,#HIGH _?ix1018
02B0 7900        R     MOV     R1,#LOW _?ix1018
02B2 C003              PUSH    AR3
02B4 C002              PUSH    AR2
02B6 C001              PUSH    AR1
02B8 7B01              MOV     R3,#01H
02BA 7A00        R     MOV     R2,#HIGH pow_tension_str
02BC 7900        R     MOV     R1,#LOW pow_tension_str
02BE A801              MOV     R0,AR1
02C0 AC02              MOV     R4,AR2
02C2 AD03              MOV     R5,AR3
02C4 D001              POP     AR1
02C6 D002              POP     AR2
02C8 D003              POP     AR3
02CA 7E00              MOV     R6,#00H
02CC 7F16              MOV     R7,#016H
02CE 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 502
02D1 7BFF              MOV     R3,#0FFH
02D3 7A00        R     MOV     R2,#HIGH _?ix1019
02D5 7900        R     MOV     R1,#LOW _?ix1019
02D7 C003              PUSH    AR3
02D9 C002              PUSH    AR2
02DB C001              PUSH    AR1
02DD 7B01              MOV     R3,#01H
02DF 7A00        R     MOV     R2,#HIGH cuff_activ_proprio_str
02E1 7900        R     MOV     R1,#LOW cuff_activ_proprio_str
02E3 A801              MOV     R0,AR1
02E5 AC02              MOV     R4,AR2
02E7 AD03              MOV     R5,AR3
02E9 D001              POP     AR1
02EB D002              POP     AR2
02ED D003              POP     AR3
02EF 7E00              MOV     R6,#00H
02F1 7F27              MOV     R7,#027H
02F3 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 503
02F6 7BFF              MOV     R3,#0FFH
02F8 7A00        R     MOV     R2,#HIGH _?ix1020
02FA 7900        R     MOV     R1,#LOW _?ix1020
02FC C003              PUSH    AR3
02FE C002              PUSH    AR2
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 65  

0300 C001              PUSH    AR1
0302 7B01              MOV     R3,#01H
0304 7A00        R     MOV     R2,#HIGH max_slide_str
0306 7900        R     MOV     R1,#LOW max_slide_str
0308 A801              MOV     R0,AR1
030A AC02              MOV     R4,AR2
030C AD03              MOV     R5,AR3
030E D001              POP     AR1
0310 D002              POP     AR2
0312 D003              POP     AR3
0314 7E00              MOV     R6,#00H
0316 7F23              MOV     R7,#023H
0318 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 504
031B 7BFF              MOV     R3,#0FFH
031D 7A00        R     MOV     R2,#HIGH _?ix1021
031F 7900        R     MOV     R1,#LOW _?ix1021
0321 C003              PUSH    AR3
0323 C002              PUSH    AR2
0325 C001              PUSH    AR1
0327 7B01              MOV     R3,#01H
0329 7A00        R     MOV     R2,#HIGH max_SH_pos_str
032B 7900        R     MOV     R1,#LOW max_SH_pos_str
032D A801              MOV     R0,AR1
032F AC02              MOV     R4,AR2
0331 AD03              MOV     R5,AR3
0333 D001              POP     AR1
0335 D002              POP     AR2
0337 D003              POP     AR3
0339 7E00              MOV     R6,#00H
033B 7F1F              MOV     R7,#01FH
033D 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 505
0340 7BFF              MOV     R3,#0FFH
0342 7A00        R     MOV     R2,#HIGH _?ix1022
0344 7900        R     MOV     R1,#LOW _?ix1022
0346 C003              PUSH    AR3
0348 C002              PUSH    AR2
034A C001              PUSH    AR1
034C 7B01              MOV     R3,#01H
034E 7A00        R     MOV     R2,#HIGH hand_ID_str
0350 7900        R     MOV     R1,#LOW hand_ID_str
0352 A801              MOV     R0,AR1
0354 AC02              MOV     R4,AR2
0356 AD03              MOV     R5,AR3
0358 D001              POP     AR1
035A D002              POP     AR2
035C D003              POP     AR3
035E 7E00              MOV     R6,#00H
0360 7F0E              MOV     R7,#0EH
0362 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 506
0365 7BFF              MOV     R3,#0FFH
0367 7A00        R     MOV     R2,#HIGH _?ix1023
0369 7900        R     MOV     R1,#LOW _?ix1023
036B C003              PUSH    AR3
036D C002              PUSH    AR2
036F C001              PUSH    AR1
0371 7B01              MOV     R3,#01H
0373 7A00        R     MOV     R2,#HIGH cuff_activ_force_proprio_str
0375 7900        R     MOV     R1,#LOW cuff_activ_force_proprio_str
0377 A801              MOV     R0,AR1
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 66  

0379 AC02              MOV     R4,AR2
037B AD03              MOV     R5,AR3
037D D001              POP     AR1
037F D002              POP     AR2
0381 D003              POP     AR3
0383 7E00              MOV     R6,#00H
0385 7F22              MOV     R7,#022H
0387 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 507
038A 7BFF              MOV     R3,#0FFH
038C 7A00        R     MOV     R2,#HIGH _?ix1024
038E 7900        R     MOV     R1,#LOW _?ix1024
0390 C003              PUSH    AR3
0392 C002              PUSH    AR2
0394 C001              PUSH    AR1
0396 7B01              MOV     R3,#01H
0398 7A00        R     MOV     R2,#HIGH SH_rest_pos_str
039A 7900        R     MOV     R1,#LOW SH_rest_pos_str
039C A801              MOV     R0,AR1
039E AC02              MOV     R4,AR2
03A0 AD03              MOV     R5,AR3
03A2 D001              POP     AR1
03A4 D002              POP     AR2
03A6 D003              POP     AR3
03A8 7E00              MOV     R6,#00H
03AA 7F21              MOV     R7,#021H
03AC 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 508
03AF 7BFF              MOV     R3,#0FFH
03B1 7A00        R     MOV     R2,#HIGH _?ix1025
03B3 7900        R     MOV     R1,#LOW _?ix1025
03B5 C003              PUSH    AR3
03B7 C002              PUSH    AR2
03B9 C001              PUSH    AR1
03BB 7B01              MOV     R3,#01H
03BD 7A00        R     MOV     R2,#HIGH right_left_par_str
03BF 7900        R     MOV     R1,#LOW right_left_par_str
03C1 A801              MOV     R0,AR1
03C3 AC02              MOV     R4,AR2
03C5 AD03              MOV     R5,AR3
03C7 D001              POP     AR1
03C9 D002              POP     AR2
03CB D003              POP     AR3
03CD 7E00              MOV     R6,#00H
03CF 7F15              MOV     R7,#015H
03D1 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 511
03D4 7BFF              MOV     R3,#0FFH
03D6 7A00        R     MOV     R2,#HIGH _?ix1026
03D8 7900        R     MOV     R1,#LOW _?ix1026
03DA C003              PUSH    AR3
03DC C002              PUSH    AR2
03DE C001              PUSH    AR1
03E0 7B01              MOV     R3,#01H
03E2 7A00        R     MOV     R2,#HIGH input_mode_menu
03E4 7900        R     MOV     R1,#LOW input_mode_menu
03E6 A801              MOV     R0,AR1
03E8 AC02              MOV     R4,AR2
03EA AD03              MOV     R5,AR3
03EC D001              POP     AR1
03EE D002              POP     AR2
03F0 D003              POP     AR3
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 67  

03F2 7E00              MOV     R6,#00H
03F4 7F34              MOV     R7,#034H
03F6 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 512
03F9 7BFF              MOV     R3,#0FFH
03FB 7A00        R     MOV     R2,#HIGH _?ix1027
03FD 7900        R     MOV     R1,#LOW _?ix1027
03FF C003              PUSH    AR3
0401 C002              PUSH    AR2
0403 C001              PUSH    AR1
0405 7B01              MOV     R3,#01H
0407 7A00        R     MOV     R2,#HIGH control_mode_menu
0409 7900        R     MOV     R1,#LOW control_mode_menu
040B A801              MOV     R0,AR1
040D AC02              MOV     R4,AR2
040F AD03              MOV     R5,AR3
0411 D001              POP     AR1
0413 D002              POP     AR2
0415 D003              POP     AR3
0417 7E00              MOV     R6,#00H
0419 7F3B              MOV     R7,#03BH
041B 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 513
041E 7BFF              MOV     R3,#0FFH
0420 7A00        R     MOV     R2,#HIGH _?ix1028
0422 7900        R     MOV     R1,#LOW _?ix1028
0424 C003              PUSH    AR3
0426 C002              PUSH    AR2
0428 C001              PUSH    AR1
042A 7B01              MOV     R3,#01H
042C 7A00        R     MOV     R2,#HIGH yes_no_menu
042E 7900        R     MOV     R1,#LOW yes_no_menu
0430 A801              MOV     R0,AR1
0432 AC02              MOV     R4,AR2
0434 AD03              MOV     R5,AR3
0436 D001              POP     AR1
0438 D002              POP     AR2
043A D003              POP     AR3
043C 7E00              MOV     R6,#00H
043E 7F2A              MOV     R7,#02AH
0440 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 514
0443 7BFF              MOV     R3,#0FFH
0445 7A00        R     MOV     R2,#HIGH _?ix1029
0447 7900        R     MOV     R1,#LOW _?ix1029
0449 C003              PUSH    AR3
044B C002              PUSH    AR2
044D C001              PUSH    AR1
044F 7B01              MOV     R3,#01H
0451 7A00        R     MOV     R2,#HIGH right_left_menu
0453 7900        R     MOV     R1,#LOW right_left_menu
0455 A801              MOV     R0,AR1
0457 AC02              MOV     R4,AR2
0459 AD03              MOV     R5,AR3
045B D001              POP     AR1
045D D002              POP     AR2
045F D003              POP     AR3
0461 7E00              MOV     R6,#00H
0463 7F16              MOV     R7,#016H
0465 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 517
0468 7B01              MOV     R3,#01H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 68  

046A 7A00        R     MOV     R2,#HIGH id_str
046C 7900        R     MOV     R1,#LOW id_str
046E 120000      E     LCALL   _strlen
0471 8F00        R     MOV     id_str_len,R7
                                           ; SOURCE LINE # 518
0473 7B01              MOV     R3,#01H
0475 7A00        R     MOV     R2,#HIGH pos_pid_str
0477 7900        R     MOV     R1,#LOW pos_pid_str
0479 120000      E     LCALL   _strlen
047C 8F00        R     MOV     pos_pid_str_len,R7
                                           ; SOURCE LINE # 519
047E 7B01              MOV     R3,#01H
0480 7A00        R     MOV     R2,#HIGH curr_pid_str
0482 7900        R     MOV     R1,#LOW curr_pid_str
0484 120000      E     LCALL   _strlen
0487 8F00        R     MOV     curr_pid_str_len,R7
                                           ; SOURCE LINE # 521
0489 7B01              MOV     R3,#01H
048B 7A00        R     MOV     R2,#HIGH res_str
048D 7900        R     MOV     R1,#LOW res_str
048F 120000      E     LCALL   _strlen
0492 8F00        R     MOV     res_str_len,R7
                                           ; SOURCE LINE # 522
0494 7B01              MOV     R3,#01H
0496 7A00        R     MOV     R2,#HIGH m_off_str
0498 7900        R     MOV     R1,#LOW m_off_str
049A 120000      E     LCALL   _strlen
049D 8F00        R     MOV     m_off_str_len,R7
                                           ; SOURCE LINE # 523
049F 7B01              MOV     R3,#01H
04A1 7A00        R     MOV     R2,#HIGH mult_str
04A3 7900        R     MOV     R1,#LOW mult_str
04A5 120000      E     LCALL   _strlen
04A8 8F00        R     MOV     mult_str_len,R7
                                           ; SOURCE LINE # 525
04AA 7B01              MOV     R3,#01H
04AC 7A00        R     MOV     R2,#HIGH pos_lim_str
04AE 7900        R     MOV     R1,#LOW pos_lim_str
04B0 120000      E     LCALL   _strlen
04B3 8F00        R     MOV     pos_lim_str_len,R7
                                           ; SOURCE LINE # 526
04B5 7B01              MOV     R3,#01H
04B7 7A00        R     MOV     R2,#HIGH curr_limit_str
04B9 7900        R     MOV     R1,#LOW curr_limit_str
04BB 120000      E     LCALL   _strlen
04BE 8F00        R     MOV     curr_limit_str_len,R7
                                           ; SOURCE LINE # 528
04C0 7B01              MOV     R3,#01H
04C2 7A00        R     MOV     R2,#HIGH curr_prop_gain_str
04C4 7900        R     MOV     R1,#LOW curr_prop_gain_str
04C6 120000      E     LCALL   _strlen
04C9 8F00        R     MOV     curr_prop_gain_str_len,R7
                                           ; SOURCE LINE # 529
04CB 7B01              MOV     R3,#01H
04CD 7A00        R     MOV     R2,#HIGH curr_sat_str
04CF 7900        R     MOV     R1,#LOW curr_sat_str
04D1 120000      E     LCALL   _strlen
04D4 8F00        R     MOV     curr_sat_str_len,R7
                                           ; SOURCE LINE # 530
04D6 7B01              MOV     R3,#01H
04D8 7A00        R     MOV     R2,#HIGH curr_dead_zone_str
04DA 7900        R     MOV     R1,#LOW curr_dead_zone_str
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 69  

04DC 120000      E     LCALL   _strlen
04DF 8F00        R     MOV     curr_dead_zone_str_len,R7
                                           ; SOURCE LINE # 531
04E1 7B01              MOV     R3,#01H
04E3 7A00        R     MOV     R2,#HIGH pow_tension_str
04E5 7900        R     MOV     R1,#LOW pow_tension_str
04E7 120000      E     LCALL   _strlen
04EA 8F00        R     MOV     pow_tension_str_len,R7
                                           ; SOURCE LINE # 533
04EC 7B01              MOV     R3,#01H
04EE 7A00        R     MOV     R2,#HIGH input_mode_menu
04F0 7900        R     MOV     R1,#LOW input_mode_menu
04F2 120000      E     LCALL   _strlen
04F5 8F00        R     MOV     input_mode_menu_len,R7
                                           ; SOURCE LINE # 534
04F7 7B01              MOV     R3,#01H
04F9 7A00        R     MOV     R2,#HIGH control_mode_menu
04FB 7900        R     MOV     R1,#LOW control_mode_menu
04FD 120000      E     LCALL   _strlen
0500 8F00        R     MOV     control_mode_menu_len,R7
                                           ; SOURCE LINE # 535
0502 7B01              MOV     R3,#01H
0504 7A00        R     MOV     R2,#HIGH yes_no_menu
0506 7900        R     MOV     R1,#LOW yes_no_menu
0508 120000      E     LCALL   _strlen
050B 8F00        R     MOV     yes_no_menu_len,R7
                                           ; SOURCE LINE # 536
050D 7B01              MOV     R3,#01H
050F 7A00        R     MOV     R2,#HIGH right_left_menu
0511 7900        R     MOV     R1,#LOW right_left_menu
0513 120000      E     LCALL   _strlen
0516 8F00        R     MOV     right_left_menu_len,R7
                                           ; SOURCE LINE # 538
0518 7B01              MOV     R3,#01H
051A 7A00        R     MOV     R2,#HIGH max_slide_str
051C 7900        R     MOV     R1,#LOW max_slide_str
051E 120000      E     LCALL   _strlen
0521 8F00        R     MOV     max_slide_str_len,R7
                                           ; SOURCE LINE # 539
0523 7B01              MOV     R3,#01H
0525 7A00        R     MOV     R2,#HIGH max_SH_pos_str
0527 7900        R     MOV     R1,#LOW max_SH_pos_str
0529 120000      E     LCALL   _strlen
052C 8F00        R     MOV     max_SH_pos_str_len,R7
                                           ; SOURCE LINE # 540
052E 7B01              MOV     R3,#01H
0530 7A00        R     MOV     R2,#HIGH hand_ID_str
0532 7900        R     MOV     R1,#LOW hand_ID_str
0534 120000      E     LCALL   _strlen
0537 8F00        R     MOV     hand_ID_str_len,R7
                                           ; SOURCE LINE # 541
0539 7B01              MOV     R3,#01H
053B 7A00        R     MOV     R2,#HIGH SH_rest_pos_str
053D 7900        R     MOV     R1,#LOW SH_rest_pos_str
053F 120000      E     LCALL   _strlen
0542 900000      R     MOV     DPTR,#SH_rest_pos_str_len
0545 EF                MOV     A,R7
0546 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 543
0547 900000      R     MOV     DPTR,#packet_data
054A 740C              MOV     A,#0CH
054C F0                MOVX    @DPTR,A
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 70  

                                           ; SOURCE LINE # 544
054D 900000      R     MOV     DPTR,#packet_data+01H
0550 7419              MOV     A,#019H
0552 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 546
0553 900000      R     MOV     DPTR,#index
0556 E0                MOVX    A,@DPTR
0557 FE                MOV     R6,A
0558 A3                INC     DPTR
0559 E0                MOVX    A,@DPTR
055A FF                MOV     R7,A
055B EF                MOV     A,R7
055C 8EF0              MOV     B,R6
055E 120000      E     LCALL   ?C?ICASE
0561 0000        R     DW      ?C0088
0563 0000              DW      00H
0565 0000        R     DW      ?C0212
0567 0001              DW      01H
0569 0000        R     DW      ?C0213
056B 0002              DW      02H
056D 0000        R     DW      ?C0216
056F 0003              DW      03H
0571 0000        R     DW      ?C0219
0573 0004              DW      04H
0575 0000        R     DW      ?C0222
0577 0005              DW      05H
0579 0000        R     DW      ?C0223
057B 0006              DW      06H
057D 0000        R     DW      ?C0224
057F 0007              DW      07H
0581 0000        R     DW      ?C0228
0583 0008              DW      08H
0585 0000        R     DW      ?C0232
0587 0009              DW      09H
0589 0000        R     DW      ?C0236
058B 000A              DW      0AH
058D 0000        R     DW      ?C0237
058F 000B              DW      0BH
0591 0000        R     DW      ?C0241
0593 000C              DW      0CH
0595 0000        R     DW      ?C0244
0597 000D              DW      0DH
0599 0000        R     DW      ?C0245
059B 000E              DW      0EH
059D 0000        R     DW      ?C0246
059F 000F              DW      0FH
05A1 0000        R     DW      ?C0247
05A3 0010              DW      010H
05A5 0000        R     DW      ?C0248
05A7 0011              DW      011H
05A9 0000        R     DW      ?C0250
05AB 0012              DW      012H
05AD 0000        R     DW      ?C0251
05AF 0013              DW      013H
05B1 0000        R     DW      ?C0253
05B3 0014              DW      014H
05B5 0000        R     DW      ?C0254
05B7 0015              DW      015H
05B9 0000        R     DW      ?C0255
05BB 0016              DW      016H
05BD 0000        R     DW      ?C0256
05BF 0017              DW      017H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 71  

05C1 0000        R     DW      ?C0258
05C3 0018              DW      018H
05C5 0000        R     DW      ?C0259
05C7 0019              DW      019H
05C9 0000              DW      00H
05CB 0000        R     DW      ?C0260
                                           ; SOURCE LINE # 547
05CD         ?C0088:
                                           ; SOURCE LINE # 550
05CD 900000      R     MOV     DPTR,#packet_data+02H
05D0 7402              MOV     A,#02H
05D2 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 551
05D3 900000      R     MOV     DPTR,#packet_data+03H
05D6 7401              MOV     A,#01H
05D8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 552
05D9 900000      E     MOV     DPTR,#c_mem+01H
05DC E0                MOVX    A,@DPTR
05DD FF                MOV     R7,A
05DE 900000      R     MOV     DPTR,#packet_data+04H
05E1 EF                MOV     A,R7
05E2 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 553
05E3 AF00        R     MOV     R7,id_str_len
05E5 7E00              MOV     R6,#00H
05E7 8E00        R     MOV     i,R6
05E9 8F00        R     MOV     i+01H,R7
05EB         ?C0089:
05EB E500        R     MOV     A,i+01H
05ED 4500        R     ORL     A,i
05EF 603E              JZ      ?C0090
                                           ; SOURCE LINE # 554
05F1 AF00        R     MOV     R7,id_str_len
05F3 7E00              MOV     R6,#00H
05F5 C3                CLR     C
05F6 EF                MOV     A,R7
05F7 9500        R     SUBB    A,i+01H
05F9 FF                MOV     R7,A
05FA EE                MOV     A,R6
05FB 9500        R     SUBB    A,i
05FD FE                MOV     R6,A
05FE 7400        R     MOV     A,#LOW id_str
0600 2F                ADD     A,R7
0601 F582              MOV     DPL,A
0603 7400        R     MOV     A,#HIGH id_str
0605 3E                ADDC    A,R6
0606 F583              MOV     DPH,A
0608 E0                MOVX    A,@DPTR
0609 FF                MOV     R7,A
060A AE00        R     MOV     R6,id_str_len
060C EE                MOV     A,R6
060D FD                MOV     R5,A
060E 7C00              MOV     R4,#00H
0610 C3                CLR     C
0611 ED                MOV     A,R5
0612 9500        R     SUBB    A,i+01H
0614 FD                MOV     R5,A
0615 EC                MOV     A,R4
0616 9500        R     SUBB    A,i
0618 FC                MOV     R4,A
0619 7400        R     MOV     A,#LOW packet_data+05H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 72  

061B 2D                ADD     A,R5
061C F582              MOV     DPL,A
061E 7400        R     MOV     A,#HIGH packet_data+05H
0620 3C                ADDC    A,R4
0621 F583              MOV     DPH,A
0623 EF                MOV     A,R7
0624 F0                MOVX    @DPTR,A
0625 E500        R     MOV     A,i+01H
0627 1500        R     DEC     i+01H
0629 7002              JNZ     ?C0402
062B 1500        R     DEC     i
062D         ?C0402:
062D 80BC              SJMP    ?C0089
062F         ?C0090:
                                           ; SOURCE LINE # 558
062F 900000      R     MOV     DPTR,#packet_data+034H
0632 7407              MOV     A,#07H
0634 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 559
0635 900000      R     MOV     DPTR,#packet_data+035H
0638 7403              MOV     A,#03H
063A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 560
063B 900000      E     MOV     DPTR,#c_mem+036H
063E E0                MOVX    A,@DPTR
063F FF                MOV     R7,A
0640 EF                MOV     A,R7
0641 6403              XRL     A,#03H
0643 6053              JZ      ?C0092
                                           ; SOURCE LINE # 561
0645 900000      E     MOV     DPTR,#c_mem+02H
0648 120000      E     LCALL   ?C?LLDXDATA
064B EC                MOV     A,R4
064C 120000      E     LCALL   ?C?FCASTL
064F 7B00              MOV     R3,#00H
0651 7A00              MOV     R2,#00H
0653 7980              MOV     R1,#080H
0655 7847              MOV     R0,#047H
0657 120000      E     LCALL   ?C?FPDIV
065A 900000      R     MOV     DPTR,#packet_data+036H
065D 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 562
0660 900000      E     MOV     DPTR,#c_mem+06H
0663 120000      E     LCALL   ?C?LLDXDATA
0666 EC                MOV     A,R4
0667 120000      E     LCALL   ?C?FCASTL
066A 7B00              MOV     R3,#00H
066C 7A00              MOV     R2,#00H
066E 7980              MOV     R1,#080H
0670 7847              MOV     R0,#047H
0672 120000      E     LCALL   ?C?FPDIV
0675 900000      R     MOV     DPTR,#packet_data+03AH
0678 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 563
067B 900000      E     MOV     DPTR,#c_mem+0AH
067E 120000      E     LCALL   ?C?LLDXDATA
0681 EC                MOV     A,R4
0682 120000      E     LCALL   ?C?FCASTL
0685 7B00              MOV     R3,#00H
0687 7A00              MOV     R2,#00H
0689 7980              MOV     R1,#080H
068B 7847              MOV     R0,#047H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 73  

068D 120000      E     LCALL   ?C?FPDIV
0690 900000      R     MOV     DPTR,#packet_data+03EH
0693 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 564
0696 8051              SJMP    ?C0093
0698         ?C0092:
                                           ; SOURCE LINE # 565
                                           ; SOURCE LINE # 566
0698 900000      E     MOV     DPTR,#c_mem+01AH
069B 120000      E     LCALL   ?C?LLDXDATA
069E EC                MOV     A,R4
069F 120000      E     LCALL   ?C?FCASTL
06A2 7B00              MOV     R3,#00H
06A4 7A00              MOV     R2,#00H
06A6 7980              MOV     R1,#080H
06A8 7847              MOV     R0,#047H
06AA 120000      E     LCALL   ?C?FPDIV
06AD 900000      R     MOV     DPTR,#packet_data+036H
06B0 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 567
06B3 900000      E     MOV     DPTR,#c_mem+01EH
06B6 120000      E     LCALL   ?C?LLDXDATA
06B9 EC                MOV     A,R4
06BA 120000      E     LCALL   ?C?FCASTL
06BD 7B00              MOV     R3,#00H
06BF 7A00              MOV     R2,#00H
06C1 7980              MOV     R1,#080H
06C3 7847              MOV     R0,#047H
06C5 120000      E     LCALL   ?C?FPDIV
06C8 900000      R     MOV     DPTR,#packet_data+03AH
06CB 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 568
06CE 900000      E     MOV     DPTR,#c_mem+022H
06D1 120000      E     LCALL   ?C?LLDXDATA
06D4 EC                MOV     A,R4
06D5 120000      E     LCALL   ?C?FCASTL
06D8 7B00              MOV     R3,#00H
06DA 7A00              MOV     R2,#00H
06DC 7980              MOV     R1,#080H
06DE 7847              MOV     R0,#047H
06E0 120000      E     LCALL   ?C?FPDIV
06E3 900000      R     MOV     DPTR,#packet_data+03EH
06E6 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 569
06E9         ?C0093:
                                           ; SOURCE LINE # 570
06E9 AF00        R     MOV     R7,pos_pid_str_len
06EB 7E00              MOV     R6,#00H
06ED 8E00        R     MOV     i,R6
06EF 8F00        R     MOV     i+01H,R7
06F1         ?C0094:
06F1 E500        R     MOV     A,i+01H
06F3 4500        R     ORL     A,i
06F5 603E              JZ      ?C0095
                                           ; SOURCE LINE # 571
06F7 AF00        R     MOV     R7,pos_pid_str_len
06F9 7E00              MOV     R6,#00H
06FB C3                CLR     C
06FC EF                MOV     A,R7
06FD 9500        R     SUBB    A,i+01H
06FF FF                MOV     R7,A
0700 EE                MOV     A,R6
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 74  

0701 9500        R     SUBB    A,i
0703 FE                MOV     R6,A
0704 7400        R     MOV     A,#LOW pos_pid_str
0706 2F                ADD     A,R7
0707 F582              MOV     DPL,A
0709 7400        R     MOV     A,#HIGH pos_pid_str
070B 3E                ADDC    A,R6
070C F583              MOV     DPH,A
070E E0                MOVX    A,@DPTR
070F FF                MOV     R7,A
0710 AE00        R     MOV     R6,pos_pid_str_len
0712 EE                MOV     A,R6
0713 FD                MOV     R5,A
0714 7C00              MOV     R4,#00H
0716 C3                CLR     C
0717 ED                MOV     A,R5
0718 9500        R     SUBB    A,i+01H
071A FD                MOV     R5,A
071B EC                MOV     A,R4
071C 9500        R     SUBB    A,i
071E FC                MOV     R4,A
071F 7400        R     MOV     A,#LOW packet_data+042H
0721 2D                ADD     A,R5
0722 F582              MOV     DPL,A
0724 7400        R     MOV     A,#HIGH packet_data+042H
0726 3C                ADDC    A,R4
0727 F583              MOV     DPH,A
0729 EF                MOV     A,R7
072A F0                MOVX    @DPTR,A
072B E500        R     MOV     A,i+01H
072D 1500        R     DEC     i+01H
072F 7002              JNZ     ?C0403
0731 1500        R     DEC     i
0733         ?C0403:
0733 80BC              SJMP    ?C0094
0735         ?C0095:
                                           ; SOURCE LINE # 575
0735 900000      R     MOV     DPTR,#packet_data+066H
0738 7407              MOV     A,#07H
073A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 576
073B 900000      R     MOV     DPTR,#packet_data+067H
073E 7403              MOV     A,#03H
0740 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 577
0741 900000      E     MOV     DPTR,#c_mem+036H
0744 E0                MOVX    A,@DPTR
0745 FF                MOV     R7,A
0746 EF                MOV     A,R7
0747 6403              XRL     A,#03H
0749 6053              JZ      ?C0097
                                           ; SOURCE LINE # 578
074B 900000      E     MOV     DPTR,#c_mem+0EH
074E 120000      E     LCALL   ?C?LLDXDATA
0751 EC                MOV     A,R4
0752 120000      E     LCALL   ?C?FCASTL
0755 7B00              MOV     R3,#00H
0757 7A00              MOV     R2,#00H
0759 7980              MOV     R1,#080H
075B 7847              MOV     R0,#047H
075D 120000      E     LCALL   ?C?FPDIV
0760 900000      R     MOV     DPTR,#packet_data+068H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 75  

0763 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 579
0766 900000      E     MOV     DPTR,#c_mem+012H
0769 120000      E     LCALL   ?C?LLDXDATA
076C EC                MOV     A,R4
076D 120000      E     LCALL   ?C?FCASTL
0770 7B00              MOV     R3,#00H
0772 7A00              MOV     R2,#00H
0774 7980              MOV     R1,#080H
0776 7847              MOV     R0,#047H
0778 120000      E     LCALL   ?C?FPDIV
077B 900000      R     MOV     DPTR,#packet_data+06CH
077E 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 580
0781 900000      E     MOV     DPTR,#c_mem+016H
0784 120000      E     LCALL   ?C?LLDXDATA
0787 EC                MOV     A,R4
0788 120000      E     LCALL   ?C?FCASTL
078B 7B00              MOV     R3,#00H
078D 7A00              MOV     R2,#00H
078F 7980              MOV     R1,#080H
0791 7847              MOV     R0,#047H
0793 120000      E     LCALL   ?C?FPDIV
0796 900000      R     MOV     DPTR,#packet_data+070H
0799 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 581
079C 8051              SJMP    ?C0098
079E         ?C0097:
                                           ; SOURCE LINE # 582
                                           ; SOURCE LINE # 583
079E 900000      E     MOV     DPTR,#c_mem+026H
07A1 120000      E     LCALL   ?C?LLDXDATA
07A4 EC                MOV     A,R4
07A5 120000      E     LCALL   ?C?FCASTL
07A8 7B00              MOV     R3,#00H
07AA 7A00              MOV     R2,#00H
07AC 7980              MOV     R1,#080H
07AE 7847              MOV     R0,#047H
07B0 120000      E     LCALL   ?C?FPDIV
07B3 900000      R     MOV     DPTR,#packet_data+068H
07B6 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 584
07B9 900000      E     MOV     DPTR,#c_mem+02AH
07BC 120000      E     LCALL   ?C?LLDXDATA
07BF EC                MOV     A,R4
07C0 120000      E     LCALL   ?C?FCASTL
07C3 7B00              MOV     R3,#00H
07C5 7A00              MOV     R2,#00H
07C7 7980              MOV     R1,#080H
07C9 7847              MOV     R0,#047H
07CB 120000      E     LCALL   ?C?FPDIV
07CE 900000      R     MOV     DPTR,#packet_data+06CH
07D1 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 585
07D4 900000      E     MOV     DPTR,#c_mem+02EH
07D7 120000      E     LCALL   ?C?LLDXDATA
07DA EC                MOV     A,R4
07DB 120000      E     LCALL   ?C?FCASTL
07DE 7B00              MOV     R3,#00H
07E0 7A00              MOV     R2,#00H
07E2 7980              MOV     R1,#080H
07E4 7847              MOV     R0,#047H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 76  

07E6 120000      E     LCALL   ?C?FPDIV
07E9 900000      R     MOV     DPTR,#packet_data+070H
07EC 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 586
07EF         ?C0098:
                                           ; SOURCE LINE # 587
07EF AF00        R     MOV     R7,curr_pid_str_len
07F1 7E00              MOV     R6,#00H
07F3 8E00        R     MOV     i,R6
07F5 8F00        R     MOV     i+01H,R7
07F7         ?C0099:
07F7 E500        R     MOV     A,i+01H
07F9 4500        R     ORL     A,i
07FB 603E              JZ      ?C0100
                                           ; SOURCE LINE # 588
07FD AF00        R     MOV     R7,curr_pid_str_len
07FF 7E00              MOV     R6,#00H
0801 C3                CLR     C
0802 EF                MOV     A,R7
0803 9500        R     SUBB    A,i+01H
0805 FF                MOV     R7,A
0806 EE                MOV     A,R6
0807 9500        R     SUBB    A,i
0809 FE                MOV     R6,A
080A 7400        R     MOV     A,#LOW curr_pid_str
080C 2F                ADD     A,R7
080D F582              MOV     DPL,A
080F 7400        R     MOV     A,#HIGH curr_pid_str
0811 3E                ADDC    A,R6
0812 F583              MOV     DPH,A
0814 E0                MOVX    A,@DPTR
0815 FF                MOV     R7,A
0816 AE00        R     MOV     R6,curr_pid_str_len
0818 EE                MOV     A,R6
0819 FD                MOV     R5,A
081A 7C00              MOV     R4,#00H
081C C3                CLR     C
081D ED                MOV     A,R5
081E 9500        R     SUBB    A,i+01H
0820 FD                MOV     R5,A
0821 EC                MOV     A,R4
0822 9500        R     SUBB    A,i
0824 FC                MOV     R4,A
0825 7400        R     MOV     A,#LOW packet_data+074H
0827 2D                ADD     A,R5
0828 F582              MOV     DPL,A
082A 7400        R     MOV     A,#HIGH packet_data+074H
082C 3C                ADDC    A,R4
082D F583              MOV     DPH,A
082F EF                MOV     A,R7
0830 F0                MOVX    @DPTR,A
0831 E500        R     MOV     A,i+01H
0833 1500        R     DEC     i+01H
0835 7002              JNZ     ?C0404
0837 1500        R     DEC     i
0839         ?C0404:
0839 80BC              SJMP    ?C0099
083B         ?C0100:
                                           ; SOURCE LINE # 592
083B 900000      R     MOV     DPTR,#packet_data+098H
083E E4                CLR     A
083F F0                MOVX    @DPTR,A
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 77  

                                           ; SOURCE LINE # 593
0840 900000      R     MOV     DPTR,#packet_data+099H
0843 7401              MOV     A,#01H
0845 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 594
0846 900000      E     MOV     DPTR,#c_mem+034H
0849 E0                MOVX    A,@DPTR
084A FF                MOV     R7,A
084B 900000      R     MOV     DPTR,#packet_data+09AH
084E EF                MOV     A,R7
084F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 595
0850 900000      E     MOV     DPTR,#c_mem+034H
0853 E0                MOVX    A,@DPTR
0854 FF                MOV     R7,A
0855 EF                MOV     A,R7
0856 6029              JZ      ?C0102
                                           ; SOURCE LINE # 596
0858 7B01              MOV     R3,#01H
085A 7A00        R     MOV     R2,#HIGH startup_str
085C 7900        R     MOV     R1,#LOW startup_str
085E C003              PUSH    AR3
0860 C002              PUSH    AR2
0862 C001              PUSH    AR1
0864 7BFF              MOV     R3,#0FFH
0866 7A00        R     MOV     R2,#HIGH ?SC_0
0868 7900        R     MOV     R1,#LOW ?SC_0
086A 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
086D 120000      E     LCALL   ?C?PSTXDATA
0870 D001              POP     AR1
0872 D002              POP     AR2
0874 D003              POP     AR3
0876 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 597
0879 900000      R     MOV     DPTR,#string_lenght
087C 741C              MOV     A,#01CH
087E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 598
087F 8027              SJMP    ?C0103
0881         ?C0102:
                                           ; SOURCE LINE # 599
                                           ; SOURCE LINE # 600
0881 7B01              MOV     R3,#01H
0883 7A00        R     MOV     R2,#HIGH startup_str
0885 7900        R     MOV     R1,#LOW startup_str
0887 C003              PUSH    AR3
0889 C002              PUSH    AR2
088B C001              PUSH    AR1
088D 7BFF              MOV     R3,#0FFH
088F 7A00        R     MOV     R2,#HIGH ?SC_6
0891 7900        R     MOV     R1,#LOW ?SC_6
0893 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0896 120000      E     LCALL   ?C?PSTXDATA
0899 D001              POP     AR1
089B D002              POP     AR2
089D D003              POP     AR3
089F 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 601
08A2 900000      R     MOV     DPTR,#string_lenght
08A5 741B              MOV     A,#01BH
08A7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 602
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 78  

08A8         ?C0103:
                                           ; SOURCE LINE # 603
08A8 900000      R     MOV     DPTR,#string_lenght
08AB E0                MOVX    A,@DPTR
08AC FF                MOV     R7,A
08AD 7E00              MOV     R6,#00H
08AF 8E00        R     MOV     i,R6
08B1 8F00        R     MOV     i+01H,R7
08B3         ?C0104:
08B3 E500        R     MOV     A,i+01H
08B5 4500        R     ORL     A,i
08B7 6044              JZ      ?C0105
                                           ; SOURCE LINE # 604
08B9 900000      R     MOV     DPTR,#string_lenght
08BC E0                MOVX    A,@DPTR
08BD FF                MOV     R7,A
08BE 7E00              MOV     R6,#00H
08C0 C3                CLR     C
08C1 EF                MOV     A,R7
08C2 9500        R     SUBB    A,i+01H
08C4 FF                MOV     R7,A
08C5 EE                MOV     A,R6
08C6 9500        R     SUBB    A,i
08C8 FE                MOV     R6,A
08C9 7400        R     MOV     A,#LOW startup_str
08CB 2F                ADD     A,R7
08CC F582              MOV     DPL,A
08CE 7400        R     MOV     A,#HIGH startup_str
08D0 3E                ADDC    A,R6
08D1 F583              MOV     DPH,A
08D3 E0                MOVX    A,@DPTR
08D4 FF                MOV     R7,A
08D5 900000      R     MOV     DPTR,#string_lenght
08D8 E0                MOVX    A,@DPTR
08D9 FE                MOV     R6,A
08DA EE                MOV     A,R6
08DB FD                MOV     R5,A
08DC 7C00              MOV     R4,#00H
08DE C3                CLR     C
08DF ED                MOV     A,R5
08E0 9500        R     SUBB    A,i+01H
08E2 FD                MOV     R5,A
08E3 EC                MOV     A,R4
08E4 9500        R     SUBB    A,i
08E6 FC                MOV     R4,A
08E7 7400        R     MOV     A,#LOW packet_data+09BH
08E9 2D                ADD     A,R5
08EA F582              MOV     DPL,A
08EC 7400        R     MOV     A,#HIGH packet_data+09BH
08EE 3C                ADDC    A,R4
08EF F583              MOV     DPH,A
08F1 EF                MOV     A,R7
08F2 F0                MOVX    @DPTR,A
08F3 E500        R     MOV     A,i+01H
08F5 1500        R     DEC     i+01H
08F7 7002              JNZ     ?C0405
08F9 1500        R     DEC     i
08FB         ?C0405:
08FB 80B6              SJMP    ?C0104
08FD         ?C0105:
                                           ; SOURCE LINE # 606
08FD 900000      R     MOV     DPTR,#string_lenght
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 79  

0900 E0                MOVX    A,@DPTR
0901 FF                MOV     R7,A
0902 7400        R     MOV     A,#LOW packet_data+09BH
0904 2F                ADD     A,R7
0905 F582              MOV     DPL,A
0907 E4                CLR     A
0908 3400        R     ADDC    A,#HIGH packet_data+09BH
090A F583              MOV     DPH,A
090C 7403              MOV     A,#03H
090E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 610
090F 900000      R     MOV     DPTR,#packet_data+0CAH
0912 E4                CLR     A
0913 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 611
0914 900000      R     MOV     DPTR,#packet_data+0CBH
0917 7401              MOV     A,#01H
0919 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 612
091A 900000      E     MOV     DPTR,#c_mem+035H
091D E0                MOVX    A,@DPTR
091E FF                MOV     R7,A
091F 900000      R     MOV     DPTR,#packet_data+0CCH
0922 EF                MOV     A,R7
0923 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 613
0924 900000      E     MOV     DPTR,#c_mem+035H
0927 E0                MOVX    A,@DPTR
0928 FF                MOV     R7,A
0929 EF                MOV     A,R7
092A 120000      E     LCALL   ?C?CCASE
092D 0000        R     DW      ?C0108
092F 00                DB      00H
0930 0000        R     DW      ?C0109
0932 01                DB      01H
0933 0000              DW      00H
0935 0000        R     DW      ?C0107
                                           ; SOURCE LINE # 614
0937         ?C0108:
                                           ; SOURCE LINE # 615
0937 7B01              MOV     R3,#01H
0939 7A00        R     MOV     R2,#HIGH input_str
093B 7900        R     MOV     R1,#LOW input_str
093D C003              PUSH    AR3
093F C002              PUSH    AR2
0941 C001              PUSH    AR1
0943 7BFF              MOV     R3,#0FFH
0945 7A00        R     MOV     R2,#HIGH ?SC_11
0947 7900        R     MOV     R1,#LOW ?SC_11
0949 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
094C 120000      E     LCALL   ?C?PSTXDATA
094F D001              POP     AR1
0951 D002              POP     AR2
0953 D003              POP     AR3
0955 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 616
0958 900000      R     MOV     DPTR,#string_lenght
095B 7414              MOV     A,#014H
095D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 617
095E 8027              SJMP    ?C0107
                                           ; SOURCE LINE # 618
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 80  

0960         ?C0109:
                                           ; SOURCE LINE # 619
0960 7B01              MOV     R3,#01H
0962 7A00        R     MOV     R2,#HIGH input_str
0964 7900        R     MOV     R1,#LOW input_str
0966 C003              PUSH    AR3
0968 C002              PUSH    AR2
096A C001              PUSH    AR1
096C 7BFF              MOV     R3,#0FFH
096E 7A00        R     MOV     R2,#HIGH ?SC_17
0970 7900        R     MOV     R1,#LOW ?SC_17
0972 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0975 120000      E     LCALL   ?C?PSTXDATA
0978 D001              POP     AR1
097A D002              POP     AR2
097C D003              POP     AR3
097E 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 620
0981 900000      R     MOV     DPTR,#string_lenght
0984 741A              MOV     A,#01AH
0986 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 621
                                           ; SOURCE LINE # 622
0987         ?C0107:
                                           ; SOURCE LINE # 623
0987 900000      R     MOV     DPTR,#string_lenght
098A E0                MOVX    A,@DPTR
098B FF                MOV     R7,A
098C 7E00              MOV     R6,#00H
098E 8E00        R     MOV     i,R6
0990 8F00        R     MOV     i+01H,R7
0992         ?C0110:
0992 E500        R     MOV     A,i+01H
0994 4500        R     ORL     A,i
0996 6044              JZ      ?C0111
                                           ; SOURCE LINE # 624
0998 900000      R     MOV     DPTR,#string_lenght
099B E0                MOVX    A,@DPTR
099C FF                MOV     R7,A
099D 7E00              MOV     R6,#00H
099F C3                CLR     C
09A0 EF                MOV     A,R7
09A1 9500        R     SUBB    A,i+01H
09A3 FF                MOV     R7,A
09A4 EE                MOV     A,R6
09A5 9500        R     SUBB    A,i
09A7 FE                MOV     R6,A
09A8 7400        R     MOV     A,#LOW input_str
09AA 2F                ADD     A,R7
09AB F582              MOV     DPL,A
09AD 7400        R     MOV     A,#HIGH input_str
09AF 3E                ADDC    A,R6
09B0 F583              MOV     DPH,A
09B2 E0                MOVX    A,@DPTR
09B3 FF                MOV     R7,A
09B4 900000      R     MOV     DPTR,#string_lenght
09B7 E0                MOVX    A,@DPTR
09B8 FE                MOV     R6,A
09B9 EE                MOV     A,R6
09BA FD                MOV     R5,A
09BB 7C00              MOV     R4,#00H
09BD C3                CLR     C
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 81  

09BE ED                MOV     A,R5
09BF 9500        R     SUBB    A,i+01H
09C1 FD                MOV     R5,A
09C2 EC                MOV     A,R4
09C3 9500        R     SUBB    A,i
09C5 FC                MOV     R4,A
09C6 7400        R     MOV     A,#LOW packet_data+0CDH
09C8 2D                ADD     A,R5
09C9 F582              MOV     DPL,A
09CB 7400        R     MOV     A,#HIGH packet_data+0CDH
09CD 3C                ADDC    A,R4
09CE F583              MOV     DPH,A
09D0 EF                MOV     A,R7
09D1 F0                MOVX    @DPTR,A
09D2 E500        R     MOV     A,i+01H
09D4 1500        R     DEC     i+01H
09D6 7002              JNZ     ?C0406
09D8 1500        R     DEC     i
09DA         ?C0406:
09DA 80B6              SJMP    ?C0110
09DC         ?C0111:
                                           ; SOURCE LINE # 626
09DC 900000      R     MOV     DPTR,#string_lenght
09DF E0                MOVX    A,@DPTR
09E0 FF                MOV     R7,A
09E1 7400        R     MOV     A,#LOW packet_data+0CDH
09E3 2F                ADD     A,R7
09E4 F582              MOV     DPL,A
09E6 E4                CLR     A
09E7 3400        R     ADDC    A,#HIGH packet_data+0CDH
09E9 F583              MOV     DPH,A
09EB 7401              MOV     A,#01H
09ED F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 630
09EE 900000      R     MOV     DPTR,#packet_data+0FCH
09F1 E4                CLR     A
09F2 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 631
09F3 900000      R     MOV     DPTR,#packet_data+0FDH
09F6 7401              MOV     A,#01H
09F8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 632
09F9 900000      E     MOV     DPTR,#c_mem+036H
09FC E0                MOVX    A,@DPTR
09FD FF                MOV     R7,A
09FE 900000      R     MOV     DPTR,#packet_data+0FEH
0A01 EF                MOV     A,R7
0A02 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 633
0A03 900000      E     MOV     DPTR,#c_mem+036H
0A06 E0                MOVX    A,@DPTR
0A07 FF                MOV     R7,A
0A08 EF                MOV     A,R7
0A09 120000      E     LCALL   ?C?CCASE
0A0C 0000        R     DW      ?C0114
0A0E 00                DB      00H
0A0F 0000        R     DW      ?C0115
0A11 01                DB      01H
0A12 0000        R     DW      ?C0116
0A14 02                DB      02H
0A15 0000        R     DW      ?C0117
0A17 03                DB      03H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 82  

0A18 0000              DW      00H
0A1A 0000        R     DW      ?C0113
                                           ; SOURCE LINE # 634
0A1C         ?C0114:
                                           ; SOURCE LINE # 635
0A1C 7B01              MOV     R3,#01H
0A1E 7A00        R     MOV     R2,#HIGH contr_str
0A20 7900        R     MOV     R1,#LOW contr_str
0A22 C003              PUSH    AR3
0A24 C002              PUSH    AR2
0A26 C001              PUSH    AR1
0A28 7BFF              MOV     R3,#0FFH
0A2A 7A00        R     MOV     R2,#HIGH ?SC_29
0A2C 7900        R     MOV     R1,#LOW ?SC_29
0A2E 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0A31 120000      E     LCALL   ?C?PSTXDATA
0A34 D001              POP     AR1
0A36 D002              POP     AR2
0A38 D003              POP     AR3
0A3A 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 636
0A3D 900000      R     MOV     DPTR,#string_lenght
0A40 741B              MOV     A,#01BH
0A42 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 637
0A43 8079              SJMP    ?C0113
                                           ; SOURCE LINE # 638
0A45         ?C0115:
                                           ; SOURCE LINE # 639
0A45 7B01              MOV     R3,#01H
0A47 7A00        R     MOV     R2,#HIGH contr_str
0A49 7900        R     MOV     R1,#LOW contr_str
0A4B C003              PUSH    AR3
0A4D C002              PUSH    AR2
0A4F C001              PUSH    AR1
0A51 7BFF              MOV     R3,#0FFH
0A53 7A00        R     MOV     R2,#HIGH ?SC_40
0A55 7900        R     MOV     R1,#LOW ?SC_40
0A57 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0A5A 120000      E     LCALL   ?C?PSTXDATA
0A5D D001              POP     AR1
0A5F D002              POP     AR2
0A61 D003              POP     AR3
0A63 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 640
0A66 900000      R     MOV     DPTR,#string_lenght
0A69 7416              MOV     A,#016H
0A6B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 641
0A6C 8050              SJMP    ?C0113
                                           ; SOURCE LINE # 642
0A6E         ?C0116:
                                           ; SOURCE LINE # 643
0A6E 7B01              MOV     R3,#01H
0A70 7A00        R     MOV     R2,#HIGH contr_str
0A72 7900        R     MOV     R1,#LOW contr_str
0A74 C003              PUSH    AR3
0A76 C002              PUSH    AR2
0A78 C001              PUSH    AR1
0A7A 7BFF              MOV     R3,#0FFH
0A7C 7A00        R     MOV     R2,#HIGH ?SC_46
0A7E 7900        R     MOV     R1,#LOW ?SC_46
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 83  

0A80 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0A83 120000      E     LCALL   ?C?PSTXDATA
0A86 D001              POP     AR1
0A88 D002              POP     AR2
0A8A D003              POP     AR3
0A8C 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 644
0A8F 900000      R     MOV     DPTR,#string_lenght
0A92 741A              MOV     A,#01AH
0A94 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 645
0A95 8027              SJMP    ?C0113
                                           ; SOURCE LINE # 646
0A97         ?C0117:
                                           ; SOURCE LINE # 647
0A97 7B01              MOV     R3,#01H
0A99 7A00        R     MOV     R2,#HIGH contr_str
0A9B 7900        R     MOV     R1,#LOW contr_str
0A9D C003              PUSH    AR3
0A9F C002              PUSH    AR2
0AA1 C001              PUSH    AR1
0AA3 7BFF              MOV     R3,#0FFH
0AA5 7A00        R     MOV     R2,#HIGH ?SC_56
0AA7 7900        R     MOV     R1,#LOW ?SC_56
0AA9 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0AAC 120000      E     LCALL   ?C?PSTXDATA
0AAF D001              POP     AR1
0AB1 D002              POP     AR2
0AB3 D003              POP     AR3
0AB5 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 648
0AB8 900000      R     MOV     DPTR,#string_lenght
0ABB 7427              MOV     A,#027H
0ABD F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 649
                                           ; SOURCE LINE # 658
0ABE         ?C0113:
                                           ; SOURCE LINE # 659
0ABE 900000      R     MOV     DPTR,#string_lenght
0AC1 E0                MOVX    A,@DPTR
0AC2 FF                MOV     R7,A
0AC3 7E00              MOV     R6,#00H
0AC5 8E00        R     MOV     i,R6
0AC7 8F00        R     MOV     i+01H,R7
0AC9         ?C0118:
0AC9 E500        R     MOV     A,i+01H
0ACB 4500        R     ORL     A,i
0ACD 6044              JZ      ?C0119
                                           ; SOURCE LINE # 660
0ACF 900000      R     MOV     DPTR,#string_lenght
0AD2 E0                MOVX    A,@DPTR
0AD3 FF                MOV     R7,A
0AD4 7E00              MOV     R6,#00H
0AD6 C3                CLR     C
0AD7 EF                MOV     A,R7
0AD8 9500        R     SUBB    A,i+01H
0ADA FF                MOV     R7,A
0ADB EE                MOV     A,R6
0ADC 9500        R     SUBB    A,i
0ADE FE                MOV     R6,A
0ADF 7400        R     MOV     A,#LOW contr_str
0AE1 2F                ADD     A,R7
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 84  

0AE2 F582              MOV     DPL,A
0AE4 7400        R     MOV     A,#HIGH contr_str
0AE6 3E                ADDC    A,R6
0AE7 F583              MOV     DPH,A
0AE9 E0                MOVX    A,@DPTR
0AEA FF                MOV     R7,A
0AEB 900000      R     MOV     DPTR,#string_lenght
0AEE E0                MOVX    A,@DPTR
0AEF FE                MOV     R6,A
0AF0 EE                MOV     A,R6
0AF1 FD                MOV     R5,A
0AF2 7C00              MOV     R4,#00H
0AF4 C3                CLR     C
0AF5 ED                MOV     A,R5
0AF6 9500        R     SUBB    A,i+01H
0AF8 FD                MOV     R5,A
0AF9 EC                MOV     A,R4
0AFA 9500        R     SUBB    A,i
0AFC FC                MOV     R4,A
0AFD 7400        R     MOV     A,#LOW packet_data+0FFH
0AFF 2D                ADD     A,R5
0B00 F582              MOV     DPL,A
0B02 7400        R     MOV     A,#HIGH packet_data+0FFH
0B04 3C                ADDC    A,R4
0B05 F583              MOV     DPH,A
0B07 EF                MOV     A,R7
0B08 F0                MOVX    @DPTR,A
0B09 E500        R     MOV     A,i+01H
0B0B 1500        R     DEC     i+01H
0B0D 7002              JNZ     ?C0407
0B0F 1500        R     DEC     i
0B11         ?C0407:
0B11 80B6              SJMP    ?C0118
0B13         ?C0119:
                                           ; SOURCE LINE # 662
0B13 900000      R     MOV     DPTR,#string_lenght
0B16 E0                MOVX    A,@DPTR
0B17 FF                MOV     R7,A
0B18 7400        R     MOV     A,#LOW packet_data+0FFH
0B1A 2F                ADD     A,R7
0B1B F582              MOV     DPL,A
0B1D E4                CLR     A
0B1E 3400        R     ADDC    A,#HIGH packet_data+0FFH
0B20 F583              MOV     DPH,A
0B22 7402              MOV     A,#02H
0B24 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 666
0B25 900000      R     MOV     DPTR,#packet_data+012EH
0B28 7402              MOV     A,#02H
0B2A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 667
0B2B 900000      R     MOV     DPTR,#packet_data+012FH
0B2E 7402              MOV     A,#02H
0B30 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 668
0B31 750000      R     MOV     i,#00H
0B34 750000      R     MOV     i+01H,#00H
0B37         ?C0121:
0B37 C3                CLR     C
0B38 E500        R     MOV     A,i+01H
0B3A 9402              SUBB    A,#02H
0B3C E500        R     MOV     A,i
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 85  

0B3E 9400              SUBB    A,#00H
0B40 502A              JNC     ?C0122
                                           ; SOURCE LINE # 669
0B42 AE00        R     MOV     R6,i
0B44 AF00        R     MOV     R7,i+01H
0B46 7400        E     MOV     A,#LOW c_mem+037H
0B48 2F                ADD     A,R7
0B49 F582              MOV     DPL,A
0B4B 7400        E     MOV     A,#HIGH c_mem+037H
0B4D 3E                ADDC    A,R6
0B4E F583              MOV     DPH,A
0B50 E0                MOVX    A,@DPTR
0B51 FF                MOV     R7,A
0B52 AC00        R     MOV     R4,i
0B54 AD00        R     MOV     R5,i+01H
0B56 7400        R     MOV     A,#LOW packet_data+0130H
0B58 2D                ADD     A,R5
0B59 F582              MOV     DPL,A
0B5B 7400        R     MOV     A,#HIGH packet_data+0130H
0B5D 3C                ADDC    A,R4
0B5E F583              MOV     DPH,A
0B60 EF                MOV     A,R7
0B61 F0                MOVX    @DPTR,A
0B62 0500        R     INC     i+01H
0B64 E500        R     MOV     A,i+01H
0B66 7002              JNZ     ?C0408
0B68 0500        R     INC     i
0B6A         ?C0408:
0B6A 80CB              SJMP    ?C0121
0B6C         ?C0122:
                                           ; SOURCE LINE # 670
0B6C AF00        R     MOV     R7,res_str_len
0B6E 7E00              MOV     R6,#00H
0B70 8E00        R     MOV     i,R6
0B72 8F00        R     MOV     i+01H,R7
0B74         ?C0124:
0B74 E500        R     MOV     A,i+01H
0B76 4500        R     ORL     A,i
0B78 603E              JZ      ?C0125
                                           ; SOURCE LINE # 671
0B7A AF00        R     MOV     R7,res_str_len
0B7C 7E00              MOV     R6,#00H
0B7E C3                CLR     C
0B7F EF                MOV     A,R7
0B80 9500        R     SUBB    A,i+01H
0B82 FF                MOV     R7,A
0B83 EE                MOV     A,R6
0B84 9500        R     SUBB    A,i
0B86 FE                MOV     R6,A
0B87 7400        R     MOV     A,#LOW res_str
0B89 2F                ADD     A,R7
0B8A F582              MOV     DPL,A
0B8C 7400        R     MOV     A,#HIGH res_str
0B8E 3E                ADDC    A,R6
0B8F F583              MOV     DPH,A
0B91 E0                MOVX    A,@DPTR
0B92 FF                MOV     R7,A
0B93 AE00        R     MOV     R6,res_str_len
0B95 EE                MOV     A,R6
0B96 FD                MOV     R5,A
0B97 7C00              MOV     R4,#00H
0B99 C3                CLR     C
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 86  

0B9A ED                MOV     A,R5
0B9B 9500        R     SUBB    A,i+01H
0B9D FD                MOV     R5,A
0B9E EC                MOV     A,R4
0B9F 9500        R     SUBB    A,i
0BA1 FC                MOV     R4,A
0BA2 7400        R     MOV     A,#LOW packet_data+0132H
0BA4 2D                ADD     A,R5
0BA5 F582              MOV     DPL,A
0BA7 7400        R     MOV     A,#HIGH packet_data+0132H
0BA9 3C                ADDC    A,R4
0BAA F583              MOV     DPH,A
0BAC EF                MOV     A,R7
0BAD F0                MOVX    @DPTR,A
0BAE E500        R     MOV     A,i+01H
0BB0 1500        R     DEC     i+01H
0BB2 7002              JNZ     ?C0409
0BB4 1500        R     DEC     i
0BB6         ?C0409:
0BB6 80BC              SJMP    ?C0124
0BB8         ?C0125:
                                           ; SOURCE LINE # 692
0BB8 900000      R     MOV     DPTR,#packet_data+0160H
0BBB 7403              MOV     A,#03H
0BBD F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 693
0BBE 900000      R     MOV     DPTR,#packet_data+0161H
0BC1 7402              MOV     A,#02H
0BC3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 694
0BC4 750000      R     MOV     i,#00H
0BC7 750000      R     MOV     i+01H,#00H
0BCA         ?C0127:
0BCA C3                CLR     C
0BCB E500        R     MOV     A,i+01H
0BCD 9402              SUBB    A,#02H
0BCF E500        R     MOV     A,i
0BD1 9400              SUBB    A,#00H
0BD3 5056              JNC     ?C0128
                                           ; SOURCE LINE # 695
0BD5 E500        R     MOV     A,i+01H
0BD7 AE00        R     MOV     R6,i
0BD9 7802              MOV     R0,#02H
0BDB         ?C0410:
0BDB C3                CLR     C
0BDC 33                RLC     A
0BDD CE                XCH     A,R6
0BDE 33                RLC     A
0BDF CE                XCH     A,R6
0BE0 D8F9              DJNZ    R0,?C0410
0BE2 FF                MOV     R7,A
0BE3 7400        E     MOV     A,#LOW c_mem+039H
0BE5 2F                ADD     A,R7
0BE6 F582              MOV     DPL,A
0BE8 7400        E     MOV     A,#HIGH c_mem+039H
0BEA 3E                ADDC    A,R6
0BEB F583              MOV     DPH,A
0BED 120000      E     LCALL   ?C?LLDXDATA
0BF0 AA00        R     MOV     R2,i
0BF2 AB00        R     MOV     R3,i+01H
0BF4 7400        E     MOV     A,#LOW c_mem+037H
0BF6 2B                ADD     A,R3
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 87  

0BF7 F582              MOV     DPL,A
0BF9 7400        E     MOV     A,#HIGH c_mem+037H
0BFB 3A                ADDC    A,R2
0BFC F583              MOV     DPH,A
0BFE E0                MOVX    A,@DPTR
0BFF F9                MOV     R1,A
0C00 A801              MOV     R0,AR1
0C02 120000      E     LCALL   ?C?SLSHR
0C05 AD07              MOV     R5,AR7
0C07 AC06              MOV     R4,AR6
0C09 E500        R     MOV     A,i+01H
0C0B 25E0              ADD     A,ACC
0C0D FF                MOV     R7,A
0C0E E500        R     MOV     A,i
0C10 33                RLC     A
0C11 FE                MOV     R6,A
0C12 7400        R     MOV     A,#LOW packet_data+0162H
0C14 2F                ADD     A,R7
0C15 F582              MOV     DPL,A
0C17 7400        R     MOV     A,#HIGH packet_data+0162H
0C19 3E                ADDC    A,R6
0C1A F583              MOV     DPH,A
0C1C EC                MOV     A,R4
0C1D F0                MOVX    @DPTR,A
0C1E A3                INC     DPTR
0C1F ED                MOV     A,R5
0C20 F0                MOVX    @DPTR,A
0C21 0500        R     INC     i+01H
0C23 E500        R     MOV     A,i+01H
0C25 7002              JNZ     ?C0411
0C27 0500        R     INC     i
0C29         ?C0411:
0C29 809F              SJMP    ?C0127
0C2B         ?C0128:
                                           ; SOURCE LINE # 696
0C2B AF00        R     MOV     R7,m_off_str_len
0C2D 7E00              MOV     R6,#00H
0C2F 8E00        R     MOV     i,R6
0C31 8F00        R     MOV     i+01H,R7
0C33         ?C0130:
0C33 E500        R     MOV     A,i+01H
0C35 4500        R     ORL     A,i
0C37 603E              JZ      ?C0131
                                           ; SOURCE LINE # 697
0C39 AF00        R     MOV     R7,m_off_str_len
0C3B 7E00              MOV     R6,#00H
0C3D C3                CLR     C
0C3E EF                MOV     A,R7
0C3F 9500        R     SUBB    A,i+01H
0C41 FF                MOV     R7,A
0C42 EE                MOV     A,R6
0C43 9500        R     SUBB    A,i
0C45 FE                MOV     R6,A
0C46 7400        R     MOV     A,#LOW m_off_str
0C48 2F                ADD     A,R7
0C49 F582              MOV     DPL,A
0C4B 7400        R     MOV     A,#HIGH m_off_str
0C4D 3E                ADDC    A,R6
0C4E F583              MOV     DPH,A
0C50 E0                MOVX    A,@DPTR
0C51 FF                MOV     R7,A
0C52 AE00        R     MOV     R6,m_off_str_len
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 88  

0C54 EE                MOV     A,R6
0C55 FD                MOV     R5,A
0C56 7C00              MOV     R4,#00H
0C58 C3                CLR     C
0C59 ED                MOV     A,R5
0C5A 9500        R     SUBB    A,i+01H
0C5C FD                MOV     R5,A
0C5D EC                MOV     A,R4
0C5E 9500        R     SUBB    A,i
0C60 FC                MOV     R4,A
0C61 7400        R     MOV     A,#LOW packet_data+0166H
0C63 2D                ADD     A,R5
0C64 F582              MOV     DPL,A
0C66 7400        R     MOV     A,#HIGH packet_data+0166H
0C68 3C                ADDC    A,R4
0C69 F583              MOV     DPH,A
0C6B EF                MOV     A,R7
0C6C F0                MOVX    @DPTR,A
0C6D E500        R     MOV     A,i+01H
0C6F 1500        R     DEC     i+01H
0C71 7002              JNZ     ?C0412
0C73 1500        R     DEC     i
0C75         ?C0412:
0C75 80BC              SJMP    ?C0130
0C77         ?C0131:
                                           ; SOURCE LINE # 701
0C77 900000      R     MOV     DPTR,#packet_data+0192H
0C7A 7407              MOV     A,#07H
0C7C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 702
0C7D 900000      R     MOV     DPTR,#packet_data+0193H
0C80 7402              MOV     A,#02H
0C82 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 703
0C83 750000      R     MOV     i,#00H
0C86 750000      R     MOV     i+01H,#00H
0C89         ?C0133:
0C89 C3                CLR     C
0C8A E500        R     MOV     A,i+01H
0C8C 9402              SUBB    A,#02H
0C8E E500        R     MOV     A,i
0C90 9400              SUBB    A,#00H
0C92 5050              JNC     ?C0134
                                           ; SOURCE LINE # 704
0C94 E500        R     MOV     A,i+01H
0C96 AE00        R     MOV     R6,i
0C98 7802              MOV     R0,#02H
0C9A         ?C0413:
0C9A C3                CLR     C
0C9B 33                RLC     A
0C9C CE                XCH     A,R6
0C9D 33                RLC     A
0C9E CE                XCH     A,R6
0C9F D8F9              DJNZ    R0,?C0413
0CA1 FF                MOV     R7,A
0CA2 7400        E     MOV     A,#LOW c_mem+041H
0CA4 2F                ADD     A,R7
0CA5 F582              MOV     DPL,A
0CA7 7400        E     MOV     A,#HIGH c_mem+041H
0CA9 3E                ADDC    A,R6
0CAA F583              MOV     DPH,A
0CAC 120000      E     LCALL   ?C?LLDXDATA
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 89  

0CAF C004              PUSH    AR4
0CB1 C005              PUSH    AR5
0CB3 C006              PUSH    AR6
0CB5 C007              PUSH    AR7
0CB7 E500        R     MOV     A,i+01H
0CB9 AE00        R     MOV     R6,i
0CBB 7802              MOV     R0,#02H
0CBD         ?C0414:
0CBD C3                CLR     C
0CBE 33                RLC     A
0CBF CE                XCH     A,R6
0CC0 33                RLC     A
0CC1 CE                XCH     A,R6
0CC2 D8F9              DJNZ    R0,?C0414
0CC4 FF                MOV     R7,A
0CC5 7400        R     MOV     A,#LOW packet_data+0194H
0CC7 2F                ADD     A,R7
0CC8 F582              MOV     DPL,A
0CCA 7400        R     MOV     A,#HIGH packet_data+0194H
0CCC 3E                ADDC    A,R6
0CCD F583              MOV     DPH,A
0CCF D007              POP     AR7
0CD1 D006              POP     AR6
0CD3 D005              POP     AR5
0CD5 D004              POP     AR4
0CD7 120000      E     LCALL   ?C?LSTXDATA
0CDA 0500        R     INC     i+01H
0CDC E500        R     MOV     A,i+01H
0CDE 7002              JNZ     ?C0415
0CE0 0500        R     INC     i
0CE2         ?C0415:
0CE2 80A5              SJMP    ?C0133
0CE4         ?C0134:
                                           ; SOURCE LINE # 705
0CE4 750000      R     MOV     i,#00H
0CE7 750000      R     MOV     i+01H,#00H
0CEA         ?C0136:
0CEA 7B01              MOV     R3,#01H
0CEC 7A00        R     MOV     R2,#HIGH mult_str
0CEE 7900        R     MOV     R1,#LOW mult_str
0CF0 120000      E     LCALL   _strlen
0CF3 C3                CLR     C
0CF4 E500        R     MOV     A,i+01H
0CF6 9F                SUBB    A,R7
0CF7 E500        R     MOV     A,i
0CF9 9E                SUBB    A,R6
0CFA 502A              JNC     ?C0137
                                           ; SOURCE LINE # 706
0CFC AE00        R     MOV     R6,i
0CFE AF00        R     MOV     R7,i+01H
0D00 7400        R     MOV     A,#LOW mult_str
0D02 2F                ADD     A,R7
0D03 F582              MOV     DPL,A
0D05 7400        R     MOV     A,#HIGH mult_str
0D07 3E                ADDC    A,R6
0D08 F583              MOV     DPH,A
0D0A E0                MOVX    A,@DPTR
0D0B FF                MOV     R7,A
0D0C AC00        R     MOV     R4,i
0D0E AD00        R     MOV     R5,i+01H
0D10 7400        R     MOV     A,#LOW packet_data+019CH
0D12 2D                ADD     A,R5
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 90  

0D13 F582              MOV     DPL,A
0D15 7400        R     MOV     A,#HIGH packet_data+019CH
0D17 3C                ADDC    A,R4
0D18 F583              MOV     DPH,A
0D1A EF                MOV     A,R7
0D1B F0                MOVX    @DPTR,A
0D1C 0500        R     INC     i+01H
0D1E E500        R     MOV     A,i+01H
0D20 7002              JNZ     ?C0416
0D22 0500        R     INC     i
0D24         ?C0416:
0D24 80C4              SJMP    ?C0136
0D26         ?C0137:
                                           ; SOURCE LINE # 710
0D26 900000      R     MOV     DPTR,#packet_data+01C4H
0D29 E4                CLR     A
0D2A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 711
0D2B 900000      R     MOV     DPTR,#packet_data+01C5H
0D2E 7401              MOV     A,#01H
0D30 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 712
0D31 900000      E     MOV     DPTR,#c_mem+049H
0D34 E0                MOVX    A,@DPTR
0D35 FF                MOV     R7,A
0D36 900000      R     MOV     DPTR,#packet_data+01C6H
0D39 EF                MOV     A,R7
0D3A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 713
0D3B 900000      E     MOV     DPTR,#c_mem+049H
0D3E E0                MOVX    A,@DPTR
0D3F FF                MOV     R7,A
0D40 EF                MOV     A,R7
0D41 6029              JZ      ?C0139
                                           ; SOURCE LINE # 714
0D43 7B01              MOV     R3,#01H
0D45 7A00        R     MOV     R2,#HIGH pos_lim_flag_str
0D47 7900        R     MOV     R1,#LOW pos_lim_flag_str
0D49 C003              PUSH    AR3
0D4B C002              PUSH    AR2
0D4D C001              PUSH    AR1
0D4F 7BFF              MOV     R3,#0FFH
0D51 7A00        R     MOV     R2,#HIGH ?SC_0
0D53 7900        R     MOV     R1,#LOW ?SC_0
0D55 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0D58 120000      E     LCALL   ?C?PSTXDATA
0D5B D001              POP     AR1
0D5D D002              POP     AR2
0D5F D003              POP     AR3
0D61 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 715
0D64 900000      R     MOV     DPTR,#string_lenght
0D67 741C              MOV     A,#01CH
0D69 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 716
0D6A 8027              SJMP    ?C0140
0D6C         ?C0139:
                                           ; SOURCE LINE # 717
                                           ; SOURCE LINE # 718
0D6C 7B01              MOV     R3,#01H
0D6E 7A00        R     MOV     R2,#HIGH pos_lim_flag_str
0D70 7900        R     MOV     R1,#LOW pos_lim_flag_str
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 91  

0D72 C003              PUSH    AR3
0D74 C002              PUSH    AR2
0D76 C001              PUSH    AR1
0D78 7BFF              MOV     R3,#0FFH
0D7A 7A00        R     MOV     R2,#HIGH ?SC_6
0D7C 7900        R     MOV     R1,#LOW ?SC_6
0D7E 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0D81 120000      E     LCALL   ?C?PSTXDATA
0D84 D001              POP     AR1
0D86 D002              POP     AR2
0D88 D003              POP     AR3
0D8A 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 719
0D8D 900000      R     MOV     DPTR,#string_lenght
0D90 741B              MOV     A,#01BH
0D92 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 720
0D93         ?C0140:
                                           ; SOURCE LINE # 721
0D93 900000      R     MOV     DPTR,#string_lenght
0D96 E0                MOVX    A,@DPTR
0D97 FF                MOV     R7,A
0D98 7E00              MOV     R6,#00H
0D9A 8E00        R     MOV     i,R6
0D9C 8F00        R     MOV     i+01H,R7
0D9E         ?C0141:
0D9E E500        R     MOV     A,i+01H
0DA0 4500        R     ORL     A,i
0DA2 6044              JZ      ?C0142
                                           ; SOURCE LINE # 722
0DA4 900000      R     MOV     DPTR,#string_lenght
0DA7 E0                MOVX    A,@DPTR
0DA8 FF                MOV     R7,A
0DA9 7E00              MOV     R6,#00H
0DAB C3                CLR     C
0DAC EF                MOV     A,R7
0DAD 9500        R     SUBB    A,i+01H
0DAF FF                MOV     R7,A
0DB0 EE                MOV     A,R6
0DB1 9500        R     SUBB    A,i
0DB3 FE                MOV     R6,A
0DB4 7400        R     MOV     A,#LOW pos_lim_flag_str
0DB6 2F                ADD     A,R7
0DB7 F582              MOV     DPL,A
0DB9 7400        R     MOV     A,#HIGH pos_lim_flag_str
0DBB 3E                ADDC    A,R6
0DBC F583              MOV     DPH,A
0DBE E0                MOVX    A,@DPTR
0DBF FF                MOV     R7,A
0DC0 900000      R     MOV     DPTR,#string_lenght
0DC3 E0                MOVX    A,@DPTR
0DC4 FE                MOV     R6,A
0DC5 EE                MOV     A,R6
0DC6 FD                MOV     R5,A
0DC7 7C00              MOV     R4,#00H
0DC9 C3                CLR     C
0DCA ED                MOV     A,R5
0DCB 9500        R     SUBB    A,i+01H
0DCD FD                MOV     R5,A
0DCE EC                MOV     A,R4
0DCF 9500        R     SUBB    A,i
0DD1 FC                MOV     R4,A
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 92  

0DD2 7400        R     MOV     A,#LOW packet_data+01C7H
0DD4 2D                ADD     A,R5
0DD5 F582              MOV     DPL,A
0DD7 7400        R     MOV     A,#HIGH packet_data+01C7H
0DD9 3C                ADDC    A,R4
0DDA F583              MOV     DPH,A
0DDC EF                MOV     A,R7
0DDD F0                MOVX    @DPTR,A
0DDE E500        R     MOV     A,i+01H
0DE0 1500        R     DEC     i+01H
0DE2 7002              JNZ     ?C0417
0DE4 1500        R     DEC     i
0DE6         ?C0417:
0DE6 80B6              SJMP    ?C0141
0DE8         ?C0142:
                                           ; SOURCE LINE # 724
0DE8 900000      R     MOV     DPTR,#string_lenght
0DEB E0                MOVX    A,@DPTR
0DEC FF                MOV     R7,A
0DED 7400        R     MOV     A,#LOW packet_data+01C7H
0DEF 2F                ADD     A,R7
0DF0 F582              MOV     DPL,A
0DF2 E4                CLR     A
0DF3 3400        R     ADDC    A,#HIGH packet_data+01C7H
0DF5 F583              MOV     DPH,A
0DF7 7403              MOV     A,#03H
0DF9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 728
0DFA 900000      R     MOV     DPTR,#packet_data+01F6H
0DFD 7405              MOV     A,#05H
0DFF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 729
0E00 900000      R     MOV     DPTR,#packet_data+01F7H
0E03 7404              MOV     A,#04H
0E05 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 730
0E06 750000      R     MOV     i,#00H
0E09 750000      R     MOV     i+01H,#00H
0E0C         ?C0144:
0E0C C3                CLR     C
0E0D E500        R     MOV     A,i+01H
0E0F 9402              SUBB    A,#02H
0E11 E500        R     MOV     A,i
0E13 9400              SUBB    A,#00H
0E15 4003              JC      $ + 5H
0E17 020000      R     LJMP    ?C0145
                                           ; SOURCE LINE # 731
0E1A E500        R     MOV     A,i+01H
0E1C AE00        R     MOV     R6,i
0E1E 7802              MOV     R0,#02H
0E20         ?C0418:
0E20 C3                CLR     C
0E21 33                RLC     A
0E22 CE                XCH     A,R6
0E23 33                RLC     A
0E24 CE                XCH     A,R6
0E25 D8F9              DJNZ    R0,?C0418
0E27 FF                MOV     R7,A
0E28 7400        E     MOV     A,#LOW c_mem+04AH
0E2A 2F                ADD     A,R7
0E2B F582              MOV     DPL,A
0E2D 7400        E     MOV     A,#HIGH c_mem+04AH
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 93  

0E2F 3E                ADDC    A,R6
0E30 F583              MOV     DPH,A
0E32 120000      E     LCALL   ?C?LLDXDATA
0E35 AA00        R     MOV     R2,i
0E37 AB00        R     MOV     R3,i+01H
0E39 7400        E     MOV     A,#LOW c_mem+037H
0E3B 2B                ADD     A,R3
0E3C F582              MOV     DPL,A
0E3E 7400        E     MOV     A,#HIGH c_mem+037H
0E40 3A                ADDC    A,R2
0E41 F583              MOV     DPH,A
0E43 E0                MOVX    A,@DPTR
0E44 F9                MOV     R1,A
0E45 A801              MOV     R0,AR1
0E47 120000      E     LCALL   ?C?SLSHR
0E4A C004              PUSH    AR4
0E4C C005              PUSH    AR5
0E4E C006              PUSH    AR6
0E50 C007              PUSH    AR7
0E52 E500        R     MOV     A,i+01H
0E54 AE00        R     MOV     R6,i
0E56 7803              MOV     R0,#03H
0E58         ?C0419:
0E58 C3                CLR     C
0E59 33                RLC     A
0E5A CE                XCH     A,R6
0E5B 33                RLC     A
0E5C CE                XCH     A,R6
0E5D D8F9              DJNZ    R0,?C0419
0E5F FF                MOV     R7,A
0E60 7400        R     MOV     A,#LOW packet_data+01F8H
0E62 2F                ADD     A,R7
0E63 F582              MOV     DPL,A
0E65 7400        R     MOV     A,#HIGH packet_data+01F8H
0E67 3E                ADDC    A,R6
0E68 F583              MOV     DPH,A
0E6A D007              POP     AR7
0E6C D006              POP     AR6
0E6E D005              POP     AR5
0E70 D004              POP     AR4
0E72 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 732
0E75 E500        R     MOV     A,i+01H
0E77 AE00        R     MOV     R6,i
0E79 7802              MOV     R0,#02H
0E7B         ?C0420:
0E7B C3                CLR     C
0E7C 33                RLC     A
0E7D CE                XCH     A,R6
0E7E 33                RLC     A
0E7F CE                XCH     A,R6
0E80 D8F9              DJNZ    R0,?C0420
0E82 FF                MOV     R7,A
0E83 7400        E     MOV     A,#LOW c_mem+052H
0E85 2F                ADD     A,R7
0E86 F582              MOV     DPL,A
0E88 7400        E     MOV     A,#HIGH c_mem+052H
0E8A 3E                ADDC    A,R6
0E8B F583              MOV     DPH,A
0E8D 120000      E     LCALL   ?C?LLDXDATA
0E90 AA00        R     MOV     R2,i
0E92 AB00        R     MOV     R3,i+01H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 94  

0E94 7400        E     MOV     A,#LOW c_mem+037H
0E96 2B                ADD     A,R3
0E97 F582              MOV     DPL,A
0E99 7400        E     MOV     A,#HIGH c_mem+037H
0E9B 3A                ADDC    A,R2
0E9C F583              MOV     DPH,A
0E9E E0                MOVX    A,@DPTR
0E9F F9                MOV     R1,A
0EA0 A801              MOV     R0,AR1
0EA2 120000      E     LCALL   ?C?SLSHR
0EA5 C004              PUSH    AR4
0EA7 C005              PUSH    AR5
0EA9 C006              PUSH    AR6
0EAB C007              PUSH    AR7
0EAD E500        R     MOV     A,i+01H
0EAF AE00        R     MOV     R6,i
0EB1 7803              MOV     R0,#03H
0EB3         ?C0421:
0EB3 C3                CLR     C
0EB4 33                RLC     A
0EB5 CE                XCH     A,R6
0EB6 33                RLC     A
0EB7 CE                XCH     A,R6
0EB8 D8F9              DJNZ    R0,?C0421
0EBA FF                MOV     R7,A
0EBB 7400        R     MOV     A,#LOW packet_data+01FCH
0EBD 2F                ADD     A,R7
0EBE F582              MOV     DPL,A
0EC0 7400        R     MOV     A,#HIGH packet_data+01FCH
0EC2 3E                ADDC    A,R6
0EC3 F583              MOV     DPH,A
0EC5 D007              POP     AR7
0EC7 D006              POP     AR6
0EC9 D005              POP     AR5
0ECB D004              POP     AR4
0ECD 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 733
0ED0 0500        R     INC     i+01H
0ED2 E500        R     MOV     A,i+01H
0ED4 7002              JNZ     ?C0422
0ED6 0500        R     INC     i
0ED8         ?C0422:
0ED8 020000      R     LJMP    ?C0144
0EDB         ?C0145:
                                           ; SOURCE LINE # 734
0EDB AF00        R     MOV     R7,pos_lim_str_len
0EDD 7E00              MOV     R6,#00H
0EDF 8E00        R     MOV     i,R6
0EE1 8F00        R     MOV     i+01H,R7
0EE3         ?C0147:
0EE3 E500        R     MOV     A,i+01H
0EE5 4500        R     ORL     A,i
0EE7 603E              JZ      ?C0148
                                           ; SOURCE LINE # 735
0EE9 AF00        R     MOV     R7,pos_lim_str_len
0EEB 7E00              MOV     R6,#00H
0EED C3                CLR     C
0EEE EF                MOV     A,R7
0EEF 9500        R     SUBB    A,i+01H
0EF1 FF                MOV     R7,A
0EF2 EE                MOV     A,R6
0EF3 9500        R     SUBB    A,i
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 95  

0EF5 FE                MOV     R6,A
0EF6 7400        R     MOV     A,#LOW pos_lim_str
0EF8 2F                ADD     A,R7
0EF9 F582              MOV     DPL,A
0EFB 7400        R     MOV     A,#HIGH pos_lim_str
0EFD 3E                ADDC    A,R6
0EFE F583              MOV     DPH,A
0F00 E0                MOVX    A,@DPTR
0F01 FF                MOV     R7,A
0F02 AE00        R     MOV     R6,pos_lim_str_len
0F04 EE                MOV     A,R6
0F05 FD                MOV     R5,A
0F06 7C00              MOV     R4,#00H
0F08 C3                CLR     C
0F09 ED                MOV     A,R5
0F0A 9500        R     SUBB    A,i+01H
0F0C FD                MOV     R5,A
0F0D EC                MOV     A,R4
0F0E 9500        R     SUBB    A,i
0F10 FC                MOV     R4,A
0F11 7400        R     MOV     A,#LOW packet_data+0208H
0F13 2D                ADD     A,R5
0F14 F582              MOV     DPL,A
0F16 7400        R     MOV     A,#HIGH packet_data+0208H
0F18 3C                ADDC    A,R4
0F19 F583              MOV     DPH,A
0F1B EF                MOV     A,R7
0F1C F0                MOVX    @DPTR,A
0F1D E500        R     MOV     A,i+01H
0F1F 1500        R     DEC     i+01H
0F21 7002              JNZ     ?C0423
0F23 1500        R     DEC     i
0F25         ?C0423:
0F25 80BC              SJMP    ?C0147
0F27         ?C0148:
                                           ; SOURCE LINE # 739
0F27 900000      R     MOV     DPTR,#packet_data+0228H
0F2A 7405              MOV     A,#05H
0F2C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 740
0F2D 900000      R     MOV     DPTR,#packet_data+0229H
0F30 7402              MOV     A,#02H
0F32 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 741
0F33 900000      E     MOV     DPTR,#c_mem+05EH
0F36 120000      E     LCALL   ?C?LLDXDATA
0F39 900000      R     MOV     DPTR,#packet_data+022AH
0F3C 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 742
0F3F 900000      E     MOV     DPTR,#c_mem+062H
0F42 120000      E     LCALL   ?C?LLDXDATA
0F45 900000      R     MOV     DPTR,#packet_data+022EH
0F48 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 743
0F4B 750000      R     MOV     i,#00H
0F4E 750000      R     MOV     i+01H,#00H
0F51         ?C0150:
0F51 7B01              MOV     R3,#01H
0F53 7A00        R     MOV     R2,#HIGH max_step_str
0F55 7900        R     MOV     R1,#LOW max_step_str
0F57 120000      E     LCALL   _strlen
0F5A C3                CLR     C
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 96  

0F5B E500        R     MOV     A,i+01H
0F5D 9F                SUBB    A,R7
0F5E E500        R     MOV     A,i
0F60 9E                SUBB    A,R6
0F61 502A              JNC     ?C0151
                                           ; SOURCE LINE # 744
0F63 AE00        R     MOV     R6,i
0F65 AF00        R     MOV     R7,i+01H
0F67 7400        R     MOV     A,#LOW max_step_str
0F69 2F                ADD     A,R7
0F6A F582              MOV     DPL,A
0F6C 7400        R     MOV     A,#HIGH max_step_str
0F6E 3E                ADDC    A,R6
0F6F F583              MOV     DPH,A
0F71 E0                MOVX    A,@DPTR
0F72 FF                MOV     R7,A
0F73 AC00        R     MOV     R4,i
0F75 AD00        R     MOV     R5,i+01H
0F77 7400        R     MOV     A,#LOW packet_data+0232H
0F79 2D                ADD     A,R5
0F7A F582              MOV     DPL,A
0F7C 7400        R     MOV     A,#HIGH packet_data+0232H
0F7E 3C                ADDC    A,R4
0F7F F583              MOV     DPH,A
0F81 EF                MOV     A,R7
0F82 F0                MOVX    @DPTR,A
0F83 0500        R     INC     i+01H
0F85 E500        R     MOV     A,i+01H
0F87 7002              JNZ     ?C0424
0F89 0500        R     INC     i
0F8B         ?C0424:
0F8B 80C4              SJMP    ?C0150
0F8D         ?C0151:
                                           ; SOURCE LINE # 748
0F8D 900000      R     MOV     DPTR,#packet_data+025AH
0F90 7403              MOV     A,#03H
0F92 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 749
0F93 900000      R     MOV     DPTR,#packet_data+025BH
0F96 7401              MOV     A,#01H
0F98 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 750
0F99 900000      E     MOV     DPTR,#c_mem+032H
0F9C E0                MOVX    A,@DPTR
0F9D FE                MOV     R6,A
0F9E A3                INC     DPTR
0F9F E0                MOVX    A,@DPTR
0FA0 FF                MOV     R7,A
0FA1 900000      R     MOV     DPTR,#packet_data+025CH
0FA4 EE                MOV     A,R6
0FA5 F0                MOVX    @DPTR,A
0FA6 A3                INC     DPTR
0FA7 EF                MOV     A,R7
0FA8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 751
0FA9 AF00        R     MOV     R7,curr_limit_str_len
0FAB 7E00              MOV     R6,#00H
0FAD 8E00        R     MOV     i,R6
0FAF 8F00        R     MOV     i+01H,R7
0FB1         ?C0153:
0FB1 E500        R     MOV     A,i+01H
0FB3 4500        R     ORL     A,i
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 97  

0FB5 603E              JZ      ?C0154
                                           ; SOURCE LINE # 752
0FB7 AF00        R     MOV     R7,curr_limit_str_len
0FB9 7E00              MOV     R6,#00H
0FBB C3                CLR     C
0FBC EF                MOV     A,R7
0FBD 9500        R     SUBB    A,i+01H
0FBF FF                MOV     R7,A
0FC0 EE                MOV     A,R6
0FC1 9500        R     SUBB    A,i
0FC3 FE                MOV     R6,A
0FC4 7400        R     MOV     A,#LOW curr_limit_str
0FC6 2F                ADD     A,R7
0FC7 F582              MOV     DPL,A
0FC9 7400        R     MOV     A,#HIGH curr_limit_str
0FCB 3E                ADDC    A,R6
0FCC F583              MOV     DPH,A
0FCE E0                MOVX    A,@DPTR
0FCF FF                MOV     R7,A
0FD0 AE00        R     MOV     R6,curr_limit_str_len
0FD2 EE                MOV     A,R6
0FD3 FD                MOV     R5,A
0FD4 7C00              MOV     R4,#00H
0FD6 C3                CLR     C
0FD7 ED                MOV     A,R5
0FD8 9500        R     SUBB    A,i+01H
0FDA FD                MOV     R5,A
0FDB EC                MOV     A,R4
0FDC 9500        R     SUBB    A,i
0FDE FC                MOV     R4,A
0FDF 7400        R     MOV     A,#LOW packet_data+025EH
0FE1 2D                ADD     A,R5
0FE2 F582              MOV     DPL,A
0FE4 7400        R     MOV     A,#HIGH packet_data+025EH
0FE6 3C                ADDC    A,R4
0FE7 F583              MOV     DPH,A
0FE9 EF                MOV     A,R7
0FEA F0                MOVX    @DPTR,A
0FEB E500        R     MOV     A,i+01H
0FED 1500        R     DEC     i+01H
0FEF 7002              JNZ     ?C0425
0FF1 1500        R     DEC     i
0FF3         ?C0425:
0FF3 80BC              SJMP    ?C0153
0FF5         ?C0154:
                                           ; SOURCE LINE # 756
0FF5 900000      R     MOV     DPTR,#packet_data+028CH
0FF8 7407              MOV     A,#07H
0FFA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 757
0FFB 900000      R     MOV     DPTR,#packet_data+028DH
0FFE 7401              MOV     A,#01H
1000 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 758
1001 900000      E     MOV     DPTR,#c_mem+067H
1004 120000      E     LCALL   ?C?LLDXDATA
1007 900000      R     MOV     DPTR,#packet_data+028EH
100A 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 759
100D AF00        R     MOV     R7,curr_prop_gain_str_len
100F 7E00              MOV     R6,#00H
1011 8E00        R     MOV     i,R6
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 98  

1013 8F00        R     MOV     i+01H,R7
1015         ?C0156:
1015 E500        R     MOV     A,i+01H
1017 4500        R     ORL     A,i
1019 603E              JZ      ?C0157
                                           ; SOURCE LINE # 760
101B AF00        R     MOV     R7,curr_prop_gain_str_len
101D 7E00              MOV     R6,#00H
101F C3                CLR     C
1020 EF                MOV     A,R7
1021 9500        R     SUBB    A,i+01H
1023 FF                MOV     R7,A
1024 EE                MOV     A,R6
1025 9500        R     SUBB    A,i
1027 FE                MOV     R6,A
1028 7400        R     MOV     A,#LOW curr_prop_gain_str
102A 2F                ADD     A,R7
102B F582              MOV     DPL,A
102D 7400        R     MOV     A,#HIGH curr_prop_gain_str
102F 3E                ADDC    A,R6
1030 F583              MOV     DPH,A
1032 E0                MOVX    A,@DPTR
1033 FF                MOV     R7,A
1034 AE00        R     MOV     R6,curr_prop_gain_str_len
1036 EE                MOV     A,R6
1037 FD                MOV     R5,A
1038 7C00              MOV     R4,#00H
103A C3                CLR     C
103B ED                MOV     A,R5
103C 9500        R     SUBB    A,i+01H
103E FD                MOV     R5,A
103F EC                MOV     A,R4
1040 9500        R     SUBB    A,i
1042 FC                MOV     R4,A
1043 7400        R     MOV     A,#LOW packet_data+0292H
1045 2D                ADD     A,R5
1046 F582              MOV     DPL,A
1048 7400        R     MOV     A,#HIGH packet_data+0292H
104A 3C                ADDC    A,R4
104B F583              MOV     DPH,A
104D EF                MOV     A,R7
104E F0                MOVX    @DPTR,A
104F E500        R     MOV     A,i+01H
1051 1500        R     DEC     i+01H
1053 7002              JNZ     ?C0426
1055 1500        R     DEC     i
1057         ?C0426:
1057 80BC              SJMP    ?C0156
1059         ?C0157:
                                           ; SOURCE LINE # 764
1059 900000      R     MOV     DPTR,#packet_data+02BEH
105C 7403              MOV     A,#03H
105E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 765
105F 900000      R     MOV     DPTR,#packet_data+02BFH
1062 7401              MOV     A,#01H
1064 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 766
1065 900000      E     MOV     DPTR,#c_mem+06BH
1068 E0                MOVX    A,@DPTR
1069 FE                MOV     R6,A
106A A3                INC     DPTR
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 99  

106B E0                MOVX    A,@DPTR
106C FF                MOV     R7,A
106D 900000      R     MOV     DPTR,#packet_data+02C0H
1070 EE                MOV     A,R6
1071 F0                MOVX    @DPTR,A
1072 A3                INC     DPTR
1073 EF                MOV     A,R7
1074 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 767
1075 AF00        R     MOV     R7,curr_sat_str_len
1077 7E00              MOV     R6,#00H
1079 8E00        R     MOV     i,R6
107B 8F00        R     MOV     i+01H,R7
107D         ?C0159:
107D E500        R     MOV     A,i+01H
107F 4500        R     ORL     A,i
1081 603E              JZ      ?C0160
                                           ; SOURCE LINE # 768
1083 AF00        R     MOV     R7,curr_sat_str_len
1085 7E00              MOV     R6,#00H
1087 C3                CLR     C
1088 EF                MOV     A,R7
1089 9500        R     SUBB    A,i+01H
108B FF                MOV     R7,A
108C EE                MOV     A,R6
108D 9500        R     SUBB    A,i
108F FE                MOV     R6,A
1090 7400        R     MOV     A,#LOW curr_sat_str
1092 2F                ADD     A,R7
1093 F582              MOV     DPL,A
1095 7400        R     MOV     A,#HIGH curr_sat_str
1097 3E                ADDC    A,R6
1098 F583              MOV     DPH,A
109A E0                MOVX    A,@DPTR
109B FF                MOV     R7,A
109C AE00        R     MOV     R6,curr_sat_str_len
109E EE                MOV     A,R6
109F FD                MOV     R5,A
10A0 7C00              MOV     R4,#00H
10A2 C3                CLR     C
10A3 ED                MOV     A,R5
10A4 9500        R     SUBB    A,i+01H
10A6 FD                MOV     R5,A
10A7 EC                MOV     A,R4
10A8 9500        R     SUBB    A,i
10AA FC                MOV     R4,A
10AB 7400        R     MOV     A,#LOW packet_data+02C2H
10AD 2D                ADD     A,R5
10AE F582              MOV     DPL,A
10B0 7400        R     MOV     A,#HIGH packet_data+02C2H
10B2 3C                ADDC    A,R4
10B3 F583              MOV     DPH,A
10B5 EF                MOV     A,R7
10B6 F0                MOVX    @DPTR,A
10B7 E500        R     MOV     A,i+01H
10B9 1500        R     DEC     i+01H
10BB 7002              JNZ     ?C0427
10BD 1500        R     DEC     i
10BF         ?C0427:
10BF 80BC              SJMP    ?C0159
10C1         ?C0160:
                                           ; SOURCE LINE # 772
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 100 

10C1 900000      R     MOV     DPTR,#packet_data+02F0H
10C4 7403              MOV     A,#03H
10C6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 773
10C7 900000      R     MOV     DPTR,#packet_data+02F1H
10CA 7401              MOV     A,#01H
10CC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 774
10CD 900000      E     MOV     DPTR,#c_mem+06DH
10D0 E0                MOVX    A,@DPTR
10D1 FE                MOV     R6,A
10D2 A3                INC     DPTR
10D3 E0                MOVX    A,@DPTR
10D4 FF                MOV     R7,A
10D5 900000      R     MOV     DPTR,#packet_data+02F2H
10D8 EE                MOV     A,R6
10D9 F0                MOVX    @DPTR,A
10DA A3                INC     DPTR
10DB EF                MOV     A,R7
10DC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 775
10DD AF00        R     MOV     R7,curr_dead_zone_str_len
10DF 7E00              MOV     R6,#00H
10E1 8E00        R     MOV     i,R6
10E3 8F00        R     MOV     i+01H,R7
10E5         ?C0162:
10E5 E500        R     MOV     A,i+01H
10E7 4500        R     ORL     A,i
10E9 603E              JZ      ?C0163
                                           ; SOURCE LINE # 776
10EB AF00        R     MOV     R7,curr_dead_zone_str_len
10ED 7E00              MOV     R6,#00H
10EF C3                CLR     C
10F0 EF                MOV     A,R7
10F1 9500        R     SUBB    A,i+01H
10F3 FF                MOV     R7,A
10F4 EE                MOV     A,R6
10F5 9500        R     SUBB    A,i
10F7 FE                MOV     R6,A
10F8 7400        R     MOV     A,#LOW curr_dead_zone_str
10FA 2F                ADD     A,R7
10FB F582              MOV     DPL,A
10FD 7400        R     MOV     A,#HIGH curr_dead_zone_str
10FF 3E                ADDC    A,R6
1100 F583              MOV     DPH,A
1102 E0                MOVX    A,@DPTR
1103 FF                MOV     R7,A
1104 AE00        R     MOV     R6,curr_dead_zone_str_len
1106 EE                MOV     A,R6
1107 FD                MOV     R5,A
1108 7C00              MOV     R4,#00H
110A C3                CLR     C
110B ED                MOV     A,R5
110C 9500        R     SUBB    A,i+01H
110E FD                MOV     R5,A
110F EC                MOV     A,R4
1110 9500        R     SUBB    A,i
1112 FC                MOV     R4,A
1113 7400        R     MOV     A,#LOW packet_data+02F4H
1115 2D                ADD     A,R5
1116 F582              MOV     DPL,A
1118 7400        R     MOV     A,#HIGH packet_data+02F4H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 101 

111A 3C                ADDC    A,R4
111B F583              MOV     DPH,A
111D EF                MOV     A,R7
111E F0                MOVX    @DPTR,A
111F E500        R     MOV     A,i+01H
1121 1500        R     DEC     i+01H
1123 7002              JNZ     ?C0428
1125 1500        R     DEC     i
1127         ?C0428:
1127 80BC              SJMP    ?C0162
1129         ?C0163:
                                           ; SOURCE LINE # 780
1129 900000      R     MOV     DPTR,#packet_data+0322H
112C E4                CLR     A
112D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 781
112E 900000      R     MOV     DPTR,#packet_data+0323H
1131 7401              MOV     A,#01H
1133 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 782
1134 900000      E     MOV     DPTR,#c_mem+066H
1137 E0                MOVX    A,@DPTR
1138 FF                MOV     R7,A
1139 900000      R     MOV     DPTR,#packet_data+0324H
113C EF                MOV     A,R7
113D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 783
113E 900000      E     MOV     DPTR,#c_mem+066H
1141 E0                MOVX    A,@DPTR
1142 FF                MOV     R7,A
1143 EF                MOV     A,R7
1144 6029              JZ      ?C0165
                                           ; SOURCE LINE # 784
1146 7B01              MOV     R3,#01H
1148 7A00        R     MOV     R2,#HIGH cuff_activ_force_str
114A 7900        R     MOV     R1,#LOW cuff_activ_force_str
114C C003              PUSH    AR3
114E C002              PUSH    AR2
1150 C001              PUSH    AR1
1152 7BFF              MOV     R3,#0FFH
1154 7A00        R     MOV     R2,#HIGH ?SC_0
1156 7900        R     MOV     R1,#LOW ?SC_0
1158 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
115B 120000      E     LCALL   ?C?PSTXDATA
115E D001              POP     AR1
1160 D002              POP     AR2
1162 D003              POP     AR3
1164 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 785
1167 900000      R     MOV     DPTR,#string_lenght
116A 7425              MOV     A,#025H
116C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 786
116D 8027              SJMP    ?C0166
116F         ?C0165:
                                           ; SOURCE LINE # 787
                                           ; SOURCE LINE # 788
116F 7B01              MOV     R3,#01H
1171 7A00        R     MOV     R2,#HIGH cuff_activ_force_str
1173 7900        R     MOV     R1,#LOW cuff_activ_force_str
1175 C003              PUSH    AR3
1177 C002              PUSH    AR2
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 102 

1179 C001              PUSH    AR1
117B 7BFF              MOV     R3,#0FFH
117D 7A00        R     MOV     R2,#HIGH ?SC_6
117F 7900        R     MOV     R1,#LOW ?SC_6
1181 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
1184 120000      E     LCALL   ?C?PSTXDATA
1187 D001              POP     AR1
1189 D002              POP     AR2
118B D003              POP     AR3
118D 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 789
1190 900000      R     MOV     DPTR,#string_lenght
1193 7424              MOV     A,#024H
1195 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 790
1196         ?C0166:
                                           ; SOURCE LINE # 791
1196 900000      R     MOV     DPTR,#string_lenght
1199 E0                MOVX    A,@DPTR
119A FF                MOV     R7,A
119B 7E00              MOV     R6,#00H
119D 8E00        R     MOV     i,R6
119F 8F00        R     MOV     i+01H,R7
11A1         ?C0167:
11A1 E500        R     MOV     A,i+01H
11A3 4500        R     ORL     A,i
11A5 6044              JZ      ?C0168
                                           ; SOURCE LINE # 792
11A7 900000      R     MOV     DPTR,#string_lenght
11AA E0                MOVX    A,@DPTR
11AB FF                MOV     R7,A
11AC 7E00              MOV     R6,#00H
11AE C3                CLR     C
11AF EF                MOV     A,R7
11B0 9500        R     SUBB    A,i+01H
11B2 FF                MOV     R7,A
11B3 EE                MOV     A,R6
11B4 9500        R     SUBB    A,i
11B6 FE                MOV     R6,A
11B7 7400        R     MOV     A,#LOW cuff_activ_force_str
11B9 2F                ADD     A,R7
11BA F582              MOV     DPL,A
11BC 7400        R     MOV     A,#HIGH cuff_activ_force_str
11BE 3E                ADDC    A,R6
11BF F583              MOV     DPH,A
11C1 E0                MOVX    A,@DPTR
11C2 FF                MOV     R7,A
11C3 900000      R     MOV     DPTR,#string_lenght
11C6 E0                MOVX    A,@DPTR
11C7 FE                MOV     R6,A
11C8 EE                MOV     A,R6
11C9 FD                MOV     R5,A
11CA 7C00              MOV     R4,#00H
11CC C3                CLR     C
11CD ED                MOV     A,R5
11CE 9500        R     SUBB    A,i+01H
11D0 FD                MOV     R5,A
11D1 EC                MOV     A,R4
11D2 9500        R     SUBB    A,i
11D4 FC                MOV     R4,A
11D5 7400        R     MOV     A,#LOW packet_data+0325H
11D7 2D                ADD     A,R5
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 103 

11D8 F582              MOV     DPL,A
11DA 7400        R     MOV     A,#HIGH packet_data+0325H
11DC 3C                ADDC    A,R4
11DD F583              MOV     DPH,A
11DF EF                MOV     A,R7
11E0 F0                MOVX    @DPTR,A
11E1 E500        R     MOV     A,i+01H
11E3 1500        R     DEC     i+01H
11E5 7002              JNZ     ?C0429
11E7 1500        R     DEC     i
11E9         ?C0429:
11E9 80B6              SJMP    ?C0167
11EB         ?C0168:
                                           ; SOURCE LINE # 794
11EB 900000      R     MOV     DPTR,#string_lenght
11EE E0                MOVX    A,@DPTR
11EF FF                MOV     R7,A
11F0 7400        R     MOV     A,#LOW packet_data+0325H
11F2 2F                ADD     A,R7
11F3 F582              MOV     DPL,A
11F5 E4                CLR     A
11F6 3400        R     ADDC    A,#HIGH packet_data+0325H
11F8 F583              MOV     DPH,A
11FA 7403              MOV     A,#03H
11FC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 798
11FD 900000      R     MOV     DPTR,#packet_data+0354H
1200 7404              MOV     A,#04H
1202 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 799
1203 900000      R     MOV     DPTR,#packet_data+0355H
1206 7401              MOV     A,#01H
1208 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 800
1209 900000      E     MOV     DPTR,#c_mem+07AH
120C E0                MOVX    A,@DPTR
120D FE                MOV     R6,A
120E A3                INC     DPTR
120F E0                MOVX    A,@DPTR
1210 FF                MOV     R7,A
1211 900000      R     MOV     DPTR,#packet_data+0356H
1214 EE                MOV     A,R6
1215 F0                MOVX    @DPTR,A
1216 A3                INC     DPTR
1217 EF                MOV     A,R7
1218 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 801
1219 AF00        R     MOV     R7,pow_tension_str_len
121B 7E00              MOV     R6,#00H
121D 8E00        R     MOV     i,R6
121F 8F00        R     MOV     i+01H,R7
1221         ?C0170:
1221 E500        R     MOV     A,i+01H
1223 4500        R     ORL     A,i
1225 603E              JZ      ?C0171
                                           ; SOURCE LINE # 802
1227 AF00        R     MOV     R7,pow_tension_str_len
1229 7E00              MOV     R6,#00H
122B C3                CLR     C
122C EF                MOV     A,R7
122D 9500        R     SUBB    A,i+01H
122F FF                MOV     R7,A
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 104 

1230 EE                MOV     A,R6
1231 9500        R     SUBB    A,i
1233 FE                MOV     R6,A
1234 7400        R     MOV     A,#LOW pow_tension_str
1236 2F                ADD     A,R7
1237 F582              MOV     DPL,A
1239 7400        R     MOV     A,#HIGH pow_tension_str
123B 3E                ADDC    A,R6
123C F583              MOV     DPH,A
123E E0                MOVX    A,@DPTR
123F FF                MOV     R7,A
1240 AE00        R     MOV     R6,pow_tension_str_len
1242 EE                MOV     A,R6
1243 FD                MOV     R5,A
1244 7C00              MOV     R4,#00H
1246 C3                CLR     C
1247 ED                MOV     A,R5
1248 9500        R     SUBB    A,i+01H
124A FD                MOV     R5,A
124B EC                MOV     A,R4
124C 9500        R     SUBB    A,i
124E FC                MOV     R4,A
124F 7400        R     MOV     A,#LOW packet_data+0358H
1251 2D                ADD     A,R5
1252 F582              MOV     DPL,A
1254 7400        R     MOV     A,#HIGH packet_data+0358H
1256 3C                ADDC    A,R4
1257 F583              MOV     DPH,A
1259 EF                MOV     A,R7
125A F0                MOVX    @DPTR,A
125B E500        R     MOV     A,i+01H
125D 1500        R     DEC     i+01H
125F 7002              JNZ     ?C0430
1261 1500        R     DEC     i
1263         ?C0430:
1263 80BC              SJMP    ?C0170
1265         ?C0171:
                                           ; SOURCE LINE # 806
1265 900000      R     MOV     DPTR,#packet_data+0386H
1268 E4                CLR     A
1269 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 807
126A 900000      R     MOV     DPTR,#packet_data+0387H
126D 7401              MOV     A,#01H
126F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 808
1270 900000      E     MOV     DPTR,#c_mem+06FH
1273 E0                MOVX    A,@DPTR
1274 FF                MOV     R7,A
1275 900000      R     MOV     DPTR,#packet_data+0388H
1278 EF                MOV     A,R7
1279 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 809
127A 900000      E     MOV     DPTR,#c_mem+06FH
127D E0                MOVX    A,@DPTR
127E FF                MOV     R7,A
127F EF                MOV     A,R7
1280 6029              JZ      ?C0173
                                           ; SOURCE LINE # 810
1282 7B01              MOV     R3,#01H
1284 7A00        R     MOV     R2,#HIGH cuff_activ_proprio_str
1286 7900        R     MOV     R1,#LOW cuff_activ_proprio_str
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 105 

1288 C003              PUSH    AR3
128A C002              PUSH    AR2
128C C001              PUSH    AR1
128E 7BFF              MOV     R3,#0FFH
1290 7A00        R     MOV     R2,#HIGH ?SC_0
1292 7900        R     MOV     R1,#LOW ?SC_0
1294 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
1297 120000      E     LCALL   ?C?PSTXDATA
129A D001              POP     AR1
129C D002              POP     AR2
129E D003              POP     AR3
12A0 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 811
12A3 900000      R     MOV     DPTR,#string_lenght
12A6 7427              MOV     A,#027H
12A8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 812
12A9 8027              SJMP    ?C0174
12AB         ?C0173:
                                           ; SOURCE LINE # 813
                                           ; SOURCE LINE # 814
12AB 7B01              MOV     R3,#01H
12AD 7A00        R     MOV     R2,#HIGH cuff_activ_proprio_str
12AF 7900        R     MOV     R1,#LOW cuff_activ_proprio_str
12B1 C003              PUSH    AR3
12B3 C002              PUSH    AR2
12B5 C001              PUSH    AR1
12B7 7BFF              MOV     R3,#0FFH
12B9 7A00        R     MOV     R2,#HIGH ?SC_6
12BB 7900        R     MOV     R1,#LOW ?SC_6
12BD 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
12C0 120000      E     LCALL   ?C?PSTXDATA
12C3 D001              POP     AR1
12C5 D002              POP     AR2
12C7 D003              POP     AR3
12C9 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 815
12CC 900000      R     MOV     DPTR,#string_lenght
12CF 7426              MOV     A,#026H
12D1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 816
12D2         ?C0174:
                                           ; SOURCE LINE # 817
12D2 900000      R     MOV     DPTR,#string_lenght
12D5 E0                MOVX    A,@DPTR
12D6 FF                MOV     R7,A
12D7 7E00              MOV     R6,#00H
12D9 8E00        R     MOV     i,R6
12DB 8F00        R     MOV     i+01H,R7
12DD         ?C0175:
12DD E500        R     MOV     A,i+01H
12DF 4500        R     ORL     A,i
12E1 6044              JZ      ?C0176
                                           ; SOURCE LINE # 818
12E3 900000      R     MOV     DPTR,#string_lenght
12E6 E0                MOVX    A,@DPTR
12E7 FF                MOV     R7,A
12E8 7E00              MOV     R6,#00H
12EA C3                CLR     C
12EB EF                MOV     A,R7
12EC 9500        R     SUBB    A,i+01H
12EE FF                MOV     R7,A
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 106 

12EF EE                MOV     A,R6
12F0 9500        R     SUBB    A,i
12F2 FE                MOV     R6,A
12F3 7400        R     MOV     A,#LOW cuff_activ_proprio_str
12F5 2F                ADD     A,R7
12F6 F582              MOV     DPL,A
12F8 7400        R     MOV     A,#HIGH cuff_activ_proprio_str
12FA 3E                ADDC    A,R6
12FB F583              MOV     DPH,A
12FD E0                MOVX    A,@DPTR
12FE FF                MOV     R7,A
12FF 900000      R     MOV     DPTR,#string_lenght
1302 E0                MOVX    A,@DPTR
1303 FE                MOV     R6,A
1304 EE                MOV     A,R6
1305 FD                MOV     R5,A
1306 7C00              MOV     R4,#00H
1308 C3                CLR     C
1309 ED                MOV     A,R5
130A 9500        R     SUBB    A,i+01H
130C FD                MOV     R5,A
130D EC                MOV     A,R4
130E 9500        R     SUBB    A,i
1310 FC                MOV     R4,A
1311 7400        R     MOV     A,#LOW packet_data+0389H
1313 2D                ADD     A,R5
1314 F582              MOV     DPL,A
1316 7400        R     MOV     A,#HIGH packet_data+0389H
1318 3C                ADDC    A,R4
1319 F583              MOV     DPH,A
131B EF                MOV     A,R7
131C F0                MOVX    @DPTR,A
131D E500        R     MOV     A,i+01H
131F 1500        R     DEC     i+01H
1321 7002              JNZ     ?C0431
1323 1500        R     DEC     i
1325         ?C0431:
1325 80B6              SJMP    ?C0175
1327         ?C0176:
                                           ; SOURCE LINE # 820
1327 900000      R     MOV     DPTR,#string_lenght
132A E0                MOVX    A,@DPTR
132B FF                MOV     R7,A
132C 7400        R     MOV     A,#LOW packet_data+0389H
132E 2F                ADD     A,R7
132F F582              MOV     DPL,A
1331 E4                CLR     A
1332 3400        R     ADDC    A,#HIGH packet_data+0389H
1334 F583              MOV     DPH,A
1336 7403              MOV     A,#03H
1338 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 824
1339 900000      R     MOV     DPTR,#packet_data+03B8H
133C 7405              MOV     A,#05H
133E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 825
133F 900000      R     MOV     DPTR,#packet_data+03B9H
1342 7401              MOV     A,#01H
1344 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 826
1345 900000      E     MOV     DPTR,#c_mem+070H
1348 120000      E     LCALL   ?C?LLDXDATA
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 107 

134B 900000      R     MOV     DPTR,#packet_data+03BAH
134E 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 827
1351 AF00        R     MOV     R7,max_slide_str_len
1353 7E00              MOV     R6,#00H
1355 8E00        R     MOV     i,R6
1357 8F00        R     MOV     i+01H,R7
1359         ?C0178:
1359 E500        R     MOV     A,i+01H
135B 4500        R     ORL     A,i
135D 603E              JZ      ?C0179
                                           ; SOURCE LINE # 828
135F AF00        R     MOV     R7,max_slide_str_len
1361 7E00              MOV     R6,#00H
1363 C3                CLR     C
1364 EF                MOV     A,R7
1365 9500        R     SUBB    A,i+01H
1367 FF                MOV     R7,A
1368 EE                MOV     A,R6
1369 9500        R     SUBB    A,i
136B FE                MOV     R6,A
136C 7400        R     MOV     A,#LOW max_slide_str
136E 2F                ADD     A,R7
136F F582              MOV     DPL,A
1371 7400        R     MOV     A,#HIGH max_slide_str
1373 3E                ADDC    A,R6
1374 F583              MOV     DPH,A
1376 E0                MOVX    A,@DPTR
1377 FF                MOV     R7,A
1378 AE00        R     MOV     R6,max_slide_str_len
137A EE                MOV     A,R6
137B FD                MOV     R5,A
137C 7C00              MOV     R4,#00H
137E C3                CLR     C
137F ED                MOV     A,R5
1380 9500        R     SUBB    A,i+01H
1382 FD                MOV     R5,A
1383 EC                MOV     A,R4
1384 9500        R     SUBB    A,i
1386 FC                MOV     R4,A
1387 7400        R     MOV     A,#LOW packet_data+03BEH
1389 2D                ADD     A,R5
138A F582              MOV     DPL,A
138C 7400        R     MOV     A,#HIGH packet_data+03BEH
138E 3C                ADDC    A,R4
138F F583              MOV     DPH,A
1391 EF                MOV     A,R7
1392 F0                MOVX    @DPTR,A
1393 E500        R     MOV     A,i+01H
1395 1500        R     DEC     i+01H
1397 7002              JNZ     ?C0432
1399 1500        R     DEC     i
139B         ?C0432:
139B 80BC              SJMP    ?C0178
139D         ?C0179:
                                           ; SOURCE LINE # 832
139D 900000      R     MOV     DPTR,#packet_data+03EAH
13A0 7405              MOV     A,#05H
13A2 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 833
13A3 900000      R     MOV     DPTR,#packet_data+03EBH
13A6 7401              MOV     A,#01H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 108 

13A8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 834
13A9 900000      E     MOV     DPTR,#c_mem+074H
13AC 120000      E     LCALL   ?C?LLDXDATA
13AF 900000      R     MOV     DPTR,#packet_data+03ECH
13B2 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 835
13B5 AF00        R     MOV     R7,max_SH_pos_str_len
13B7 7E00              MOV     R6,#00H
13B9 8E00        R     MOV     i,R6
13BB 8F00        R     MOV     i+01H,R7
13BD         ?C0181:
13BD E500        R     MOV     A,i+01H
13BF 4500        R     ORL     A,i
13C1 603E              JZ      ?C0182
                                           ; SOURCE LINE # 836
13C3 AF00        R     MOV     R7,max_SH_pos_str_len
13C5 7E00              MOV     R6,#00H
13C7 C3                CLR     C
13C8 EF                MOV     A,R7
13C9 9500        R     SUBB    A,i+01H
13CB FF                MOV     R7,A
13CC EE                MOV     A,R6
13CD 9500        R     SUBB    A,i
13CF FE                MOV     R6,A
13D0 7400        R     MOV     A,#LOW max_SH_pos_str
13D2 2F                ADD     A,R7
13D3 F582              MOV     DPL,A
13D5 7400        R     MOV     A,#HIGH max_SH_pos_str
13D7 3E                ADDC    A,R6
13D8 F583              MOV     DPH,A
13DA E0                MOVX    A,@DPTR
13DB FF                MOV     R7,A
13DC AE00        R     MOV     R6,max_SH_pos_str_len
13DE EE                MOV     A,R6
13DF FD                MOV     R5,A
13E0 7C00              MOV     R4,#00H
13E2 C3                CLR     C
13E3 ED                MOV     A,R5
13E4 9500        R     SUBB    A,i+01H
13E6 FD                MOV     R5,A
13E7 EC                MOV     A,R4
13E8 9500        R     SUBB    A,i
13EA FC                MOV     R4,A
13EB 7400        R     MOV     A,#LOW packet_data+03F0H
13ED 2D                ADD     A,R5
13EE F582              MOV     DPL,A
13F0 7400        R     MOV     A,#HIGH packet_data+03F0H
13F2 3C                ADDC    A,R4
13F3 F583              MOV     DPH,A
13F5 EF                MOV     A,R7
13F6 F0                MOVX    @DPTR,A
13F7 E500        R     MOV     A,i+01H
13F9 1500        R     DEC     i+01H
13FB 7002              JNZ     ?C0433
13FD 1500        R     DEC     i
13FF         ?C0433:
13FF 80BC              SJMP    ?C0181
1401         ?C0182:
                                           ; SOURCE LINE # 840
1401 900000      R     MOV     DPTR,#packet_data+041CH
1404 7402              MOV     A,#02H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 109 

1406 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 841
1407 900000      R     MOV     DPTR,#packet_data+041DH
140A 7401              MOV     A,#01H
140C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 842
140D 900000      E     MOV     DPTR,#c_mem+078H
1410 E0                MOVX    A,@DPTR
1411 FF                MOV     R7,A
1412 900000      R     MOV     DPTR,#packet_data+041EH
1415 EF                MOV     A,R7
1416 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 843
1417 AF00        R     MOV     R7,hand_ID_str_len
1419 7E00              MOV     R6,#00H
141B 8E00        R     MOV     i,R6
141D 8F00        R     MOV     i+01H,R7
141F         ?C0184:
141F E500        R     MOV     A,i+01H
1421 4500        R     ORL     A,i
1423 603E              JZ      ?C0185
                                           ; SOURCE LINE # 844
1425 AF00        R     MOV     R7,hand_ID_str_len
1427 7E00              MOV     R6,#00H
1429 C3                CLR     C
142A EF                MOV     A,R7
142B 9500        R     SUBB    A,i+01H
142D FF                MOV     R7,A
142E EE                MOV     A,R6
142F 9500        R     SUBB    A,i
1431 FE                MOV     R6,A
1432 7400        R     MOV     A,#LOW hand_ID_str
1434 2F                ADD     A,R7
1435 F582              MOV     DPL,A
1437 7400        R     MOV     A,#HIGH hand_ID_str
1439 3E                ADDC    A,R6
143A F583              MOV     DPH,A
143C E0                MOVX    A,@DPTR
143D FF                MOV     R7,A
143E AE00        R     MOV     R6,hand_ID_str_len
1440 EE                MOV     A,R6
1441 FD                MOV     R5,A
1442 7C00              MOV     R4,#00H
1444 C3                CLR     C
1445 ED                MOV     A,R5
1446 9500        R     SUBB    A,i+01H
1448 FD                MOV     R5,A
1449 EC                MOV     A,R4
144A 9500        R     SUBB    A,i
144C FC                MOV     R4,A
144D 7400        R     MOV     A,#LOW packet_data+041FH
144F 2D                ADD     A,R5
1450 F582              MOV     DPL,A
1452 7400        R     MOV     A,#HIGH packet_data+041FH
1454 3C                ADDC    A,R4
1455 F583              MOV     DPH,A
1457 EF                MOV     A,R7
1458 F0                MOVX    @DPTR,A
1459 E500        R     MOV     A,i+01H
145B 1500        R     DEC     i+01H
145D 7002              JNZ     ?C0434
145F 1500        R     DEC     i
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 110 

1461         ?C0434:
1461 80BC              SJMP    ?C0184
1463         ?C0185:
                                           ; SOURCE LINE # 848
1463 900000      R     MOV     DPTR,#packet_data+044EH
1466 E4                CLR     A
1467 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 849
1468 900000      R     MOV     DPTR,#packet_data+044FH
146B 7401              MOV     A,#01H
146D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 850
146E 900000      E     MOV     DPTR,#c_mem+079H
1471 E0                MOVX    A,@DPTR
1472 FF                MOV     R7,A
1473 900000      R     MOV     DPTR,#packet_data+0450H
1476 EF                MOV     A,R7
1477 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 851
1478 900000      E     MOV     DPTR,#c_mem+079H
147B E0                MOVX    A,@DPTR
147C FF                MOV     R7,A
147D EF                MOV     A,R7
147E 6029              JZ      ?C0187
                                           ; SOURCE LINE # 852
1480 7B01              MOV     R3,#01H
1482 7A00        R     MOV     R2,#HIGH cuff_activ_force_proprio_str
1484 7900        R     MOV     R1,#LOW cuff_activ_force_proprio_str
1486 C003              PUSH    AR3
1488 C002              PUSH    AR2
148A C001              PUSH    AR1
148C 7BFF              MOV     R3,#0FFH
148E 7A00        R     MOV     R2,#HIGH ?SC_0
1490 7900        R     MOV     R1,#LOW ?SC_0
1492 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
1495 120000      E     LCALL   ?C?PSTXDATA
1498 D001              POP     AR1
149A D002              POP     AR2
149C D003              POP     AR3
149E 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 853
14A1 900000      R     MOV     DPTR,#string_lenght
14A4 7422              MOV     A,#022H
14A6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 854
14A7 8027              SJMP    ?C0188
14A9         ?C0187:
                                           ; SOURCE LINE # 855
                                           ; SOURCE LINE # 856
14A9 7B01              MOV     R3,#01H
14AB 7A00        R     MOV     R2,#HIGH cuff_activ_force_proprio_str
14AD 7900        R     MOV     R1,#LOW cuff_activ_force_proprio_str
14AF C003              PUSH    AR3
14B1 C002              PUSH    AR2
14B3 C001              PUSH    AR1
14B5 7BFF              MOV     R3,#0FFH
14B7 7A00        R     MOV     R2,#HIGH ?SC_6
14B9 7900        R     MOV     R1,#LOW ?SC_6
14BB 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
14BE 120000      E     LCALL   ?C?PSTXDATA
14C1 D001              POP     AR1
14C3 D002              POP     AR2
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 111 

14C5 D003              POP     AR3
14C7 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 857
14CA 900000      R     MOV     DPTR,#string_lenght
14CD 7421              MOV     A,#021H
14CF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 858
14D0         ?C0188:
                                           ; SOURCE LINE # 859
14D0 900000      R     MOV     DPTR,#string_lenght
14D3 E0                MOVX    A,@DPTR
14D4 FF                MOV     R7,A
14D5 7E00              MOV     R6,#00H
14D7 8E00        R     MOV     i,R6
14D9 8F00        R     MOV     i+01H,R7
14DB         ?C0189:
14DB E500        R     MOV     A,i+01H
14DD 4500        R     ORL     A,i
14DF 6044              JZ      ?C0190
                                           ; SOURCE LINE # 860
14E1 900000      R     MOV     DPTR,#string_lenght
14E4 E0                MOVX    A,@DPTR
14E5 FF                MOV     R7,A
14E6 7E00              MOV     R6,#00H
14E8 C3                CLR     C
14E9 EF                MOV     A,R7
14EA 9500        R     SUBB    A,i+01H
14EC FF                MOV     R7,A
14ED EE                MOV     A,R6
14EE 9500        R     SUBB    A,i
14F0 FE                MOV     R6,A
14F1 7400        R     MOV     A,#LOW cuff_activ_force_proprio_str
14F3 2F                ADD     A,R7
14F4 F582              MOV     DPL,A
14F6 7400        R     MOV     A,#HIGH cuff_activ_force_proprio_str
14F8 3E                ADDC    A,R6
14F9 F583              MOV     DPH,A
14FB E0                MOVX    A,@DPTR
14FC FF                MOV     R7,A
14FD 900000      R     MOV     DPTR,#string_lenght
1500 E0                MOVX    A,@DPTR
1501 FE                MOV     R6,A
1502 EE                MOV     A,R6
1503 FD                MOV     R5,A
1504 7C00              MOV     R4,#00H
1506 C3                CLR     C
1507 ED                MOV     A,R5
1508 9500        R     SUBB    A,i+01H
150A FD                MOV     R5,A
150B EC                MOV     A,R4
150C 9500        R     SUBB    A,i
150E FC                MOV     R4,A
150F 7400        R     MOV     A,#LOW packet_data+0451H
1511 2D                ADD     A,R5
1512 F582              MOV     DPL,A
1514 7400        R     MOV     A,#HIGH packet_data+0451H
1516 3C                ADDC    A,R4
1517 F583              MOV     DPH,A
1519 EF                MOV     A,R7
151A F0                MOVX    @DPTR,A
151B E500        R     MOV     A,i+01H
151D 1500        R     DEC     i+01H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 112 

151F 7002              JNZ     ?C0435
1521 1500        R     DEC     i
1523         ?C0435:
1523 80B6              SJMP    ?C0189
1525         ?C0190:
                                           ; SOURCE LINE # 862
1525 900000      R     MOV     DPTR,#string_lenght
1528 E0                MOVX    A,@DPTR
1529 FF                MOV     R7,A
152A 7400        R     MOV     A,#LOW packet_data+0451H
152C 2F                ADD     A,R7
152D F582              MOV     DPL,A
152F E4                CLR     A
1530 3400        R     ADDC    A,#HIGH packet_data+0451H
1532 F583              MOV     DPH,A
1534 7403              MOV     A,#03H
1536 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 867
1537 900000      R     MOV     DPTR,#packet_data+0480H
153A 7405              MOV     A,#05H
153C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 868
153D 900000      R     MOV     DPTR,#packet_data+0481H
1540 7401              MOV     A,#01H
1542 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 869
1543 900000      E     MOV     DPTR,#c_mem+07CH
1546 120000      E     LCALL   ?C?LLDXDATA
1549 900000      R     MOV     DPTR,#packet_data+0482H
154C 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 870
154F 900000      R     MOV     DPTR,#SH_rest_pos_str_len
1552 E0                MOVX    A,@DPTR
1553 FF                MOV     R7,A
1554 7E00              MOV     R6,#00H
1556 8E00        R     MOV     i,R6
1558 8F00        R     MOV     i+01H,R7
155A         ?C0192:
155A E500        R     MOV     A,i+01H
155C 4500        R     ORL     A,i
155E 6044              JZ      ?C0193
                                           ; SOURCE LINE # 871
1560 900000      R     MOV     DPTR,#SH_rest_pos_str_len
1563 E0                MOVX    A,@DPTR
1564 FF                MOV     R7,A
1565 7E00              MOV     R6,#00H
1567 C3                CLR     C
1568 EF                MOV     A,R7
1569 9500        R     SUBB    A,i+01H
156B FF                MOV     R7,A
156C EE                MOV     A,R6
156D 9500        R     SUBB    A,i
156F FE                MOV     R6,A
1570 7400        R     MOV     A,#LOW SH_rest_pos_str
1572 2F                ADD     A,R7
1573 F582              MOV     DPL,A
1575 7400        R     MOV     A,#HIGH SH_rest_pos_str
1577 3E                ADDC    A,R6
1578 F583              MOV     DPH,A
157A E0                MOVX    A,@DPTR
157B FF                MOV     R7,A
157C 900000      R     MOV     DPTR,#SH_rest_pos_str_len
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 113 

157F E0                MOVX    A,@DPTR
1580 FE                MOV     R6,A
1581 EE                MOV     A,R6
1582 FD                MOV     R5,A
1583 7C00              MOV     R4,#00H
1585 C3                CLR     C
1586 ED                MOV     A,R5
1587 9500        R     SUBB    A,i+01H
1589 FD                MOV     R5,A
158A EC                MOV     A,R4
158B 9500        R     SUBB    A,i
158D FC                MOV     R4,A
158E 7400        R     MOV     A,#LOW packet_data+0486H
1590 2D                ADD     A,R5
1591 F582              MOV     DPL,A
1593 7400        R     MOV     A,#HIGH packet_data+0486H
1595 3C                ADDC    A,R4
1596 F583              MOV     DPH,A
1598 EF                MOV     A,R7
1599 F0                MOVX    @DPTR,A
159A E500        R     MOV     A,i+01H
159C 1500        R     DEC     i+01H
159E 7002              JNZ     ?C0436
15A0 1500        R     DEC     i
15A2         ?C0436:
15A2 80B6              SJMP    ?C0192
15A4         ?C0193:
                                           ; SOURCE LINE # 875
15A4 900000      R     MOV     DPTR,#packet_data+04B2H
15A7 E4                CLR     A
15A8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 876
15A9 900000      R     MOV     DPTR,#packet_data+04B3H
15AC 7401              MOV     A,#01H
15AE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 877
15AF 900000      E     MOV     DPTR,#c_mem+080H
15B2 E0                MOVX    A,@DPTR
15B3 FF                MOV     R7,A
15B4 900000      R     MOV     DPTR,#packet_data+04B4H
15B7 EF                MOV     A,R7
15B8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 878
15B9 900000      E     MOV     DPTR,#c_mem+080H
15BC E0                MOVX    A,@DPTR
15BD FF                MOV     R7,A
15BE EF                MOV     A,R7
15BF 6029              JZ      ?C0195
                                           ; SOURCE LINE # 879
15C1 7B01              MOV     R3,#01H
15C3 7A00        R     MOV     R2,#HIGH right_left_par_str
15C5 7900        R     MOV     R1,#LOW right_left_par_str
15C7 C003              PUSH    AR3
15C9 C002              PUSH    AR2
15CB C001              PUSH    AR1
15CD 7BFF              MOV     R3,#0FFH
15CF 7A00        R     MOV     R2,#HIGH ?SC_79
15D1 7900        R     MOV     R1,#LOW ?SC_79
15D3 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
15D6 120000      E     LCALL   ?C?PSTXDATA
15D9 D001              POP     AR1
15DB D002              POP     AR2
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 114 

15DD D003              POP     AR3
15DF 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 880
15E2 900000      R     MOV     DPTR,#string_lenght
15E5 7414              MOV     A,#014H
15E7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 881
15E8 8027              SJMP    ?C0196
15EA         ?C0195:
                                           ; SOURCE LINE # 882
                                           ; SOURCE LINE # 883
15EA 7B01              MOV     R3,#01H
15EC 7A00        R     MOV     R2,#HIGH right_left_par_str
15EE 7900        R     MOV     R1,#LOW right_left_par_str
15F0 C003              PUSH    AR3
15F2 C002              PUSH    AR2
15F4 C001              PUSH    AR1
15F6 7BFF              MOV     R3,#0FFH
15F8 7A00        R     MOV     R2,#HIGH ?SC_86
15FA 7900        R     MOV     R1,#LOW ?SC_86
15FC 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
15FF 120000      E     LCALL   ?C?PSTXDATA
1602 D001              POP     AR1
1604 D002              POP     AR2
1606 D003              POP     AR3
1608 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 884
160B 900000      R     MOV     DPTR,#string_lenght
160E 7415              MOV     A,#015H
1610 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 885
1611         ?C0196:
                                           ; SOURCE LINE # 886
1611 900000      R     MOV     DPTR,#string_lenght
1614 E0                MOVX    A,@DPTR
1615 FF                MOV     R7,A
1616 7E00              MOV     R6,#00H
1618 8E00        R     MOV     i,R6
161A 8F00        R     MOV     i+01H,R7
161C         ?C0197:
161C E500        R     MOV     A,i+01H
161E 4500        R     ORL     A,i
1620 6044              JZ      ?C0198
                                           ; SOURCE LINE # 887
1622 900000      R     MOV     DPTR,#string_lenght
1625 E0                MOVX    A,@DPTR
1626 FF                MOV     R7,A
1627 7E00              MOV     R6,#00H
1629 C3                CLR     C
162A EF                MOV     A,R7
162B 9500        R     SUBB    A,i+01H
162D FF                MOV     R7,A
162E EE                MOV     A,R6
162F 9500        R     SUBB    A,i
1631 FE                MOV     R6,A
1632 7400        R     MOV     A,#LOW right_left_par_str
1634 2F                ADD     A,R7
1635 F582              MOV     DPL,A
1637 7400        R     MOV     A,#HIGH right_left_par_str
1639 3E                ADDC    A,R6
163A F583              MOV     DPH,A
163C E0                MOVX    A,@DPTR
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 115 

163D FF                MOV     R7,A
163E 900000      R     MOV     DPTR,#string_lenght
1641 E0                MOVX    A,@DPTR
1642 FE                MOV     R6,A
1643 EE                MOV     A,R6
1644 FD                MOV     R5,A
1645 7C00              MOV     R4,#00H
1647 C3                CLR     C
1648 ED                MOV     A,R5
1649 9500        R     SUBB    A,i+01H
164B FD                MOV     R5,A
164C EC                MOV     A,R4
164D 9500        R     SUBB    A,i
164F FC                MOV     R4,A
1650 7400        R     MOV     A,#LOW packet_data+04B5H
1652 2D                ADD     A,R5
1653 F582              MOV     DPL,A
1655 7400        R     MOV     A,#HIGH packet_data+04B5H
1657 3C                ADDC    A,R4
1658 F583              MOV     DPH,A
165A EF                MOV     A,R7
165B F0                MOVX    @DPTR,A
165C E500        R     MOV     A,i+01H
165E 1500        R     DEC     i+01H
1660 7002              JNZ     ?C0437
1662 1500        R     DEC     i
1664         ?C0437:
1664 80B6              SJMP    ?C0197
1666         ?C0198:
                                           ; SOURCE LINE # 889
1666 900000      R     MOV     DPTR,#string_lenght
1669 E0                MOVX    A,@DPTR
166A FF                MOV     R7,A
166B 7400        R     MOV     A,#LOW packet_data+04B5H
166D 2F                ADD     A,R7
166E F582              MOV     DPL,A
1670 E4                CLR     A
1671 3400        R     ADDC    A,#HIGH packet_data+04B5H
1673 F583              MOV     DPH,A
1675 7404              MOV     A,#04H
1677 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 893
1678 AF00        R     MOV     R7,input_mode_menu_len
167A 7E00              MOV     R6,#00H
167C 8E00        R     MOV     i,R6
167E 8F00        R     MOV     i+01H,R7
1680         ?C0200:
1680 E500        R     MOV     A,i+01H
1682 4500        R     ORL     A,i
1684 603E              JZ      ?C0201
                                           ; SOURCE LINE # 894
1686 AF00        R     MOV     R7,input_mode_menu_len
1688 7E00              MOV     R6,#00H
168A C3                CLR     C
168B EF                MOV     A,R7
168C 9500        R     SUBB    A,i+01H
168E FF                MOV     R7,A
168F EE                MOV     A,R6
1690 9500        R     SUBB    A,i
1692 FE                MOV     R6,A
1693 7400        R     MOV     A,#LOW input_mode_menu
1695 2F                ADD     A,R7
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 116 

1696 F582              MOV     DPL,A
1698 7400        R     MOV     A,#HIGH input_mode_menu
169A 3E                ADDC    A,R6
169B F583              MOV     DPH,A
169D E0                MOVX    A,@DPTR
169E FF                MOV     R7,A
169F AE00        R     MOV     R6,input_mode_menu_len
16A1 EE                MOV     A,R6
16A2 FD                MOV     R5,A
16A3 7C00              MOV     R4,#00H
16A5 C3                CLR     C
16A6 ED                MOV     A,R5
16A7 9500        R     SUBB    A,i+01H
16A9 FD                MOV     R5,A
16AA EC                MOV     A,R4
16AB 9500        R     SUBB    A,i
16AD FC                MOV     R4,A
16AE 7400        R     MOV     A,#LOW packet_data+04E4H
16B0 2D                ADD     A,R5
16B1 F582              MOV     DPL,A
16B3 7400        R     MOV     A,#HIGH packet_data+04E4H
16B5 3C                ADDC    A,R4
16B6 F583              MOV     DPH,A
16B8 EF                MOV     A,R7
16B9 F0                MOVX    @DPTR,A
16BA E500        R     MOV     A,i+01H
16BC 1500        R     DEC     i+01H
16BE 7002              JNZ     ?C0438
16C0 1500        R     DEC     i
16C2         ?C0438:
16C2 80BC              SJMP    ?C0200
16C4         ?C0201:
                                           ; SOURCE LINE # 896
16C4 AF00        R     MOV     R7,control_mode_menu_len
16C6 7E00              MOV     R6,#00H
16C8 8E00        R     MOV     i,R6
16CA 8F00        R     MOV     i+01H,R7
16CC         ?C0203:
16CC E500        R     MOV     A,i+01H
16CE 4500        R     ORL     A,i
16D0 603E              JZ      ?C0204
                                           ; SOURCE LINE # 897
16D2 AF00        R     MOV     R7,control_mode_menu_len
16D4 7E00              MOV     R6,#00H
16D6 C3                CLR     C
16D7 EF                MOV     A,R7
16D8 9500        R     SUBB    A,i+01H
16DA FF                MOV     R7,A
16DB EE                MOV     A,R6
16DC 9500        R     SUBB    A,i
16DE FE                MOV     R6,A
16DF 7400        R     MOV     A,#LOW control_mode_menu
16E1 2F                ADD     A,R7
16E2 F582              MOV     DPL,A
16E4 7400        R     MOV     A,#HIGH control_mode_menu
16E6 3E                ADDC    A,R6
16E7 F583              MOV     DPH,A
16E9 E0                MOVX    A,@DPTR
16EA FF                MOV     R7,A
16EB AE00        R     MOV     R6,control_mode_menu_len
16ED EE                MOV     A,R6
16EE FD                MOV     R5,A
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 117 

16EF 7C00              MOV     R4,#00H
16F1 C3                CLR     C
16F2 ED                MOV     A,R5
16F3 9500        R     SUBB    A,i+01H
16F5 FD                MOV     R5,A
16F6 EC                MOV     A,R4
16F7 9500        R     SUBB    A,i
16F9 FC                MOV     R4,A
16FA 7400        R     MOV     A,#LOW packet_data+057AH
16FC 2D                ADD     A,R5
16FD F582              MOV     DPL,A
16FF 7400        R     MOV     A,#HIGH packet_data+057AH
1701 3C                ADDC    A,R4
1702 F583              MOV     DPH,A
1704 EF                MOV     A,R7
1705 F0                MOVX    @DPTR,A
1706 E500        R     MOV     A,i+01H
1708 1500        R     DEC     i+01H
170A 7002              JNZ     ?C0439
170C 1500        R     DEC     i
170E         ?C0439:
170E 80BC              SJMP    ?C0203
1710         ?C0204:
                                           ; SOURCE LINE # 899
1710 AF00        R     MOV     R7,yes_no_menu_len
1712 7E00              MOV     R6,#00H
1714 8E00        R     MOV     i,R6
1716 8F00        R     MOV     i+01H,R7
1718         ?C0206:
1718 E500        R     MOV     A,i+01H
171A 4500        R     ORL     A,i
171C 603E              JZ      ?C0207
                                           ; SOURCE LINE # 900
171E AF00        R     MOV     R7,yes_no_menu_len
1720 7E00              MOV     R6,#00H
1722 C3                CLR     C
1723 EF                MOV     A,R7
1724 9500        R     SUBB    A,i+01H
1726 FF                MOV     R7,A
1727 EE                MOV     A,R6
1728 9500        R     SUBB    A,i
172A FE                MOV     R6,A
172B 7400        R     MOV     A,#LOW yes_no_menu
172D 2F                ADD     A,R7
172E F582              MOV     DPL,A
1730 7400        R     MOV     A,#HIGH yes_no_menu
1732 3E                ADDC    A,R6
1733 F583              MOV     DPH,A
1735 E0                MOVX    A,@DPTR
1736 FF                MOV     R7,A
1737 AE00        R     MOV     R6,yes_no_menu_len
1739 EE                MOV     A,R6
173A FD                MOV     R5,A
173B 7C00              MOV     R4,#00H
173D C3                CLR     C
173E ED                MOV     A,R5
173F 9500        R     SUBB    A,i+01H
1741 FD                MOV     R5,A
1742 EC                MOV     A,R4
1743 9500        R     SUBB    A,i
1745 FC                MOV     R4,A
1746 7400        R     MOV     A,#LOW packet_data+0610H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 118 

1748 2D                ADD     A,R5
1749 F582              MOV     DPL,A
174B 7400        R     MOV     A,#HIGH packet_data+0610H
174D 3C                ADDC    A,R4
174E F583              MOV     DPH,A
1750 EF                MOV     A,R7
1751 F0                MOVX    @DPTR,A
1752 E500        R     MOV     A,i+01H
1754 1500        R     DEC     i+01H
1756 7002              JNZ     ?C0440
1758 1500        R     DEC     i
175A         ?C0440:
175A 80BC              SJMP    ?C0206
175C         ?C0207:
                                           ; SOURCE LINE # 902
175C AF00        R     MOV     R7,right_left_menu_len
175E 7E00              MOV     R6,#00H
1760 8E00        R     MOV     i,R6
1762 8F00        R     MOV     i+01H,R7
1764         ?C0209:
1764 E500        R     MOV     A,i+01H
1766 4500        R     ORL     A,i
1768 603E              JZ      ?C0210
                                           ; SOURCE LINE # 903
176A AF00        R     MOV     R7,right_left_menu_len
176C 7E00              MOV     R6,#00H
176E C3                CLR     C
176F EF                MOV     A,R7
1770 9500        R     SUBB    A,i+01H
1772 FF                MOV     R7,A
1773 EE                MOV     A,R6
1774 9500        R     SUBB    A,i
1776 FE                MOV     R6,A
1777 7400        R     MOV     A,#LOW right_left_menu
1779 2F                ADD     A,R7
177A F582              MOV     DPL,A
177C 7400        R     MOV     A,#HIGH right_left_menu
177E 3E                ADDC    A,R6
177F F583              MOV     DPH,A
1781 E0                MOVX    A,@DPTR
1782 FF                MOV     R7,A
1783 AE00        R     MOV     R6,right_left_menu_len
1785 EE                MOV     A,R6
1786 FD                MOV     R5,A
1787 7C00              MOV     R4,#00H
1789 C3                CLR     C
178A ED                MOV     A,R5
178B 9500        R     SUBB    A,i+01H
178D FD                MOV     R5,A
178E EC                MOV     A,R4
178F 9500        R     SUBB    A,i
1791 FC                MOV     R4,A
1792 7400        R     MOV     A,#LOW packet_data+06A6H
1794 2D                ADD     A,R5
1795 F582              MOV     DPL,A
1797 7400        R     MOV     A,#HIGH packet_data+06A6H
1799 3C                ADDC    A,R4
179A F583              MOV     DPH,A
179C EF                MOV     A,R7
179D F0                MOVX    @DPTR,A
179E E500        R     MOV     A,i+01H
17A0 1500        R     DEC     i+01H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 119 

17A2 7002              JNZ     ?C0441
17A4 1500        R     DEC     i
17A6         ?C0441:
17A6 80BC              SJMP    ?C0209
17A8         ?C0210:
                                           ; SOURCE LINE # 905
17A8 7B01              MOV     R3,#01H
17AA 7A00        R     MOV     R2,#HIGH packet_data
17AC 7900        R     MOV     R1,#LOW packet_data
17AE 900000      R     MOV     DPTR,#packet_lenght
17B1 E0                MOVX    A,@DPTR
17B2 FE                MOV     R6,A
17B3 A3                INC     DPTR
17B4 E0                MOVX    A,@DPTR
17B5 FF                MOV     R7,A
17B6 EF                MOV     A,R7
17B7 14                DEC     A
17B8 FD                MOV     R5,A
17B9 120000      E     LCALL   _LCRChecksum
17BC 900000      R     MOV     DPTR,#packet_lenght
17BF E0                MOVX    A,@DPTR
17C0 FC                MOV     R4,A
17C1 A3                INC     DPTR
17C2 E0                MOVX    A,@DPTR
17C3 FD                MOV     R5,A
17C4 7400        R     MOV     A,#LOW packet_data+0FFFFH
17C6 2D                ADD     A,R5
17C7 F582              MOV     DPL,A
17C9 7400        R     MOV     A,#HIGH packet_data+0FFFFH
17CB 3C                ADDC    A,R4
17CC F583              MOV     DPH,A
17CE EF                MOV     A,R7
17CF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 906
17D0 7B01              MOV     R3,#01H
17D2 7A00        R     MOV     R2,#HIGH packet_data
17D4 7900        R     MOV     R1,#LOW packet_data
17D6 900000      R     MOV     DPTR,#packet_lenght
17D9 E0                MOVX    A,@DPTR
17DA FC                MOV     R4,A
17DB A3                INC     DPTR
17DC E0                MOVX    A,@DPTR
17DD FD                MOV     R5,A
17DE 900000      R     MOV     DPTR,#?_commWrite?BYTE+05H
17E1 E4                CLR     A
17E2 F0                MOVX    @DPTR,A
17E3 120000      R     LCALL   _commWrite
                                           ; SOURCE LINE # 907
17E6 120000      E     LCALL   UART_RS485_ClearTxBuffer
                                           ; SOURCE LINE # 908
17E9 22                RET     
                                           ; SOURCE LINE # 911
17EA         ?C0212:
                                           ; SOURCE LINE # 912
17EA 900000      E     MOV     DPTR,#g_rx+03H
17ED E0                MOVX    A,@DPTR
17EE FF                MOV     R7,A
17EF 900000      E     MOV     DPTR,#g_mem+01H
17F2 EF                MOV     A,R7
17F3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 913
17F4 22                RET     
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 120 

                                           ; SOURCE LINE # 916
17F5         ?C0213:
                                           ; SOURCE LINE # 917
17F5 900000      E     MOV     DPTR,#c_mem+036H
17F8 E0                MOVX    A,@DPTR
17F9 FF                MOV     R7,A
17FA EF                MOV     A,R7
17FB 6403              XRL     A,#03H
17FD 604F              JZ      ?C0214
                                           ; SOURCE LINE # 918
17FF 7F00              MOV     R7,#00H
1801 7E00              MOV     R6,#00H
1803 7D80              MOV     R5,#080H
1805 7C47              MOV     R4,#047H
1807 900000      E     MOV     DPTR,#g_rx+03H
180A 120000      E     LCALL   ?C?LLDXDATA0
180D 120000      E     LCALL   ?C?FPMUL
1810 120000      E     LCALL   ?C?CASTF
1813 900000      E     MOV     DPTR,#g_mem+02H
1816 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 919
1819 7F00              MOV     R7,#00H
181B 7E00              MOV     R6,#00H
181D 7D80              MOV     R5,#080H
181F 7C47              MOV     R4,#047H
1821 900000      E     MOV     DPTR,#g_rx+07H
1824 120000      E     LCALL   ?C?LLDXDATA0
1827 120000      E     LCALL   ?C?FPMUL
182A 120000      E     LCALL   ?C?CASTF
182D 900000      E     MOV     DPTR,#g_mem+06H
1830 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 920
1833 7F00              MOV     R7,#00H
1835 7E00              MOV     R6,#00H
1837 7D80              MOV     R5,#080H
1839 7C47              MOV     R4,#047H
183B 900000      E     MOV     DPTR,#g_rx+0BH
183E 120000      E     LCALL   ?C?LLDXDATA0
1841 120000      E     LCALL   ?C?FPMUL
1844 120000      E     LCALL   ?C?CASTF
1847 900000      E     MOV     DPTR,#g_mem+0AH
184A 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 921
184D 22                RET     
184E         ?C0214:
                                           ; SOURCE LINE # 922
                                           ; SOURCE LINE # 923
184E 7F00              MOV     R7,#00H
1850 7E00              MOV     R6,#00H
1852 7D80              MOV     R5,#080H
1854 7C47              MOV     R4,#047H
1856 900000      E     MOV     DPTR,#g_rx+03H
1859 120000      E     LCALL   ?C?LLDXDATA0
185C 120000      E     LCALL   ?C?FPMUL
185F 120000      E     LCALL   ?C?CASTF
1862 900000      E     MOV     DPTR,#g_mem+01AH
1865 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 924
1868 7F00              MOV     R7,#00H
186A 7E00              MOV     R6,#00H
186C 7D80              MOV     R5,#080H
186E 7C47              MOV     R4,#047H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 121 

1870 900000      E     MOV     DPTR,#g_rx+07H
1873 120000      E     LCALL   ?C?LLDXDATA0
1876 120000      E     LCALL   ?C?FPMUL
1879 120000      E     LCALL   ?C?CASTF
187C 900000      E     MOV     DPTR,#g_mem+01EH
187F 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 925
1882 7F00              MOV     R7,#00H
1884 7E00              MOV     R6,#00H
1886 7D80              MOV     R5,#080H
1888 7C47              MOV     R4,#047H
188A 900000      E     MOV     DPTR,#g_rx+0BH
188D 120000      E     LCALL   ?C?LLDXDATA0
1890 120000      E     LCALL   ?C?FPMUL
1893 120000      E     LCALL   ?C?CASTF
1896 900000      E     MOV     DPTR,#g_mem+022H
1899 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 926
                                           ; SOURCE LINE # 927
189C 22                RET     
                                           ; SOURCE LINE # 930
189D         ?C0216:
                                           ; SOURCE LINE # 931
189D 900000      E     MOV     DPTR,#c_mem+036H
18A0 E0                MOVX    A,@DPTR
18A1 FF                MOV     R7,A
18A2 EF                MOV     A,R7
18A3 6403              XRL     A,#03H
18A5 604F              JZ      ?C0217
                                           ; SOURCE LINE # 932
18A7 7F00              MOV     R7,#00H
18A9 7E00              MOV     R6,#00H
18AB 7D80              MOV     R5,#080H
18AD 7C47              MOV     R4,#047H
18AF 900000      E     MOV     DPTR,#g_rx+03H
18B2 120000      E     LCALL   ?C?LLDXDATA0
18B5 120000      E     LCALL   ?C?FPMUL
18B8 120000      E     LCALL   ?C?CASTF
18BB 900000      E     MOV     DPTR,#g_mem+0EH
18BE 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 933
18C1 7F00              MOV     R7,#00H
18C3 7E00              MOV     R6,#00H
18C5 7D80              MOV     R5,#080H
18C7 7C47              MOV     R4,#047H
18C9 900000      E     MOV     DPTR,#g_rx+07H
18CC 120000      E     LCALL   ?C?LLDXDATA0
18CF 120000      E     LCALL   ?C?FPMUL
18D2 120000      E     LCALL   ?C?CASTF
18D5 900000      E     MOV     DPTR,#g_mem+012H
18D8 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 934
18DB 7F00              MOV     R7,#00H
18DD 7E00              MOV     R6,#00H
18DF 7D80              MOV     R5,#080H
18E1 7C47              MOV     R4,#047H
18E3 900000      E     MOV     DPTR,#g_rx+0BH
18E6 120000      E     LCALL   ?C?LLDXDATA0
18E9 120000      E     LCALL   ?C?FPMUL
18EC 120000      E     LCALL   ?C?CASTF
18EF 900000      E     MOV     DPTR,#g_mem+016H
18F2 120000      E     LCALL   ?C?LSTXDATA
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 122 

                                           ; SOURCE LINE # 935
18F5 22                RET     
18F6         ?C0217:
                                           ; SOURCE LINE # 936
                                           ; SOURCE LINE # 937
18F6 7F00              MOV     R7,#00H
18F8 7E00              MOV     R6,#00H
18FA 7D80              MOV     R5,#080H
18FC 7C47              MOV     R4,#047H
18FE 900000      E     MOV     DPTR,#g_rx+03H
1901 120000      E     LCALL   ?C?LLDXDATA0
1904 120000      E     LCALL   ?C?FPMUL
1907 120000      E     LCALL   ?C?CASTF
190A 900000      E     MOV     DPTR,#g_mem+026H
190D 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 938
1910 7F00              MOV     R7,#00H
1912 7E00              MOV     R6,#00H
1914 7D80              MOV     R5,#080H
1916 7C47              MOV     R4,#047H
1918 900000      E     MOV     DPTR,#g_rx+07H
191B 120000      E     LCALL   ?C?LLDXDATA0
191E 120000      E     LCALL   ?C?FPMUL
1921 120000      E     LCALL   ?C?CASTF
1924 900000      E     MOV     DPTR,#g_mem+02AH
1927 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 939
192A 7F00              MOV     R7,#00H
192C 7E00              MOV     R6,#00H
192E 7D80              MOV     R5,#080H
1930 7C47              MOV     R4,#047H
1932 900000      E     MOV     DPTR,#g_rx+0BH
1935 120000      E     LCALL   ?C?LLDXDATA0
1938 120000      E     LCALL   ?C?FPMUL
193B 120000      E     LCALL   ?C?CASTF
193E 900000      E     MOV     DPTR,#g_mem+02EH
1941 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 940
                                           ; SOURCE LINE # 941
1944 22                RET     
                                           ; SOURCE LINE # 944
1945         ?C0219:
                                           ; SOURCE LINE # 945
1945 900000      E     MOV     DPTR,#g_rx+03H
1948 E0                MOVX    A,@DPTR
1949 FF                MOV     R7,A
194A EF                MOV     A,R7
194B 6007              JZ      ?C0220
                                           ; SOURCE LINE # 946
194D 900000      E     MOV     DPTR,#g_mem+034H
1950 7403              MOV     A,#03H
1952 F0                MOVX    @DPTR,A
1953 22                RET     
1954         ?C0220:
                                           ; SOURCE LINE # 948
1954 900000      E     MOV     DPTR,#g_mem+034H
1957 E4                CLR     A
1958 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 949
1959 22                RET     
                                           ; SOURCE LINE # 952
195A         ?C0222:
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 123 

                                           ; SOURCE LINE # 953
195A 900000      E     MOV     DPTR,#g_rx+03H
195D E0                MOVX    A,@DPTR
195E FF                MOV     R7,A
195F 900000      E     MOV     DPTR,#g_mem+035H
1962 EF                MOV     A,R7
1963 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 954
1964 22                RET     
                                           ; SOURCE LINE # 957
1965         ?C0223:
                                           ; SOURCE LINE # 958
1965 900000      E     MOV     DPTR,#g_rx+03H
1968 E0                MOVX    A,@DPTR
1969 FF                MOV     R7,A
196A 900000      E     MOV     DPTR,#g_mem+036H
196D EF                MOV     A,R7
196E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 959
196F 22                RET     
                                           ; SOURCE LINE # 962
1970         ?C0224:
                                           ; SOURCE LINE # 963
1970 750000      R     MOV     i,#00H
1973 750000      R     MOV     i+01H,#00H
1976         ?C0225:
1976 C3                CLR     C
1977 E500        R     MOV     A,i+01H
1979 9402              SUBB    A,#02H
197B E500        R     MOV     A,i
197D 9400              SUBB    A,#00H
197F 4003              JC      $ + 5H
1981 020000      R     LJMP    ?C0260
                                           ; SOURCE LINE # 964
1984 AE00        R     MOV     R6,i
1986 AF00        R     MOV     R7,i+01H
1988 7400        E     MOV     A,#LOW g_rx+03H
198A 2F                ADD     A,R7
198B F582              MOV     DPL,A
198D 7400        E     MOV     A,#HIGH g_rx+03H
198F 3E                ADDC    A,R6
1990 F583              MOV     DPH,A
1992 E0                MOVX    A,@DPTR
1993 FF                MOV     R7,A
1994 AC00        R     MOV     R4,i
1996 AD00        R     MOV     R5,i+01H
1998 7400        E     MOV     A,#LOW g_mem+037H
199A 2D                ADD     A,R5
199B F582              MOV     DPL,A
199D 7400        E     MOV     A,#HIGH g_mem+037H
199F 3C                ADDC    A,R4
19A0 F583              MOV     DPH,A
19A2 EF                MOV     A,R7
19A3 F0                MOVX    @DPTR,A
19A4 0500        R     INC     i+01H
19A6 E500        R     MOV     A,i+01H
19A8 7002              JNZ     ?C0442
19AA 0500        R     INC     i
19AC         ?C0442:
19AC 80C8              SJMP    ?C0225
                                           ; SOURCE LINE # 965
                                           ; SOURCE LINE # 968
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 124 

19AE         ?C0228:
                                           ; SOURCE LINE # 969
19AE 750000      R     MOV     i,#00H
19B1 750000      R     MOV     i+01H,#00H
19B4         ?C0229:
19B4 C3                CLR     C
19B5 E500        R     MOV     A,i+01H
19B7 9402              SUBB    A,#02H
19B9 E500        R     MOV     A,i
19BB 9400              SUBB    A,#00H
19BD 4003              JC      $ + 5H
19BF 020000      R     LJMP    ?C0230
                                           ; SOURCE LINE # 970
19C2 E500        R     MOV     A,i+01H
19C4 25E0              ADD     A,ACC
19C6 FF                MOV     R7,A
19C7 E500        R     MOV     A,i
19C9 33                RLC     A
19CA FE                MOV     R6,A
19CB 7400        E     MOV     A,#LOW g_rx+03H
19CD 2F                ADD     A,R7
19CE F582              MOV     DPL,A
19D0 7400        E     MOV     A,#HIGH g_rx+03H
19D2 3E                ADDC    A,R6
19D3 F583              MOV     DPH,A
19D5 E0                MOVX    A,@DPTR
19D6 FE                MOV     R6,A
19D7 A3                INC     DPTR
19D8 E0                MOVX    A,@DPTR
19D9 FF                MOV     R7,A
19DA EE                MOV     A,R6
19DB 33                RLC     A
19DC 95E0              SUBB    A,ACC
19DE FD                MOV     R5,A
19DF FC                MOV     R4,A
19E0 C004              PUSH    AR4
19E2 C005              PUSH    AR5
19E4 C006              PUSH    AR6
19E6 C007              PUSH    AR7
19E8 E500        R     MOV     A,i+01H
19EA AE00        R     MOV     R6,i
19EC 7802              MOV     R0,#02H
19EE         ?C0443:
19EE C3                CLR     C
19EF 33                RLC     A
19F0 CE                XCH     A,R6
19F1 33                RLC     A
19F2 CE                XCH     A,R6
19F3 D8F9              DJNZ    R0,?C0443
19F5 FF                MOV     R7,A
19F6 7400        E     MOV     A,#LOW g_mem+039H
19F8 2F                ADD     A,R7
19F9 F582              MOV     DPL,A
19FB 7400        E     MOV     A,#HIGH g_mem+039H
19FD 3E                ADDC    A,R6
19FE F583              MOV     DPH,A
1A00 D007              POP     AR7
1A02 D006              POP     AR6
1A04 D005              POP     AR5
1A06 D004              POP     AR4
1A08 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 971
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 125 

1A0B E500        R     MOV     A,i+01H
1A0D AE00        R     MOV     R6,i
1A0F 7802              MOV     R0,#02H
1A11         ?C0444:
1A11 C3                CLR     C
1A12 33                RLC     A
1A13 CE                XCH     A,R6
1A14 33                RLC     A
1A15 CE                XCH     A,R6
1A16 D8F9              DJNZ    R0,?C0444
1A18 FF                MOV     R7,A
1A19 7400        E     MOV     A,#LOW g_mem+039H
1A1B 2F                ADD     A,R7
1A1C F582              MOV     DPL,A
1A1E 7400        E     MOV     A,#HIGH g_mem+039H
1A20 3E                ADDC    A,R6
1A21 F583              MOV     DPH,A
1A23 C083              PUSH    DPH
1A25 C082              PUSH    DPL
1A27 120000      E     LCALL   ?C?LLDXDATA
1A2A AA00        R     MOV     R2,i
1A2C AB00        R     MOV     R3,i+01H
1A2E 7400        E     MOV     A,#LOW g_mem+037H
1A30 2B                ADD     A,R3
1A31 F582              MOV     DPL,A
1A33 7400        E     MOV     A,#HIGH g_mem+037H
1A35 3A                ADDC    A,R2
1A36 F583              MOV     DPH,A
1A38 E0                MOVX    A,@DPTR
1A39 F9                MOV     R1,A
1A3A A801              MOV     R0,AR1
1A3C 120000      E     LCALL   ?C?LSHL
1A3F D082              POP     DPL
1A41 D083              POP     DPH
1A43 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 973
1A46 AE00        R     MOV     R6,i
1A48 AF00        R     MOV     R7,i+01H
1A4A 7400        E     MOV     A,#LOW g_meas+0CH
1A4C 2F                ADD     A,R7
1A4D F582              MOV     DPL,A
1A4F 7400        E     MOV     A,#HIGH g_meas+0CH
1A51 3E                ADDC    A,R6
1A52 F583              MOV     DPH,A
1A54 E4                CLR     A
1A55 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 974
1A56 0500        R     INC     i+01H
1A58 E500        R     MOV     A,i+01H
1A5A 7002              JNZ     ?C0445
1A5C 0500        R     INC     i
1A5E         ?C0445:
1A5E 020000      R     LJMP    ?C0229
1A61         ?C0230:
                                           ; SOURCE LINE # 975
1A61 D200        E     SETB    reset_last_value_flag
                                           ; SOURCE LINE # 976
1A63 22                RET     
                                           ; SOURCE LINE # 979
1A64         ?C0232:
                                           ; SOURCE LINE # 980
1A64 750000      R     MOV     i,#00H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 126 

1A67 750000      R     MOV     i+01H,#00H
1A6A         ?C0233:
1A6A C3                CLR     C
1A6B E500        R     MOV     A,i+01H
1A6D 9402              SUBB    A,#02H
1A6F E500        R     MOV     A,i
1A71 9400              SUBB    A,#00H
1A73 4003              JC      $ + 5H
1A75 020000      R     LJMP    ?C0260
                                           ; SOURCE LINE # 981
1A78 E500        R     MOV     A,i+01H
1A7A AE00        R     MOV     R6,i
1A7C 7802              MOV     R0,#02H
1A7E         ?C0446:
1A7E C3                CLR     C
1A7F 33                RLC     A
1A80 CE                XCH     A,R6
1A81 33                RLC     A
1A82 CE                XCH     A,R6
1A83 D8F9              DJNZ    R0,?C0446
1A85 FF                MOV     R7,A
1A86 7400        E     MOV     A,#LOW g_rx+03H
1A88 2F                ADD     A,R7
1A89 F582              MOV     DPL,A
1A8B 7400        E     MOV     A,#HIGH g_rx+03H
1A8D 3E                ADDC    A,R6
1A8E F583              MOV     DPH,A
1A90 120000      E     LCALL   ?C?LLDXDATA
1A93 C004              PUSH    AR4
1A95 C005              PUSH    AR5
1A97 C006              PUSH    AR6
1A99 C007              PUSH    AR7
1A9B E500        R     MOV     A,i+01H
1A9D AE00        R     MOV     R6,i
1A9F 7802              MOV     R0,#02H
1AA1         ?C0447:
1AA1 C3                CLR     C
1AA2 33                RLC     A
1AA3 CE                XCH     A,R6
1AA4 33                RLC     A
1AA5 CE                XCH     A,R6
1AA6 D8F9              DJNZ    R0,?C0447
1AA8 FF                MOV     R7,A
1AA9 7400        E     MOV     A,#LOW g_mem+041H
1AAB 2F                ADD     A,R7
1AAC F582              MOV     DPL,A
1AAE 7400        E     MOV     A,#HIGH g_mem+041H
1AB0 3E                ADDC    A,R6
1AB1 F583              MOV     DPH,A
1AB3 D007              POP     AR7
1AB5 D006              POP     AR6
1AB7 D005              POP     AR5
1AB9 D004              POP     AR4
1ABB 120000      E     LCALL   ?C?LSTXDATA
1ABE 0500        R     INC     i+01H
1AC0 E500        R     MOV     A,i+01H
1AC2 7002              JNZ     ?C0448
1AC4 0500        R     INC     i
1AC6         ?C0448:
1AC6 80A2              SJMP    ?C0233
                                           ; SOURCE LINE # 982
                                           ; SOURCE LINE # 985
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 127 

1AC8         ?C0236:
                                           ; SOURCE LINE # 986
1AC8 900000      E     MOV     DPTR,#g_rx+03H
1ACB E0                MOVX    A,@DPTR
1ACC FF                MOV     R7,A
1ACD 900000      E     MOV     DPTR,#g_mem+049H
1AD0 EF                MOV     A,R7
1AD1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 987
1AD2 22                RET     
                                           ; SOURCE LINE # 990
1AD3         ?C0237:
                                           ; SOURCE LINE # 991
1AD3 750000      R     MOV     i,#00H
1AD6 750000      R     MOV     i+01H,#00H
1AD9         ?C0238:
1AD9 C3                CLR     C
1ADA E500        R     MOV     A,i+01H
1ADC 9402              SUBB    A,#02H
1ADE E500        R     MOV     A,i
1AE0 9400              SUBB    A,#00H
1AE2 4003              JC      $ + 5H
1AE4 020000      R     LJMP    ?C0260
                                           ; SOURCE LINE # 992
1AE7 E500        R     MOV     A,i+01H
1AE9 AE00        R     MOV     R6,i
1AEB 7803              MOV     R0,#03H
1AED         ?C0449:
1AED C3                CLR     C
1AEE 33                RLC     A
1AEF CE                XCH     A,R6
1AF0 33                RLC     A
1AF1 CE                XCH     A,R6
1AF2 D8F9              DJNZ    R0,?C0449
1AF4 FF                MOV     R7,A
1AF5 7400        E     MOV     A,#LOW g_rx+03H
1AF7 2F                ADD     A,R7
1AF8 F582              MOV     DPL,A
1AFA 7400        E     MOV     A,#HIGH g_rx+03H
1AFC 3E                ADDC    A,R6
1AFD F583              MOV     DPH,A
1AFF 120000      E     LCALL   ?C?LLDXDATA
1B02 C004              PUSH    AR4
1B04 C005              PUSH    AR5
1B06 C006              PUSH    AR6
1B08 C007              PUSH    AR7
1B0A E500        R     MOV     A,i+01H
1B0C AE00        R     MOV     R6,i
1B0E 7802              MOV     R0,#02H
1B10         ?C0450:
1B10 C3                CLR     C
1B11 33                RLC     A
1B12 CE                XCH     A,R6
1B13 33                RLC     A
1B14 CE                XCH     A,R6
1B15 D8F9              DJNZ    R0,?C0450
1B17 FF                MOV     R7,A
1B18 7400        E     MOV     A,#LOW g_mem+04AH
1B1A 2F                ADD     A,R7
1B1B F582              MOV     DPL,A
1B1D 7400        E     MOV     A,#HIGH g_mem+04AH
1B1F 3E                ADDC    A,R6
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 128 

1B20 F583              MOV     DPH,A
1B22 D007              POP     AR7
1B24 D006              POP     AR6
1B26 D005              POP     AR5
1B28 D004              POP     AR4
1B2A 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 993
1B2D E500        R     MOV     A,i+01H
1B2F AE00        R     MOV     R6,i
1B31 7803              MOV     R0,#03H
1B33         ?C0451:
1B33 C3                CLR     C
1B34 33                RLC     A
1B35 CE                XCH     A,R6
1B36 33                RLC     A
1B37 CE                XCH     A,R6
1B38 D8F9              DJNZ    R0,?C0451
1B3A FF                MOV     R7,A
1B3B 7400        E     MOV     A,#LOW g_rx+07H
1B3D 2F                ADD     A,R7
1B3E F582              MOV     DPL,A
1B40 7400        E     MOV     A,#HIGH g_rx+07H
1B42 3E                ADDC    A,R6
1B43 F583              MOV     DPH,A
1B45 120000      E     LCALL   ?C?LLDXDATA
1B48 C004              PUSH    AR4
1B4A C005              PUSH    AR5
1B4C C006              PUSH    AR6
1B4E C007              PUSH    AR7
1B50 E500        R     MOV     A,i+01H
1B52 AE00        R     MOV     R6,i
1B54 7802              MOV     R0,#02H
1B56         ?C0452:
1B56 C3                CLR     C
1B57 33                RLC     A
1B58 CE                XCH     A,R6
1B59 33                RLC     A
1B5A CE                XCH     A,R6
1B5B D8F9              DJNZ    R0,?C0452
1B5D FF                MOV     R7,A
1B5E 7400        E     MOV     A,#LOW g_mem+052H
1B60 2F                ADD     A,R7
1B61 F582              MOV     DPL,A
1B63 7400        E     MOV     A,#HIGH g_mem+052H
1B65 3E                ADDC    A,R6
1B66 F583              MOV     DPH,A
1B68 D007              POP     AR7
1B6A D006              POP     AR6
1B6C D005              POP     AR5
1B6E D004              POP     AR4
1B70 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 995
1B73 E500        R     MOV     A,i+01H
1B75 AE00        R     MOV     R6,i
1B77 7802              MOV     R0,#02H
1B79         ?C0453:
1B79 C3                CLR     C
1B7A 33                RLC     A
1B7B CE                XCH     A,R6
1B7C 33                RLC     A
1B7D CE                XCH     A,R6
1B7E D8F9              DJNZ    R0,?C0453
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 129 

1B80 FF                MOV     R7,A
1B81 7400        E     MOV     A,#LOW g_mem+04AH
1B83 2F                ADD     A,R7
1B84 F582              MOV     DPL,A
1B86 7400        E     MOV     A,#HIGH g_mem+04AH
1B88 3E                ADDC    A,R6
1B89 F583              MOV     DPH,A
1B8B C083              PUSH    DPH
1B8D C082              PUSH    DPL
1B8F 120000      E     LCALL   ?C?LLDXDATA
1B92 AA00        R     MOV     R2,i
1B94 AB00        R     MOV     R3,i+01H
1B96 7400        E     MOV     A,#LOW g_mem+037H
1B98 2B                ADD     A,R3
1B99 F582              MOV     DPL,A
1B9B 7400        E     MOV     A,#HIGH g_mem+037H
1B9D 3A                ADDC    A,R2
1B9E F583              MOV     DPH,A
1BA0 E0                MOVX    A,@DPTR
1BA1 F9                MOV     R1,A
1BA2 A801              MOV     R0,AR1
1BA4 120000      E     LCALL   ?C?LSHL
1BA7 D082              POP     DPL
1BA9 D083              POP     DPH
1BAB 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 996
1BAE E500        R     MOV     A,i+01H
1BB0 AE00        R     MOV     R6,i
1BB2 7802              MOV     R0,#02H
1BB4         ?C0454:
1BB4 C3                CLR     C
1BB5 33                RLC     A
1BB6 CE                XCH     A,R6
1BB7 33                RLC     A
1BB8 CE                XCH     A,R6
1BB9 D8F9              DJNZ    R0,?C0454
1BBB FF                MOV     R7,A
1BBC 7400        E     MOV     A,#LOW g_mem+052H
1BBE 2F                ADD     A,R7
1BBF F582              MOV     DPL,A
1BC1 7400        E     MOV     A,#HIGH g_mem+052H
1BC3 3E                ADDC    A,R6
1BC4 F583              MOV     DPH,A
1BC6 C083              PUSH    DPH
1BC8 C082              PUSH    DPL
1BCA 120000      E     LCALL   ?C?LLDXDATA
1BCD AA00        R     MOV     R2,i
1BCF AB00        R     MOV     R3,i+01H
1BD1 7400        E     MOV     A,#LOW g_mem+037H
1BD3 2B                ADD     A,R3
1BD4 F582              MOV     DPL,A
1BD6 7400        E     MOV     A,#HIGH g_mem+037H
1BD8 3A                ADDC    A,R2
1BD9 F583              MOV     DPH,A
1BDB E0                MOVX    A,@DPTR
1BDC F9                MOV     R1,A
1BDD A801              MOV     R0,AR1
1BDF 120000      E     LCALL   ?C?LSHL
1BE2 D082              POP     DPL
1BE4 D083              POP     DPH
1BE6 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 997
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 130 

1BE9 0500        R     INC     i+01H
1BEB E500        R     MOV     A,i+01H
1BED 7002              JNZ     ?C0455
1BEF 0500        R     INC     i
1BF1         ?C0455:
1BF1 020000      R     LJMP    ?C0238
                                           ; SOURCE LINE # 998
                                           ; SOURCE LINE # 1001
1BF4         ?C0241:
                                           ; SOURCE LINE # 1002
1BF4 900000      E     MOV     DPTR,#g_rx+03H
1BF7 120000      E     LCALL   ?C?LLDXDATA
1BFA 900000      R     MOV     DPTR,#aux_int
1BFD 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1003
1C00 7F00              MOV     R7,#00H
1C02 7E00              MOV     R6,#00H
1C04 7D00              MOV     R5,#00H
1C06 7C00              MOV     R4,#00H
1C08 900000      R     MOV     DPTR,#aux_int
1C0B 120000      E     LCALL   ?C?LLDXDATA0
1C0E D3                SETB    C
1C0F 120000      E     LCALL   ?C?SLCMP
1C12 500C              JNC     ?C0242
                                           ; SOURCE LINE # 1004
1C14 900000      R     MOV     DPTR,#aux_int
1C17 120000      E     LCALL   ?C?LLDXDATA
1C1A 900000      E     MOV     DPTR,#g_mem+05EH
1C1D 120000      E     LCALL   ?C?LSTXDATA
1C20         ?C0242:
                                           ; SOURCE LINE # 1006
1C20 900000      E     MOV     DPTR,#g_rx+07H
1C23 120000      E     LCALL   ?C?LLDXDATA
1C26 900000      R     MOV     DPTR,#aux_int
1C29 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1007
1C2C 7F00              MOV     R7,#00H
1C2E 7E00              MOV     R6,#00H
1C30 7D00              MOV     R5,#00H
1C32 7C00              MOV     R4,#00H
1C34 900000      R     MOV     DPTR,#aux_int
1C37 120000      E     LCALL   ?C?LLDXDATA0
1C3A C3                CLR     C
1C3B 120000      E     LCALL   ?C?SLCMP
1C3E 5003              JNC     $ + 5H
1C40 020000      R     LJMP    ?C0260
                                           ; SOURCE LINE # 1008
1C43 900000      R     MOV     DPTR,#aux_int
1C46 120000      E     LCALL   ?C?LLDXDATA
1C49 900000      E     MOV     DPTR,#g_mem+062H
1C4C 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1009
1C4F 22                RET     
                                           ; SOURCE LINE # 1012
1C50         ?C0244:
                                           ; SOURCE LINE # 1013
1C50 900000      E     MOV     DPTR,#g_rx+03H
1C53 E0                MOVX    A,@DPTR
1C54 FE                MOV     R6,A
1C55 A3                INC     DPTR
1C56 E0                MOVX    A,@DPTR
1C57 FF                MOV     R7,A
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 131 

1C58 900000      E     MOV     DPTR,#g_mem+032H
1C5B EE                MOV     A,R6
1C5C F0                MOVX    @DPTR,A
1C5D A3                INC     DPTR
1C5E EF                MOV     A,R7
1C5F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1014
1C60 22                RET     
                                           ; SOURCE LINE # 1017
1C61         ?C0245:
                                           ; SOURCE LINE # 1018
1C61 900000      E     MOV     DPTR,#g_rx+03H
1C64 120000      E     LCALL   ?C?LLDXDATA
1C67 900000      E     MOV     DPTR,#g_mem+067H
1C6A 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1019
1C6D 22                RET     
                                           ; SOURCE LINE # 1022
1C6E         ?C0246:
                                           ; SOURCE LINE # 1023
1C6E 900000      E     MOV     DPTR,#g_rx+03H
1C71 E0                MOVX    A,@DPTR
1C72 FE                MOV     R6,A
1C73 A3                INC     DPTR
1C74 E0                MOVX    A,@DPTR
1C75 FF                MOV     R7,A
1C76 900000      E     MOV     DPTR,#g_mem+06BH
1C79 EE                MOV     A,R6
1C7A F0                MOVX    @DPTR,A
1C7B A3                INC     DPTR
1C7C EF                MOV     A,R7
1C7D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1024
1C7E 22                RET     
                                           ; SOURCE LINE # 1027
1C7F         ?C0247:
                                           ; SOURCE LINE # 1028
1C7F 900000      E     MOV     DPTR,#g_rx+03H
1C82 E0                MOVX    A,@DPTR
1C83 FE                MOV     R6,A
1C84 A3                INC     DPTR
1C85 E0                MOVX    A,@DPTR
1C86 FF                MOV     R7,A
1C87 900000      E     MOV     DPTR,#g_mem+06DH
1C8A EE                MOV     A,R6
1C8B F0                MOVX    @DPTR,A
1C8C A3                INC     DPTR
1C8D EF                MOV     A,R7
1C8E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1029
1C8F 22                RET     
                                           ; SOURCE LINE # 1032
1C90         ?C0248:
                                           ; SOURCE LINE # 1033
1C90 900000      E     MOV     DPTR,#g_rx+03H
1C93 E0                MOVX    A,@DPTR
1C94 FF                MOV     R7,A
1C95 900000      E     MOV     DPTR,#g_mem+066H
1C98 EF                MOV     A,R7
1C99 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1034
1C9A 900000      E     MOV     DPTR,#g_mem+066H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 132 

1C9D E0                MOVX    A,@DPTR
1C9E FF                MOV     R7,A
1C9F EF                MOV     A,R7
1CA0 7003              JNZ     $ + 5H
1CA2 020000      R     LJMP    ?C0260
                                           ; SOURCE LINE # 1035
1CA5 900000      E     MOV     DPTR,#g_mem+06FH
1CA8 E4                CLR     A
1CA9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1036
1CAA 900000      E     MOV     DPTR,#g_mem+079H
1CAD E4                CLR     A
1CAE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1037
                                           ; SOURCE LINE # 1038
1CAF 22                RET     
                                           ; SOURCE LINE # 1041
1CB0         ?C0250:
                                           ; SOURCE LINE # 1042
1CB0 900000      E     MOV     DPTR,#g_rx+03H
1CB3 E0                MOVX    A,@DPTR
1CB4 FE                MOV     R6,A
1CB5 A3                INC     DPTR
1CB6 E0                MOVX    A,@DPTR
1CB7 FF                MOV     R7,A
1CB8 900000      E     MOV     DPTR,#g_mem+07AH
1CBB EE                MOV     A,R6
1CBC F0                MOVX    @DPTR,A
1CBD A3                INC     DPTR
1CBE EF                MOV     A,R7
1CBF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1043
1CC0 22                RET     
                                           ; SOURCE LINE # 1046
1CC1         ?C0251:
                                           ; SOURCE LINE # 1047
1CC1 900000      E     MOV     DPTR,#g_rx+03H
1CC4 E0                MOVX    A,@DPTR
1CC5 FF                MOV     R7,A
1CC6 900000      E     MOV     DPTR,#g_mem+06FH
1CC9 EF                MOV     A,R7
1CCA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1048
1CCB 900000      E     MOV     DPTR,#g_mem+06FH
1CCE E0                MOVX    A,@DPTR
1CCF FF                MOV     R7,A
1CD0 EF                MOV     A,R7
1CD1 6064              JZ      ?C0260
                                           ; SOURCE LINE # 1049
1CD3 900000      E     MOV     DPTR,#g_mem+066H
1CD6 E4                CLR     A
1CD7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1050
1CD8 900000      E     MOV     DPTR,#g_mem+079H
1CDB E4                CLR     A
1CDC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1051
                                           ; SOURCE LINE # 1052
1CDD 22                RET     
                                           ; SOURCE LINE # 1055
1CDE         ?C0253:
                                           ; SOURCE LINE # 1056
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 133 

1CDE 900000      E     MOV     DPTR,#g_rx+03H
1CE1 120000      E     LCALL   ?C?LLDXDATA
1CE4 900000      E     MOV     DPTR,#g_mem+070H
1CE7 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1057
1CEA 22                RET     
                                           ; SOURCE LINE # 1060
1CEB         ?C0254:
                                           ; SOURCE LINE # 1061
1CEB 900000      E     MOV     DPTR,#g_rx+03H
1CEE 120000      E     LCALL   ?C?LLDXDATA
1CF1 900000      E     MOV     DPTR,#g_mem+074H
1CF4 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1062
1CF7 22                RET     
                                           ; SOURCE LINE # 1064
1CF8         ?C0255:
                                           ; SOURCE LINE # 1065
1CF8 900000      E     MOV     DPTR,#g_rx+03H
1CFB E0                MOVX    A,@DPTR
1CFC FF                MOV     R7,A
1CFD 900000      E     MOV     DPTR,#g_mem+078H
1D00 EF                MOV     A,R7
1D01 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1066
1D02 22                RET     
                                           ; SOURCE LINE # 1068
1D03         ?C0256:
                                           ; SOURCE LINE # 1069
1D03 900000      E     MOV     DPTR,#g_rx+03H
1D06 E0                MOVX    A,@DPTR
1D07 FF                MOV     R7,A
1D08 900000      E     MOV     DPTR,#g_mem+079H
1D0B EF                MOV     A,R7
1D0C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1070
1D0D 900000      E     MOV     DPTR,#g_mem+079H
1D10 E0                MOVX    A,@DPTR
1D11 FF                MOV     R7,A
1D12 EF                MOV     A,R7
1D13 6022              JZ      ?C0260
                                           ; SOURCE LINE # 1071
1D15 900000      E     MOV     DPTR,#g_mem+066H
1D18 E4                CLR     A
1D19 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1072
1D1A 900000      E     MOV     DPTR,#g_mem+06FH
1D1D E4                CLR     A
1D1E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1073
                                           ; SOURCE LINE # 1074
1D1F 22                RET     
                                           ; SOURCE LINE # 1076
1D20         ?C0258:
                                           ; SOURCE LINE # 1077
1D20 900000      E     MOV     DPTR,#g_rx+03H
1D23 120000      E     LCALL   ?C?LLDXDATA
1D26 900000      E     MOV     DPTR,#g_mem+07CH
1D29 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1078
1D2C 22                RET     
                                           ; SOURCE LINE # 1080
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 134 

1D2D         ?C0259:
                                           ; SOURCE LINE # 1081
1D2D 900000      E     MOV     DPTR,#g_rx+03H
1D30 E0                MOVX    A,@DPTR
1D31 FF                MOV     R7,A
1D32 900000      E     MOV     DPTR,#g_mem+080H
1D35 EF                MOV     A,R7
1D36 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1082
                                           ; SOURCE LINE # 1083
                                           ; SOURCE LINE # 1084
1D37         ?C0260:
1D37 22                RET     
             ; FUNCTION _get_param_list (END)

             ; FUNCTION _infoPrepare (BEGIN)
                                           ; SOURCE LINE # 1090
0000 900000      R     MOV     DPTR,#info_string
0003 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 1091
                                           ; SOURCE LINE # 1096
0006 7BFF              MOV     R3,#0FFH
0008 7A00        R     MOV     R2,#HIGH ?SC_94
000A 7900        R     MOV     R1,#LOW ?SC_94
000C C003              PUSH    AR3
000E C002              PUSH    AR2
0010 C001              PUSH    AR1
0012 900000      R     MOV     DPTR,#info_string
0015 120000      E     LCALL   ?C?PLDXDATA
0018 A801              MOV     R0,AR1
001A AC02              MOV     R4,AR2
001C AD03              MOV     R5,AR3
001E D001              POP     AR1
0020 D002              POP     AR2
0022 D003              POP     AR3
0024 120000      E     LCALL   ?C?STRCPYAMD
                                           ; SOURCE LINE # 1097
0027 900000      R     MOV     DPTR,#info_string
002A 120000      E     LCALL   ?C?PLDXDATA
002D C003              PUSH    AR3
002F C002              PUSH    AR2
0031 C001              PUSH    AR1
0033 7BFF              MOV     R3,#0FFH
0035 7A00        R     MOV     R2,#HIGH ?SC_95
0037 7900        R     MOV     R1,#LOW ?SC_95
0039 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
003C 120000      E     LCALL   ?C?PSTXDATA
003F D001              POP     AR1
0041 D002              POP     AR2
0043 D003              POP     AR3
0045 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1098
0048 900000      R     MOV     DPTR,#info_string
004B 120000      E     LCALL   ?C?PLDXDATA
004E C003              PUSH    AR3
0050 C002              PUSH    AR2
0052 C001              PUSH    AR1
0054 7BFF              MOV     R3,#0FFH
0056 7A00        R     MOV     R2,#HIGH ?SC_98
0058 7900        R     MOV     R1,#LOW ?SC_98
005A 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
005D 120000      E     LCALL   ?C?PSTXDATA
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 135 

0060 D001              POP     AR1
0062 D002              POP     AR2
0064 D003              POP     AR3
0066 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1099
0069 900000      R     MOV     DPTR,#info_string
006C 120000      E     LCALL   ?C?PLDXDATA
006F C003              PUSH    AR3
0071 C002              PUSH    AR2
0073 C001              PUSH    AR1
0075 7BFF              MOV     R3,#0FFH
0077 7A00        R     MOV     R2,#HIGH ?SC_117
0079 7900        R     MOV     R1,#LOW ?SC_117
007B 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
007E 120000      E     LCALL   ?C?PSTXDATA
0081 D001              POP     AR1
0083 D002              POP     AR2
0085 D003              POP     AR3
0087 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1100
008A 900000      R     MOV     DPTR,#info_string
008D 120000      E     LCALL   ?C?PLDXDATA
0090 C003              PUSH    AR3
0092 C002              PUSH    AR2
0094 C001              PUSH    AR1
0096 7BFF              MOV     R3,#0FFH
0098 7A00        R     MOV     R2,#HIGH ?SC_133
009A 7900        R     MOV     R1,#LOW ?SC_133
009C 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
009F 120000      E     LCALL   ?C?PSTXDATA
00A2 D001              POP     AR1
00A4 D002              POP     AR2
00A6 D003              POP     AR3
00A8 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1102
00AB 900000      R     MOV     DPTR,#info_string
00AE 120000      E     LCALL   ?C?PLDXDATA
00B1 C003              PUSH    AR3
00B3 C002              PUSH    AR2
00B5 C001              PUSH    AR1
00B7 7BFF              MOV     R3,#0FFH
00B9 7A00        R     MOV     R2,#HIGH ?SC_139
00BB 7900        R     MOV     R1,#LOW ?SC_139
00BD 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
00C0 120000      E     LCALL   ?C?PSTXDATA
00C3 D001              POP     AR1
00C5 D002              POP     AR2
00C7 D003              POP     AR3
00C9 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1103
00CC 7B01              MOV     R3,#01H
00CE 7A00        R     MOV     R2,#HIGH str
00D0 7900        R     MOV     R1,#LOW str
00D2 C003              PUSH    AR3
00D4 C002              PUSH    AR2
00D6 C001              PUSH    AR1
00D8 7BFF              MOV     R3,#0FFH
00DA 7A00        R     MOV     R2,#HIGH ?SC_153
00DC 7900        R     MOV     R1,#LOW ?SC_153
00DE 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
00E1 120000      E     LCALL   ?C?PSTXDATA
00E4 900000      E     MOV     DPTR,#c_mem+01H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 136 

00E7 E0                MOVX    A,@DPTR
00E8 FF                MOV     R7,A
00E9 7E00              MOV     R6,#00H
00EB 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
00EE EE                MOV     A,R6
00EF F0                MOVX    @DPTR,A
00F0 A3                INC     DPTR
00F1 EF                MOV     A,R7
00F2 F0                MOVX    @DPTR,A
00F3 D001              POP     AR1
00F5 D002              POP     AR2
00F7 D003              POP     AR3
00F9 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 1104
00FC 900000      R     MOV     DPTR,#info_string
00FF 120000      E     LCALL   ?C?PLDXDATA
0102 C003              PUSH    AR3
0104 C002              PUSH    AR2
0106 C001              PUSH    AR1
0108 7B01              MOV     R3,#01H
010A 7A00        R     MOV     R2,#HIGH str
010C 7900        R     MOV     R1,#LOW str
010E 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0111 120000      E     LCALL   ?C?PSTXDATA
0114 D001              POP     AR1
0116 D002              POP     AR2
0118 D003              POP     AR3
011A 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1105
011D 7B01              MOV     R3,#01H
011F 7A00        R     MOV     R2,#HIGH str
0121 7900        R     MOV     R1,#LOW str
0123 C003              PUSH    AR3
0125 C002              PUSH    AR2
0127 C001              PUSH    AR1
0129 7BFF              MOV     R3,#0FFH
012B 7A00        R     MOV     R2,#HIGH ?SC_162
012D 7900        R     MOV     R1,#LOW ?SC_162
012F 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
0132 120000      E     LCALL   ?C?PSTXDATA
0135 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
0138 E4                CLR     A
0139 F0                MOVX    @DPTR,A
013A A3                INC     DPTR
013B 7402              MOV     A,#02H
013D F0                MOVX    @DPTR,A
013E D001              POP     AR1
0140 D002              POP     AR2
0142 D003              POP     AR3
0144 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 1106
0147 900000      R     MOV     DPTR,#info_string
014A 120000      E     LCALL   ?C?PLDXDATA
014D C003              PUSH    AR3
014F C002              PUSH    AR2
0151 C001              PUSH    AR1
0153 7B01              MOV     R3,#01H
0155 7A00        R     MOV     R2,#HIGH str
0157 7900        R     MOV     R1,#LOW str
0159 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
015C 120000      E     LCALL   ?C?PSTXDATA
015F D001              POP     AR1
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 137 

0161 D002              POP     AR2
0163 D003              POP     AR3
0165 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1107
0168 7B01              MOV     R3,#01H
016A 7A00        R     MOV     R2,#HIGH str
016C 7900        R     MOV     R1,#LOW str
016E C003              PUSH    AR3
0170 C002              PUSH    AR2
0172 C001              PUSH    AR1
0174 7BFF              MOV     R3,#0FFH
0176 7A00        R     MOV     R2,#HIGH ?SC_186
0178 7900        R     MOV     R1,#LOW ?SC_186
017A 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
017D 120000      E     LCALL   ?C?PSTXDATA
0180 900000      E     MOV     DPTR,#c_mem+07AH
0183 E0                MOVX    A,@DPTR
0184 FE                MOV     R6,A
0185 A3                INC     DPTR
0186 E0                MOVX    A,@DPTR
0187 FF                MOV     R7,A
0188 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
018B EE                MOV     A,R6
018C F0                MOVX    @DPTR,A
018D A3                INC     DPTR
018E EF                MOV     A,R7
018F F0                MOVX    @DPTR,A
0190 D001              POP     AR1
0192 D002              POP     AR2
0194 D003              POP     AR3
0196 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 1108
0199 900000      R     MOV     DPTR,#info_string
019C 120000      E     LCALL   ?C?PLDXDATA
019F C003              PUSH    AR3
01A1 C002              PUSH    AR2
01A3 C001              PUSH    AR1
01A5 7B01              MOV     R3,#01H
01A7 7A00        R     MOV     R2,#HIGH str
01A9 7900        R     MOV     R1,#LOW str
01AB 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
01AE 120000      E     LCALL   ?C?PSTXDATA
01B1 D001              POP     AR1
01B3 D002              POP     AR2
01B5 D003              POP     AR3
01B7 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1109
01BA 7B01              MOV     R3,#01H
01BC 7A00        R     MOV     R2,#HIGH str
01BE 7900        R     MOV     R1,#LOW str
01C0 C003              PUSH    AR3
01C2 C002              PUSH    AR2
01C4 C001              PUSH    AR1
01C6 7BFF              MOV     R3,#0FFH
01C8 7A00        R     MOV     R2,#HIGH ?SC_207
01CA 7900        R     MOV     R1,#LOW ?SC_207
01CC 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
01CF 120000      E     LCALL   ?C?PSTXDATA
01D2 900000      E     MOV     DPTR,#dev_pwm_limit
01D5 E0                MOVX    A,@DPTR
01D6 FF                MOV     R7,A
01D7 7E00              MOV     R6,#00H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 138 

01D9 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
01DC EE                MOV     A,R6
01DD F0                MOVX    @DPTR,A
01DE A3                INC     DPTR
01DF EF                MOV     A,R7
01E0 F0                MOVX    @DPTR,A
01E1 D001              POP     AR1
01E3 D002              POP     AR2
01E5 D003              POP     AR3
01E7 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 1110
01EA 900000      R     MOV     DPTR,#info_string
01ED 120000      E     LCALL   ?C?PLDXDATA
01F0 C003              PUSH    AR3
01F2 C002              PUSH    AR2
01F4 C001              PUSH    AR1
01F6 7B01              MOV     R3,#01H
01F8 7A00        R     MOV     R2,#HIGH str
01FA 7900        R     MOV     R1,#LOW str
01FC 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
01FF 120000      E     LCALL   ?C?PSTXDATA
0202 D001              POP     AR1
0204 D002              POP     AR2
0206 D003              POP     AR3
0208 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1111
020B 900000      R     MOV     DPTR,#info_string
020E 120000      E     LCALL   ?C?PLDXDATA
0211 C003              PUSH    AR3
0213 C002              PUSH    AR2
0215 C001              PUSH    AR1
0217 7BFF              MOV     R3,#0FFH
0219 7A00        R     MOV     R2,#HIGH ?SC_95
021B 7900        R     MOV     R1,#LOW ?SC_95
021D 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0220 120000      E     LCALL   ?C?PSTXDATA
0223 D001              POP     AR1
0225 D002              POP     AR2
0227 D003              POP     AR3
0229 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1113
022C 900000      R     MOV     DPTR,#info_string
022F 120000      E     LCALL   ?C?PLDXDATA
0232 C003              PUSH    AR3
0234 C002              PUSH    AR2
0236 C001              PUSH    AR1
0238 7BFF              MOV     R3,#0FFH
023A 7A00        R     MOV     R2,#HIGH ?SC_223
023C 7900        R     MOV     R1,#LOW ?SC_223
023E 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0241 120000      E     LCALL   ?C?PSTXDATA
0244 D001              POP     AR1
0246 D002              POP     AR2
0248 D003              POP     AR3
024A 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1114
024D 900000      R     MOV     DPTR,#info_string
0250 120000      E     LCALL   ?C?PLDXDATA
0253 C003              PUSH    AR3
0255 C002              PUSH    AR2
0257 C001              PUSH    AR1
0259 7BFF              MOV     R3,#0FFH
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 139 

025B 7A00        R     MOV     R2,#HIGH ?SC_236
025D 7900        R     MOV     R1,#LOW ?SC_236
025F 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0262 120000      E     LCALL   ?C?PSTXDATA
0265 D001              POP     AR1
0267 D002              POP     AR2
0269 D003              POP     AR3
026B 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1116
026E 750000      R     MOV     i,#00H
0271 750000      R     MOV     i+01H,#00H
0274         ?C0261:
0274 C3                CLR     C
0275 E500        R     MOV     A,i+01H
0277 9402              SUBB    A,#02H
0279 E500        R     MOV     A,i
027B 6480              XRL     A,#080H
027D 9480              SUBB    A,#080H
027F 4003              JC      $ + 5H
0281 020000      R     LJMP    ?C0262
                                           ; SOURCE LINE # 1117
0284 7B01              MOV     R3,#01H
0286 7A00        R     MOV     R2,#HIGH str
0288 7900        R     MOV     R1,#LOW str
028A C003              PUSH    AR3
028C C002              PUSH    AR2
028E C001              PUSH    AR1
0290 7BFF              MOV     R3,#0FFH
0292 7A00        R     MOV     R2,#HIGH ?SC_255
0294 7900        R     MOV     R1,#LOW ?SC_255
0296 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
0299 120000      E     LCALL   ?C?PSTXDATA
029C E500        R     MOV     A,i+01H
029E AE00        R     MOV     R6,i
02A0 7802              MOV     R0,#02H
02A2         ?C0456:
02A2 C3                CLR     C
02A3 33                RLC     A
02A4 CE                XCH     A,R6
02A5 33                RLC     A
02A6 CE                XCH     A,R6
02A7 D8F9              DJNZ    R0,?C0456
02A9 FF                MOV     R7,A
02AA 7400        E     MOV     A,#LOW g_refOld
02AC 2F                ADD     A,R7
02AD F582              MOV     DPL,A
02AF 7400        E     MOV     A,#HIGH g_refOld
02B1 3E                ADDC    A,R6
02B2 F583              MOV     DPH,A
02B4 120000      E     LCALL   ?C?LLDXDATA
02B7 AA00        R     MOV     R2,i
02B9 AB00        R     MOV     R3,i+01H
02BB 7400        E     MOV     A,#LOW c_mem+037H
02BD 2B                ADD     A,R3
02BE F582              MOV     DPL,A
02C0 7400        E     MOV     A,#HIGH c_mem+037H
02C2 3A                ADDC    A,R2
02C3 F583              MOV     DPH,A
02C5 E0                MOVX    A,@DPTR
02C6 F9                MOV     R1,A
02C7 A801              MOV     R0,AR1
02C9 120000      E     LCALL   ?C?SLSHR
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 140 

02CC 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
02CF EE                MOV     A,R6
02D0 F0                MOVX    @DPTR,A
02D1 A3                INC     DPTR
02D2 EF                MOV     A,R7
02D3 F0                MOVX    @DPTR,A
02D4 D001              POP     AR1
02D6 D002              POP     AR2
02D8 D003              POP     AR3
02DA 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 1118
02DD 900000      R     MOV     DPTR,#info_string
02E0 120000      E     LCALL   ?C?PLDXDATA
02E3 C003              PUSH    AR3
02E5 C002              PUSH    AR2
02E7 C001              PUSH    AR1
02E9 7B01              MOV     R3,#01H
02EB 7A00        R     MOV     R2,#HIGH str
02ED 7900        R     MOV     R1,#LOW str
02EF 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
02F2 120000      E     LCALL   ?C?PSTXDATA
02F5 D001              POP     AR1
02F7 D002              POP     AR2
02F9 D003              POP     AR3
02FB 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1119
02FE 0500        R     INC     i+01H
0300 E500        R     MOV     A,i+01H
0302 7002              JNZ     ?C0457
0304 0500        R     INC     i
0306         ?C0457:
0306 020000      R     LJMP    ?C0261
0309         ?C0262:
                                           ; SOURCE LINE # 1120
0309 900000      R     MOV     DPTR,#info_string
030C 120000      E     LCALL   ?C?PLDXDATA
030F C003              PUSH    AR3
0311 C002              PUSH    AR2
0313 C001              PUSH    AR1
0315 7BFF              MOV     R3,#0FFH
0317 7A00        R     MOV     R2,#HIGH ?SC_95
0319 7900        R     MOV     R1,#LOW ?SC_95
031B 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
031E 120000      E     LCALL   ?C?PSTXDATA
0321 D001              POP     AR1
0323 D002              POP     AR2
0325 D003              POP     AR3
0327 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1122
032A 7B01              MOV     R3,#01H
032C 7A00        R     MOV     R2,#HIGH str
032E 7900        R     MOV     R1,#LOW str
0330 C003              PUSH    AR3
0332 C002              PUSH    AR2
0334 C001              PUSH    AR1
0336 7BFF              MOV     R3,#0FFH
0338 7A00        R     MOV     R2,#HIGH ?SC_259
033A 7900        R     MOV     R1,#LOW ?SC_259
033C 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
033F 120000      E     LCALL   ?C?PSTXDATA
0342 D001              POP     AR1
0344 D002              POP     AR2
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 141 

0346 D003              POP     AR3
0348 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 1124
034B 900000      E     MOV     DPTR,#g_refOld+08H
034E E0                MOVX    A,@DPTR
034F FF                MOV     R7,A
0350 EF                MOV     A,R7
0351 5403              ANL     A,#03H
0353 FF                MOV     R7,A
0354 EF                MOV     A,R7
0355 6023              JZ      ?C0264
                                           ; SOURCE LINE # 1125
0357 7B01              MOV     R3,#01H
0359 7A00        R     MOV     R2,#HIGH str
035B 7900        R     MOV     R1,#LOW str
035D C003              PUSH    AR3
035F C002              PUSH    AR2
0361 C001              PUSH    AR1
0363 7BFF              MOV     R3,#0FFH
0365 7A00        R     MOV     R2,#HIGH ?SC_275
0367 7900        R     MOV     R1,#LOW ?SC_275
0369 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
036C 120000      E     LCALL   ?C?PSTXDATA
036F D001              POP     AR1
0371 D002              POP     AR2
0373 D003              POP     AR3
0375 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1126
0378 8021              SJMP    ?C0265
037A         ?C0264:
                                           ; SOURCE LINE # 1127
037A 7B01              MOV     R3,#01H
037C 7A00        R     MOV     R2,#HIGH str
037E 7900        R     MOV     R1,#LOW str
0380 C003              PUSH    AR3
0382 C002              PUSH    AR2
0384 C001              PUSH    AR1
0386 7BFF              MOV     R3,#0FFH
0388 7A00        R     MOV     R2,#HIGH ?SC_281
038A 7900        R     MOV     R1,#LOW ?SC_281
038C 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
038F 120000      E     LCALL   ?C?PSTXDATA
0392 D001              POP     AR1
0394 D002              POP     AR2
0396 D003              POP     AR3
0398 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1128
039B         ?C0265:
                                           ; SOURCE LINE # 1129
039B 900000      R     MOV     DPTR,#info_string
039E 120000      E     LCALL   ?C?PLDXDATA
03A1 C003              PUSH    AR3
03A3 C002              PUSH    AR2
03A5 C001              PUSH    AR1
03A7 7B01              MOV     R3,#01H
03A9 7A00        R     MOV     R2,#HIGH str
03AB 7900        R     MOV     R1,#LOW str
03AD 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
03B0 120000      E     LCALL   ?C?PSTXDATA
03B3 D001              POP     AR1
03B5 D002              POP     AR2
03B7 D003              POP     AR3
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 142 

03B9 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1132
03BC 900000      R     MOV     DPTR,#info_string
03BF 120000      E     LCALL   ?C?PLDXDATA
03C2 C003              PUSH    AR3
03C4 C002              PUSH    AR2
03C6 C001              PUSH    AR1
03C8 7BFF              MOV     R3,#0FFH
03CA 7A00        R     MOV     R2,#HIGH ?SC_286
03CC 7900        R     MOV     R1,#LOW ?SC_286
03CE 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
03D1 120000      E     LCALL   ?C?PSTXDATA
03D4 D001              POP     AR1
03D6 D002              POP     AR2
03D8 D003              POP     AR3
03DA 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1133
03DD 900000      R     MOV     DPTR,#info_string
03E0 120000      E     LCALL   ?C?PLDXDATA
03E3 C003              PUSH    AR3
03E5 C002              PUSH    AR2
03E7 C001              PUSH    AR1
03E9 7BFF              MOV     R3,#0FFH
03EB 7A00        R     MOV     R2,#HIGH ?SC_308
03ED 7900        R     MOV     R1,#LOW ?SC_308
03EF 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
03F2 120000      E     LCALL   ?C?PSTXDATA
03F5 D001              POP     AR1
03F7 D002              POP     AR2
03F9 D003              POP     AR3
03FB 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1134
03FE 750000      R     MOV     i,#00H
0401 750000      R     MOV     i+01H,#00H
0404         ?C0266:
0404 C3                CLR     C
0405 E500        R     MOV     A,i+01H
0407 9402              SUBB    A,#02H
0409 E500        R     MOV     A,i
040B 6480              XRL     A,#080H
040D 9480              SUBB    A,#080H
040F 4003              JC      $ + 5H
0411 020000      R     LJMP    ?C0267
                                           ; SOURCE LINE # 1136
0414 7B01              MOV     R3,#01H
0416 7A00        R     MOV     R2,#HIGH str
0418 7900        R     MOV     R1,#LOW str
041A C003              PUSH    AR3
041C C002              PUSH    AR2
041E C001              PUSH    AR1
0420 7BFF              MOV     R3,#0FFH
0422 7A00        R     MOV     R2,#HIGH ?SC_324
0424 7900        R     MOV     R1,#LOW ?SC_324
0426 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
0429 120000      E     LCALL   ?C?PSTXDATA
042C E500        R     MOV     A,i+01H
042E 2401              ADD     A,#01H
0430 FF                MOV     R7,A
0431 E500        R     MOV     A,i
0433 3400              ADDC    A,#00H
0435 FE                MOV     R6,A
0436 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 143 

0439 EE                MOV     A,R6
043A F0                MOVX    @DPTR,A
043B A3                INC     DPTR
043C EF                MOV     A,R7
043D F0                MOVX    @DPTR,A
043E E500        R     MOV     A,i+01H
0440 AE00        R     MOV     R6,i
0442 7802              MOV     R0,#02H
0444         ?C0458:
0444 C3                CLR     C
0445 33                RLC     A
0446 CE                XCH     A,R6
0447 33                RLC     A
0448 CE                XCH     A,R6
0449 D8F9              DJNZ    R0,?C0458
044B FF                MOV     R7,A
044C 7400        E     MOV     A,#LOW g_measOld
044E 2F                ADD     A,R7
044F F582              MOV     DPL,A
0451 7400        E     MOV     A,#HIGH g_measOld
0453 3E                ADDC    A,R6
0454 F583              MOV     DPH,A
0456 120000      E     LCALL   ?C?LLDXDATA
0459 AA00        R     MOV     R2,i
045B AB00        R     MOV     R3,i+01H
045D 7400        E     MOV     A,#LOW c_mem+037H
045F 2B                ADD     A,R3
0460 F582              MOV     DPL,A
0462 7400        E     MOV     A,#HIGH c_mem+037H
0464 3A                ADDC    A,R2
0465 F583              MOV     DPH,A
0467 E0                MOVX    A,@DPTR
0468 F9                MOV     R1,A
0469 A801              MOV     R0,AR1
046B 120000      E     LCALL   ?C?SLSHR
046E 900000      E     MOV     DPTR,#?_sprintf?BYTE+08H
0471 EE                MOV     A,R6
0472 F0                MOVX    @DPTR,A
0473 A3                INC     DPTR
0474 EF                MOV     A,R7
0475 F0                MOVX    @DPTR,A
0476 D001              POP     AR1
0478 D002              POP     AR2
047A D003              POP     AR3
047C 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 1137
047F 900000      R     MOV     DPTR,#info_string
0482 120000      E     LCALL   ?C?PLDXDATA
0485 C003              PUSH    AR3
0487 C002              PUSH    AR2
0489 C001              PUSH    AR1
048B 7B01              MOV     R3,#01H
048D 7A00        R     MOV     R2,#HIGH str
048F 7900        R     MOV     R1,#LOW str
0491 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0494 120000      E     LCALL   ?C?PSTXDATA
0497 D001              POP     AR1
0499 D002              POP     AR2
049B D003              POP     AR3
049D 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1138
04A0 900000      R     MOV     DPTR,#info_string
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 144 

04A3 120000      E     LCALL   ?C?PLDXDATA
04A6 C003              PUSH    AR3
04A8 C002              PUSH    AR2
04AA C001              PUSH    AR1
04AC 7BFF              MOV     R3,#0FFH
04AE 7A00        R     MOV     R2,#HIGH ?SC_95
04B0 7900        R     MOV     R1,#LOW ?SC_95
04B2 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
04B5 120000      E     LCALL   ?C?PSTXDATA
04B8 D001              POP     AR1
04BA D002              POP     AR2
04BC D003              POP     AR3
04BE 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1139
04C1 0500        R     INC     i+01H
04C3 E500        R     MOV     A,i+01H
04C5 7002              JNZ     ?C0459
04C7 0500        R     INC     i
04C9         ?C0459:
04C9 020000      R     LJMP    ?C0266
04CC         ?C0267:
                                           ; SOURCE LINE # 1140
04CC 7B01              MOV     R3,#01H
04CE 7A00        R     MOV     R2,#HIGH str
04D0 7900        R     MOV     R1,#LOW str
04D2 C003              PUSH    AR3
04D4 C002              PUSH    AR2
04D6 C001              PUSH    AR1
04D8 7BFF              MOV     R3,#0FFH
04DA 7A00        R     MOV     R2,#HIGH ?SC_333
04DC 7900        R     MOV     R1,#LOW ?SC_333
04DE 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
04E1 120000      E     LCALL   ?C?PSTXDATA
04E4 900000      E     MOV     DPTR,#dev_tension
04E7 120000      E     LCALL   ?C?LLDXDATA
04EA 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
04ED 120000      E     LCALL   ?C?LSTXDATA
04F0 D001              POP     AR1
04F2 D002              POP     AR2
04F4 D003              POP     AR3
04F6 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 1141
04F9 900000      R     MOV     DPTR,#info_string
04FC 120000      E     LCALL   ?C?PLDXDATA
04FF C003              PUSH    AR3
0501 C002              PUSH    AR2
0503 C001              PUSH    AR1
0505 7B01              MOV     R3,#01H
0507 7A00        R     MOV     R2,#HIGH str
0509 7900        R     MOV     R1,#LOW str
050B 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
050E 120000      E     LCALL   ?C?PSTXDATA
0511 D001              POP     AR1
0513 D002              POP     AR2
0515 D003              POP     AR3
0517 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1142
051A 900000      R     MOV     DPTR,#info_string
051D 120000      E     LCALL   ?C?PLDXDATA
0520 C003              PUSH    AR3
0522 C002              PUSH    AR2
0524 C001              PUSH    AR1
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 145 

0526 7BFF              MOV     R3,#0FFH
0528 7A00        R     MOV     R2,#HIGH ?SC_95
052A 7900        R     MOV     R1,#LOW ?SC_95
052C 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
052F 120000      E     LCALL   ?C?PSTXDATA
0532 D001              POP     AR1
0534 D002              POP     AR2
0536 D003              POP     AR3
0538 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1144
053B 7B01              MOV     R3,#01H
053D 7A00        R     MOV     R2,#HIGH str
053F 7900        R     MOV     R1,#LOW str
0541 C003              PUSH    AR3
0543 C002              PUSH    AR2
0545 C001              PUSH    AR1
0547 7BFF              MOV     R3,#0FFH
0549 7A00        R     MOV     R2,#HIGH ?SC_351
054B 7900        R     MOV     R1,#LOW ?SC_351
054D 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
0550 120000      E     LCALL   ?C?PSTXDATA
0553 900000      E     MOV     DPTR,#g_measOld+08H
0556 E0                MOVX    A,@DPTR
0557 FE                MOV     R6,A
0558 A3                INC     DPTR
0559 E0                MOVX    A,@DPTR
055A FF                MOV     R7,A
055B EE                MOV     A,R6
055C 33                RLC     A
055D 95E0              SUBB    A,ACC
055F FD                MOV     R5,A
0560 FC                MOV     R4,A
0561 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
0564 120000      E     LCALL   ?C?LSTXDATA
0567 D001              POP     AR1
0569 D002              POP     AR2
056B D003              POP     AR3
056D 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 1145
0570 900000      R     MOV     DPTR,#info_string
0573 120000      E     LCALL   ?C?PLDXDATA
0576 C003              PUSH    AR3
0578 C002              PUSH    AR2
057A C001              PUSH    AR1
057C 7B01              MOV     R3,#01H
057E 7A00        R     MOV     R2,#HIGH str
0580 7900        R     MOV     R1,#LOW str
0582 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0585 120000      E     LCALL   ?C?PSTXDATA
0588 D001              POP     AR1
058A D002              POP     AR2
058C D003              POP     AR3
058E 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1146
0591 900000      R     MOV     DPTR,#info_string
0594 120000      E     LCALL   ?C?PLDXDATA
0597 C003              PUSH    AR3
0599 C002              PUSH    AR2
059B C001              PUSH    AR1
059D 7BFF              MOV     R3,#0FFH
059F 7A00        R     MOV     R2,#HIGH ?SC_95
05A1 7900        R     MOV     R1,#LOW ?SC_95
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 146 

05A3 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
05A6 120000      E     LCALL   ?C?PSTXDATA
05A9 D001              POP     AR1
05AB D002              POP     AR2
05AD D003              POP     AR3
05AF 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1148
05B2 7B01              MOV     R3,#01H
05B4 7A00        R     MOV     R2,#HIGH str
05B6 7900        R     MOV     R1,#LOW str
05B8 C003              PUSH    AR3
05BA C002              PUSH    AR2
05BC C001              PUSH    AR1
05BE 7BFF              MOV     R3,#0FFH
05C0 7A00        R     MOV     R2,#HIGH ?SC_371
05C2 7900        R     MOV     R1,#LOW ?SC_371
05C4 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
05C7 120000      E     LCALL   ?C?PSTXDATA
05CA 900000      E     MOV     DPTR,#g_measOld+0AH
05CD E0                MOVX    A,@DPTR
05CE FE                MOV     R6,A
05CF A3                INC     DPTR
05D0 E0                MOVX    A,@DPTR
05D1 FF                MOV     R7,A
05D2 EE                MOV     A,R6
05D3 33                RLC     A
05D4 95E0              SUBB    A,ACC
05D6 FD                MOV     R5,A
05D7 FC                MOV     R4,A
05D8 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
05DB 120000      E     LCALL   ?C?LSTXDATA
05DE D001              POP     AR1
05E0 D002              POP     AR2
05E2 D003              POP     AR3
05E4 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 1149
05E7 900000      R     MOV     DPTR,#info_string
05EA 120000      E     LCALL   ?C?PLDXDATA
05ED C003              PUSH    AR3
05EF C002              PUSH    AR2
05F1 C001              PUSH    AR1
05F3 7B01              MOV     R3,#01H
05F5 7A00        R     MOV     R2,#HIGH str
05F7 7900        R     MOV     R1,#LOW str
05F9 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
05FC 120000      E     LCALL   ?C?PSTXDATA
05FF D001              POP     AR1
0601 D002              POP     AR2
0603 D003              POP     AR3
0605 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1150
0608 900000      R     MOV     DPTR,#info_string
060B 120000      E     LCALL   ?C?PLDXDATA
060E C003              PUSH    AR3
0610 C002              PUSH    AR2
0612 C001              PUSH    AR1
0614 7BFF              MOV     R3,#0FFH
0616 7A00        R     MOV     R2,#HIGH ?SC_95
0618 7900        R     MOV     R1,#LOW ?SC_95
061A 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
061D 120000      E     LCALL   ?C?PSTXDATA
0620 D001              POP     AR1
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 147 

0622 D002              POP     AR2
0624 D003              POP     AR3
0626 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1153
0629 900000      R     MOV     DPTR,#info_string
062C 120000      E     LCALL   ?C?PLDXDATA
062F C003              PUSH    AR3
0631 C002              PUSH    AR2
0633 C001              PUSH    AR1
0635 7BFF              MOV     R3,#0FFH
0637 7A00        R     MOV     R2,#HIGH ?SC_391
0639 7900        R     MOV     R1,#LOW ?SC_391
063B 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
063E 120000      E     LCALL   ?C?PSTXDATA
0641 D001              POP     AR1
0643 D002              POP     AR2
0645 D003              POP     AR3
0647 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1155
064A 900000      R     MOV     DPTR,#info_string
064D 120000      E     LCALL   ?C?PLDXDATA
0650 C003              PUSH    AR3
0652 C002              PUSH    AR2
0654 C001              PUSH    AR1
0656 7BFF              MOV     R3,#0FFH
0658 7A00        R     MOV     R2,#HIGH ?SC_413
065A 7900        R     MOV     R1,#LOW ?SC_413
065C 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
065F 120000      E     LCALL   ?C?PSTXDATA
0662 D001              POP     AR1
0664 D002              POP     AR2
0666 D003              POP     AR3
0668 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1156
066B 900000      E     MOV     DPTR,#c_mem+036H
066E E0                MOVX    A,@DPTR
066F FF                MOV     R7,A
0670 EF                MOV     A,R7
0671 6403              XRL     A,#03H
0673 7003              JNZ     $ + 5H
0675 020000      R     LJMP    ?C0269
                                           ; SOURCE LINE # 1157
0678 7B01              MOV     R3,#01H
067A 7A00        R     MOV     R2,#HIGH str
067C 7900        R     MOV     R1,#LOW str
067E C003              PUSH    AR3
0680 C002              PUSH    AR2
0682 C001              PUSH    AR1
0684 7BFF              MOV     R3,#0FFH
0686 7A00        R     MOV     R2,#HIGH ?SC_431
0688 7900        R     MOV     R1,#LOW ?SC_431
068A 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
068D 120000      E     LCALL   ?C?PSTXDATA
0690 900000      E     MOV     DPTR,#c_mem+02H
0693 120000      E     LCALL   ?C?LLDXDATA
0696 EC                MOV     A,R4
0697 120000      E     LCALL   ?C?FCASTL
069A 7B00              MOV     R3,#00H
069C 7A00              MOV     R2,#00H
069E 7980              MOV     R1,#080H
06A0 7847              MOV     R0,#047H
06A2 120000      E     LCALL   ?C?FPDIV
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 148 

06A5 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
06A8 120000      E     LCALL   ?C?LSTXDATA
06AB D001              POP     AR1
06AD D002              POP     AR2
06AF D003              POP     AR3
06B1 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 1158
06B4 900000      R     MOV     DPTR,#info_string
06B7 120000      E     LCALL   ?C?PLDXDATA
06BA C003              PUSH    AR3
06BC C002              PUSH    AR2
06BE C001              PUSH    AR1
06C0 7B01              MOV     R3,#01H
06C2 7A00        R     MOV     R2,#HIGH str
06C4 7900        R     MOV     R1,#LOW str
06C6 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
06C9 120000      E     LCALL   ?C?PSTXDATA
06CC D001              POP     AR1
06CE D002              POP     AR2
06D0 D003              POP     AR3
06D2 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1159
06D5 7B01              MOV     R3,#01H
06D7 7A00        R     MOV     R2,#HIGH str
06D9 7900        R     MOV     R1,#LOW str
06DB C003              PUSH    AR3
06DD C002              PUSH    AR2
06DF C001              PUSH    AR1
06E1 7BFF              MOV     R3,#0FFH
06E3 7A00        R     MOV     R2,#HIGH ?SC_441
06E5 7900        R     MOV     R1,#LOW ?SC_441
06E7 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
06EA 120000      E     LCALL   ?C?PSTXDATA
06ED 900000      E     MOV     DPTR,#c_mem+06H
06F0 120000      E     LCALL   ?C?LLDXDATA
06F3 EC                MOV     A,R4
06F4 120000      E     LCALL   ?C?FCASTL
06F7 7B00              MOV     R3,#00H
06F9 7A00              MOV     R2,#00H
06FB 7980              MOV     R1,#080H
06FD 7847              MOV     R0,#047H
06FF 120000      E     LCALL   ?C?FPDIV
0702 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
0705 120000      E     LCALL   ?C?LSTXDATA
0708 D001              POP     AR1
070A D002              POP     AR2
070C D003              POP     AR3
070E 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 1160
0711 900000      R     MOV     DPTR,#info_string
0714 120000      E     LCALL   ?C?PLDXDATA
0717 C003              PUSH    AR3
0719 C002              PUSH    AR2
071B C001              PUSH    AR1
071D 7B01              MOV     R3,#01H
071F 7A00        R     MOV     R2,#HIGH str
0721 7900        R     MOV     R1,#LOW str
0723 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0726 120000      E     LCALL   ?C?PSTXDATA
0729 D001              POP     AR1
072B D002              POP     AR2
072D D003              POP     AR3
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 149 

072F 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1161
0732 7B01              MOV     R3,#01H
0734 7A00        R     MOV     R2,#HIGH str
0736 7900        R     MOV     R1,#LOW str
0738 C003              PUSH    AR3
073A C002              PUSH    AR2
073C C001              PUSH    AR1
073E 7BFF              MOV     R3,#0FFH
0740 7A00        R     MOV     R2,#HIGH ?SC_451
0742 7900        R     MOV     R1,#LOW ?SC_451
0744 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
0747 120000      E     LCALL   ?C?PSTXDATA
074A 900000      E     MOV     DPTR,#c_mem+0AH
074D 120000      E     LCALL   ?C?LLDXDATA
0750 EC                MOV     A,R4
0751 120000      E     LCALL   ?C?FCASTL
0754 7B00              MOV     R3,#00H
0756 7A00              MOV     R2,#00H
0758 7980              MOV     R1,#080H
075A 7847              MOV     R0,#047H
075C 120000      E     LCALL   ?C?FPDIV
075F 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
0762 120000      E     LCALL   ?C?LSTXDATA
0765 D001              POP     AR1
0767 D002              POP     AR2
0769 D003              POP     AR3
076B 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 1162
076E 900000      R     MOV     DPTR,#info_string
0771 120000      E     LCALL   ?C?PLDXDATA
0774 C003              PUSH    AR3
0776 C002              PUSH    AR2
0778 C001              PUSH    AR1
077A 7B01              MOV     R3,#01H
077C 7A00        R     MOV     R2,#HIGH str
077E 7900        R     MOV     R1,#LOW str
0780 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0783 120000      E     LCALL   ?C?PSTXDATA
0786 D001              POP     AR1
0788 D002              POP     AR2
078A D003              POP     AR3
078C 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1163
078F 020000      R     LJMP    ?C0270
0792         ?C0269:
                                           ; SOURCE LINE # 1164
                                           ; SOURCE LINE # 1165
0792 7B01              MOV     R3,#01H
0794 7A00        R     MOV     R2,#HIGH str
0796 7900        R     MOV     R1,#LOW str
0798 C003              PUSH    AR3
079A C002              PUSH    AR2
079C C001              PUSH    AR1
079E 7BFF              MOV     R3,#0FFH
07A0 7A00        R     MOV     R2,#HIGH ?SC_431
07A2 7900        R     MOV     R1,#LOW ?SC_431
07A4 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
07A7 120000      E     LCALL   ?C?PSTXDATA
07AA 900000      E     MOV     DPTR,#c_mem+01AH
07AD 120000      E     LCALL   ?C?LLDXDATA
07B0 EC                MOV     A,R4
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 150 

07B1 120000      E     LCALL   ?C?FCASTL
07B4 7B00              MOV     R3,#00H
07B6 7A00              MOV     R2,#00H
07B8 7980              MOV     R1,#080H
07BA 7847              MOV     R0,#047H
07BC 120000      E     LCALL   ?C?FPDIV
07BF 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
07C2 120000      E     LCALL   ?C?LSTXDATA
07C5 D001              POP     AR1
07C7 D002              POP     AR2
07C9 D003              POP     AR3
07CB 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 1166
07CE 900000      R     MOV     DPTR,#info_string
07D1 120000      E     LCALL   ?C?PLDXDATA
07D4 C003              PUSH    AR3
07D6 C002              PUSH    AR2
07D8 C001              PUSH    AR1
07DA 7B01              MOV     R3,#01H
07DC 7A00        R     MOV     R2,#HIGH str
07DE 7900        R     MOV     R1,#LOW str
07E0 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
07E3 120000      E     LCALL   ?C?PSTXDATA
07E6 D001              POP     AR1
07E8 D002              POP     AR2
07EA D003              POP     AR3
07EC 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1167
07EF 7B01              MOV     R3,#01H
07F1 7A00        R     MOV     R2,#HIGH str
07F3 7900        R     MOV     R1,#LOW str
07F5 C003              PUSH    AR3
07F7 C002              PUSH    AR2
07F9 C001              PUSH    AR1
07FB 7BFF              MOV     R3,#0FFH
07FD 7A00        R     MOV     R2,#HIGH ?SC_441
07FF 7900        R     MOV     R1,#LOW ?SC_441
0801 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
0804 120000      E     LCALL   ?C?PSTXDATA
0807 900000      E     MOV     DPTR,#c_mem+01EH
080A 120000      E     LCALL   ?C?LLDXDATA
080D EC                MOV     A,R4
080E 120000      E     LCALL   ?C?FCASTL
0811 7B00              MOV     R3,#00H
0813 7A00              MOV     R2,#00H
0815 7980              MOV     R1,#080H
0817 7847              MOV     R0,#047H
0819 120000      E     LCALL   ?C?FPDIV
081C 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
081F 120000      E     LCALL   ?C?LSTXDATA
0822 D001              POP     AR1
0824 D002              POP     AR2
0826 D003              POP     AR3
0828 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 1168
082B 900000      R     MOV     DPTR,#info_string
082E 120000      E     LCALL   ?C?PLDXDATA
0831 C003              PUSH    AR3
0833 C002              PUSH    AR2
0835 C001              PUSH    AR1
0837 7B01              MOV     R3,#01H
0839 7A00        R     MOV     R2,#HIGH str
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 151 

083B 7900        R     MOV     R1,#LOW str
083D 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0840 120000      E     LCALL   ?C?PSTXDATA
0843 D001              POP     AR1
0845 D002              POP     AR2
0847 D003              POP     AR3
0849 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1169
084C 7B01              MOV     R3,#01H
084E 7A00        R     MOV     R2,#HIGH str
0850 7900        R     MOV     R1,#LOW str
0852 C003              PUSH    AR3
0854 C002              PUSH    AR2
0856 C001              PUSH    AR1
0858 7BFF              MOV     R3,#0FFH
085A 7A00        R     MOV     R2,#HIGH ?SC_451
085C 7900        R     MOV     R1,#LOW ?SC_451
085E 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
0861 120000      E     LCALL   ?C?PSTXDATA
0864 900000      E     MOV     DPTR,#c_mem+022H
0867 120000      E     LCALL   ?C?LLDXDATA
086A EC                MOV     A,R4
086B 120000      E     LCALL   ?C?FCASTL
086E 7B00              MOV     R3,#00H
0870 7A00              MOV     R2,#00H
0872 7980              MOV     R1,#080H
0874 7847              MOV     R0,#047H
0876 120000      E     LCALL   ?C?FPDIV
0879 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
087C 120000      E     LCALL   ?C?LSTXDATA
087F D001              POP     AR1
0881 D002              POP     AR2
0883 D003              POP     AR3
0885 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 1170
0888 900000      R     MOV     DPTR,#info_string
088B 120000      E     LCALL   ?C?PLDXDATA
088E C003              PUSH    AR3
0890 C002              PUSH    AR2
0892 C001              PUSH    AR1
0894 7B01              MOV     R3,#01H
0896 7A00        R     MOV     R2,#HIGH str
0898 7900        R     MOV     R1,#LOW str
089A 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
089D 120000      E     LCALL   ?C?PSTXDATA
08A0 D001              POP     AR1
08A2 D002              POP     AR2
08A4 D003              POP     AR3
08A6 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1171
08A9         ?C0270:
                                           ; SOURCE LINE # 1173
08A9 900000      R     MOV     DPTR,#info_string
08AC 120000      E     LCALL   ?C?PLDXDATA
08AF C003              PUSH    AR3
08B1 C002              PUSH    AR2
08B3 C001              PUSH    AR1
08B5 7BFF              MOV     R3,#0FFH
08B7 7A00        R     MOV     R2,#HIGH ?SC_461
08B9 7900        R     MOV     R1,#LOW ?SC_461
08BB 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
08BE 120000      E     LCALL   ?C?PSTXDATA
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 152 

08C1 D001              POP     AR1
08C3 D002              POP     AR2
08C5 D003              POP     AR3
08C7 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1174
08CA 900000      E     MOV     DPTR,#c_mem+036H
08CD E0                MOVX    A,@DPTR
08CE FF                MOV     R7,A
08CF EF                MOV     A,R7
08D0 6403              XRL     A,#03H
08D2 7003              JNZ     $ + 5H
08D4 020000      R     LJMP    ?C0271
                                           ; SOURCE LINE # 1175
08D7 7B01              MOV     R3,#01H
08D9 7A00        R     MOV     R2,#HIGH str
08DB 7900        R     MOV     R1,#LOW str
08DD C003              PUSH    AR3
08DF C002              PUSH    AR2
08E1 C001              PUSH    AR1
08E3 7BFF              MOV     R3,#0FFH
08E5 7A00        R     MOV     R2,#HIGH ?SC_431
08E7 7900        R     MOV     R1,#LOW ?SC_431
08E9 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
08EC 120000      E     LCALL   ?C?PSTXDATA
08EF 900000      E     MOV     DPTR,#c_mem+0EH
08F2 120000      E     LCALL   ?C?LLDXDATA
08F5 EC                MOV     A,R4
08F6 120000      E     LCALL   ?C?FCASTL
08F9 7B00              MOV     R3,#00H
08FB 7A00              MOV     R2,#00H
08FD 7980              MOV     R1,#080H
08FF 7847              MOV     R0,#047H
0901 120000      E     LCALL   ?C?FPDIV
0904 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
0907 120000      E     LCALL   ?C?LSTXDATA
090A D001              POP     AR1
090C D002              POP     AR2
090E D003              POP     AR3
0910 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 1176
0913 900000      R     MOV     DPTR,#info_string
0916 120000      E     LCALL   ?C?PLDXDATA
0919 C003              PUSH    AR3
091B C002              PUSH    AR2
091D C001              PUSH    AR1
091F 7B01              MOV     R3,#01H
0921 7A00        R     MOV     R2,#HIGH str
0923 7900        R     MOV     R1,#LOW str
0925 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0928 120000      E     LCALL   ?C?PSTXDATA
092B D001              POP     AR1
092D D002              POP     AR2
092F D003              POP     AR3
0931 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1177
0934 7B01              MOV     R3,#01H
0936 7A00        R     MOV     R2,#HIGH str
0938 7900        R     MOV     R1,#LOW str
093A C003              PUSH    AR3
093C C002              PUSH    AR2
093E C001              PUSH    AR1
0940 7BFF              MOV     R3,#0FFH
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 153 

0942 7A00        R     MOV     R2,#HIGH ?SC_441
0944 7900        R     MOV     R1,#LOW ?SC_441
0946 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
0949 120000      E     LCALL   ?C?PSTXDATA
094C 900000      E     MOV     DPTR,#c_mem+012H
094F 120000      E     LCALL   ?C?LLDXDATA
0952 EC                MOV     A,R4
0953 120000      E     LCALL   ?C?FCASTL
0956 7B00              MOV     R3,#00H
0958 7A00              MOV     R2,#00H
095A 7980              MOV     R1,#080H
095C 7847              MOV     R0,#047H
095E 120000      E     LCALL   ?C?FPDIV
0961 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
0964 120000      E     LCALL   ?C?LSTXDATA
0967 D001              POP     AR1
0969 D002              POP     AR2
096B D003              POP     AR3
096D 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 1178
0970 900000      R     MOV     DPTR,#info_string
0973 120000      E     LCALL   ?C?PLDXDATA
0976 C003              PUSH    AR3
0978 C002              PUSH    AR2
097A C001              PUSH    AR1
097C 7B01              MOV     R3,#01H
097E 7A00        R     MOV     R2,#HIGH str
0980 7900        R     MOV     R1,#LOW str
0982 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0985 120000      E     LCALL   ?C?PSTXDATA
0988 D001              POP     AR1
098A D002              POP     AR2
098C D003              POP     AR3
098E 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1179
0991 7B01              MOV     R3,#01H
0993 7A00        R     MOV     R2,#HIGH str
0995 7900        R     MOV     R1,#LOW str
0997 C003              PUSH    AR3
0999 C002              PUSH    AR2
099B C001              PUSH    AR1
099D 7BFF              MOV     R3,#0FFH
099F 7A00        R     MOV     R2,#HIGH ?SC_451
09A1 7900        R     MOV     R1,#LOW ?SC_451
09A3 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
09A6 120000      E     LCALL   ?C?PSTXDATA
09A9 900000      E     MOV     DPTR,#c_mem+016H
09AC 120000      E     LCALL   ?C?LLDXDATA
09AF EC                MOV     A,R4
09B0 120000      E     LCALL   ?C?FCASTL
09B3 7B00              MOV     R3,#00H
09B5 7A00              MOV     R2,#00H
09B7 7980              MOV     R1,#080H
09B9 7847              MOV     R0,#047H
09BB 120000      E     LCALL   ?C?FPDIV
09BE 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
09C1 120000      E     LCALL   ?C?LSTXDATA
09C4 D001              POP     AR1
09C6 D002              POP     AR2
09C8 D003              POP     AR3
09CA 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 1180
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 154 

09CD 900000      R     MOV     DPTR,#info_string
09D0 120000      E     LCALL   ?C?PLDXDATA
09D3 C003              PUSH    AR3
09D5 C002              PUSH    AR2
09D7 C001              PUSH    AR1
09D9 7B01              MOV     R3,#01H
09DB 7A00        R     MOV     R2,#HIGH str
09DD 7900        R     MOV     R1,#LOW str
09DF 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
09E2 120000      E     LCALL   ?C?PSTXDATA
09E5 D001              POP     AR1
09E7 D002              POP     AR2
09E9 D003              POP     AR3
09EB 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1181
09EE 020000      R     LJMP    ?C0272
09F1         ?C0271:
                                           ; SOURCE LINE # 1182
                                           ; SOURCE LINE # 1183
09F1 7B01              MOV     R3,#01H
09F3 7A00        R     MOV     R2,#HIGH str
09F5 7900        R     MOV     R1,#LOW str
09F7 C003              PUSH    AR3
09F9 C002              PUSH    AR2
09FB C001              PUSH    AR1
09FD 7BFF              MOV     R3,#0FFH
09FF 7A00        R     MOV     R2,#HIGH ?SC_431
0A01 7900        R     MOV     R1,#LOW ?SC_431
0A03 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
0A06 120000      E     LCALL   ?C?PSTXDATA
0A09 900000      E     MOV     DPTR,#c_mem+026H
0A0C 120000      E     LCALL   ?C?LLDXDATA
0A0F EC                MOV     A,R4
0A10 120000      E     LCALL   ?C?FCASTL
0A13 7B00              MOV     R3,#00H
0A15 7A00              MOV     R2,#00H
0A17 7980              MOV     R1,#080H
0A19 7847              MOV     R0,#047H
0A1B 120000      E     LCALL   ?C?FPDIV
0A1E 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
0A21 120000      E     LCALL   ?C?LSTXDATA
0A24 D001              POP     AR1
0A26 D002              POP     AR2
0A28 D003              POP     AR3
0A2A 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 1184
0A2D 900000      R     MOV     DPTR,#info_string
0A30 120000      E     LCALL   ?C?PLDXDATA
0A33 C003              PUSH    AR3
0A35 C002              PUSH    AR2
0A37 C001              PUSH    AR1
0A39 7B01              MOV     R3,#01H
0A3B 7A00        R     MOV     R2,#HIGH str
0A3D 7900        R     MOV     R1,#LOW str
0A3F 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0A42 120000      E     LCALL   ?C?PSTXDATA
0A45 D001              POP     AR1
0A47 D002              POP     AR2
0A49 D003              POP     AR3
0A4B 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1185
0A4E 7B01              MOV     R3,#01H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 155 

0A50 7A00        R     MOV     R2,#HIGH str
0A52 7900        R     MOV     R1,#LOW str
0A54 C003              PUSH    AR3
0A56 C002              PUSH    AR2
0A58 C001              PUSH    AR1
0A5A 7BFF              MOV     R3,#0FFH
0A5C 7A00        R     MOV     R2,#HIGH ?SC_441
0A5E 7900        R     MOV     R1,#LOW ?SC_441
0A60 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
0A63 120000      E     LCALL   ?C?PSTXDATA
0A66 900000      E     MOV     DPTR,#c_mem+02AH
0A69 120000      E     LCALL   ?C?LLDXDATA
0A6C EC                MOV     A,R4
0A6D 120000      E     LCALL   ?C?FCASTL
0A70 7B00              MOV     R3,#00H
0A72 7A00              MOV     R2,#00H
0A74 7980              MOV     R1,#080H
0A76 7847              MOV     R0,#047H
0A78 120000      E     LCALL   ?C?FPDIV
0A7B 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
0A7E 120000      E     LCALL   ?C?LSTXDATA
0A81 D001              POP     AR1
0A83 D002              POP     AR2
0A85 D003              POP     AR3
0A87 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 1186
0A8A 900000      R     MOV     DPTR,#info_string
0A8D 120000      E     LCALL   ?C?PLDXDATA
0A90 C003              PUSH    AR3
0A92 C002              PUSH    AR2
0A94 C001              PUSH    AR1
0A96 7B01              MOV     R3,#01H
0A98 7A00        R     MOV     R2,#HIGH str
0A9A 7900        R     MOV     R1,#LOW str
0A9C 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0A9F 120000      E     LCALL   ?C?PSTXDATA
0AA2 D001              POP     AR1
0AA4 D002              POP     AR2
0AA6 D003              POP     AR3
0AA8 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1187
0AAB 7B01              MOV     R3,#01H
0AAD 7A00        R     MOV     R2,#HIGH str
0AAF 7900        R     MOV     R1,#LOW str
0AB1 C003              PUSH    AR3
0AB3 C002              PUSH    AR2
0AB5 C001              PUSH    AR1
0AB7 7BFF              MOV     R3,#0FFH
0AB9 7A00        R     MOV     R2,#HIGH ?SC_451
0ABB 7900        R     MOV     R1,#LOW ?SC_451
0ABD 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
0AC0 120000      E     LCALL   ?C?PSTXDATA
0AC3 900000      E     MOV     DPTR,#c_mem+02EH
0AC6 120000      E     LCALL   ?C?LLDXDATA
0AC9 EC                MOV     A,R4
0ACA 120000      E     LCALL   ?C?FCASTL
0ACD 7B00              MOV     R3,#00H
0ACF 7A00              MOV     R2,#00H
0AD1 7980              MOV     R1,#080H
0AD3 7847              MOV     R0,#047H
0AD5 120000      E     LCALL   ?C?FPDIV
0AD8 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 156 

0ADB 120000      E     LCALL   ?C?LSTXDATA
0ADE D001              POP     AR1
0AE0 D002              POP     AR2
0AE2 D003              POP     AR3
0AE4 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 1188
0AE7 900000      R     MOV     DPTR,#info_string
0AEA 120000      E     LCALL   ?C?PLDXDATA
0AED C003              PUSH    AR3
0AEF C002              PUSH    AR2
0AF1 C001              PUSH    AR1
0AF3 7B01              MOV     R3,#01H
0AF5 7A00        R     MOV     R2,#HIGH str
0AF7 7900        R     MOV     R1,#LOW str
0AF9 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0AFC 120000      E     LCALL   ?C?PSTXDATA
0AFF D001              POP     AR1
0B01 D002              POP     AR2
0B03 D003              POP     AR3
0B05 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1189
0B08         ?C0272:
                                           ; SOURCE LINE # 1191
0B08 900000      R     MOV     DPTR,#info_string
0B0B 120000      E     LCALL   ?C?PLDXDATA
0B0E C003              PUSH    AR3
0B10 C002              PUSH    AR2
0B12 C001              PUSH    AR1
0B14 7BFF              MOV     R3,#0FFH
0B16 7A00        R     MOV     R2,#HIGH ?SC_95
0B18 7900        R     MOV     R1,#LOW ?SC_95
0B1A 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0B1D 120000      E     LCALL   ?C?PSTXDATA
0B20 D001              POP     AR1
0B22 D002              POP     AR2
0B24 D003              POP     AR3
0B26 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1193
0B29 900000      E     MOV     DPTR,#c_mem+034H
0B2C E0                MOVX    A,@DPTR
0B2D FF                MOV     R7,A
0B2E EF                MOV     A,R7
0B2F B40323            CJNE    A,#03H,?C0273
                                           ; SOURCE LINE # 1194
0B32 900000      R     MOV     DPTR,#info_string
0B35 120000      E     LCALL   ?C?PLDXDATA
0B38 C003              PUSH    AR3
0B3A C002              PUSH    AR2
0B3C C001              PUSH    AR1
0B3E 7BFF              MOV     R3,#0FFH
0B40 7A00        R     MOV     R2,#HIGH ?SC_487
0B42 7900        R     MOV     R1,#LOW ?SC_487
0B44 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0B47 120000      E     LCALL   ?C?PSTXDATA
0B4A D001              POP     AR1
0B4C D002              POP     AR2
0B4E D003              POP     AR3
0B50 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1195
0B53 8021              SJMP    ?C0274
0B55         ?C0273:
                                           ; SOURCE LINE # 1196
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 157 

0B55 900000      R     MOV     DPTR,#info_string
0B58 120000      E     LCALL   ?C?PLDXDATA
0B5B C003              PUSH    AR3
0B5D C002              PUSH    AR2
0B5F C001              PUSH    AR1
0B61 7BFF              MOV     R3,#0FFH
0B63 7A00        R     MOV     R2,#HIGH ?SC_513
0B65 7900        R     MOV     R1,#LOW ?SC_513
0B67 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0B6A 120000      E     LCALL   ?C?PSTXDATA
0B6D D001              POP     AR1
0B6F D002              POP     AR2
0B71 D003              POP     AR3
0B73 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1197
0B76         ?C0274:
                                           ; SOURCE LINE # 1199
0B76 900000      E     MOV     DPTR,#c_mem+035H
0B79 E0                MOVX    A,@DPTR
0B7A FF                MOV     R7,A
0B7B EF                MOV     A,R7
0B7C 120000      E     LCALL   ?C?CCASE
0B7F 0000        R     DW      ?C0276
0B81 00                DB      00H
0B82 0000        R     DW      ?C0277
0B84 01                DB      01H
0B85 0000              DW      00H
0B87 0000        R     DW      ?C0275
                                           ; SOURCE LINE # 1200
0B89         ?C0276:
                                           ; SOURCE LINE # 1201
0B89 900000      R     MOV     DPTR,#info_string
0B8C 120000      E     LCALL   ?C?PLDXDATA
0B8F C003              PUSH    AR3
0B91 C002              PUSH    AR2
0B93 C001              PUSH    AR1
0B95 7BFF              MOV     R3,#0FFH
0B97 7A00        R     MOV     R2,#HIGH ?SC_538
0B99 7900        R     MOV     R1,#LOW ?SC_538
0B9B 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0B9E 120000      E     LCALL   ?C?PSTXDATA
0BA1 D001              POP     AR1
0BA3 D002              POP     AR2
0BA5 D003              POP     AR3
0BA7 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1202
0BAA 8021              SJMP    ?C0275
                                           ; SOURCE LINE # 1203
0BAC         ?C0277:
                                           ; SOURCE LINE # 1204
0BAC 900000      R     MOV     DPTR,#info_string
0BAF 120000      E     LCALL   ?C?PLDXDATA
0BB2 C003              PUSH    AR3
0BB4 C002              PUSH    AR2
0BB6 C001              PUSH    AR1
0BB8 7BFF              MOV     R3,#0FFH
0BBA 7A00        R     MOV     R2,#HIGH ?SC_556
0BBC 7900        R     MOV     R1,#LOW ?SC_556
0BBE 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0BC1 120000      E     LCALL   ?C?PSTXDATA
0BC4 D001              POP     AR1
0BC6 D002              POP     AR2
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 158 

0BC8 D003              POP     AR3
0BCA 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1205
                                           ; SOURCE LINE # 1206
0BCD         ?C0275:
                                           ; SOURCE LINE # 1208
0BCD 900000      R     MOV     DPTR,#info_string
0BD0 120000      E     LCALL   ?C?PLDXDATA
0BD3 C003              PUSH    AR3
0BD5 C002              PUSH    AR2
0BD7 C001              PUSH    AR1
0BD9 7BFF              MOV     R3,#0FFH
0BDB 7A00        R     MOV     R2,#HIGH ?SC_579
0BDD 7900        R     MOV     R1,#LOW ?SC_579
0BDF 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0BE2 120000      E     LCALL   ?C?PSTXDATA
0BE5 D001              POP     AR1
0BE7 D002              POP     AR2
0BE9 D003              POP     AR3
0BEB 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1209
0BEE 900000      E     MOV     DPTR,#c_mem+036H
0BF1 E0                MOVX    A,@DPTR
0BF2 FF                MOV     R7,A
0BF3 EF                MOV     A,R7
0BF4 120000      E     LCALL   ?C?CCASE
0BF7 0000        R     DW      ?C0279
0BF9 00                DB      00H
0BFA 0000        R     DW      ?C0280
0BFC 01                DB      01H
0BFD 0000        R     DW      ?C0281
0BFF 02                DB      02H
0C00 0000        R     DW      ?C0282
0C02 03                DB      03H
0C03 0000              DW      00H
0C05 0000        R     DW      ?C0278
                                           ; SOURCE LINE # 1210
0C07         ?C0279:
                                           ; SOURCE LINE # 1211
0C07 900000      R     MOV     DPTR,#info_string
0C0A 120000      E     LCALL   ?C?PLDXDATA
0C0D C003              PUSH    AR3
0C0F C002              PUSH    AR2
0C11 C001              PUSH    AR1
0C13 7BFF              MOV     R3,#0FFH
0C15 7A00        R     MOV     R2,#HIGH ?SC_594
0C17 7900        R     MOV     R1,#LOW ?SC_594
0C19 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0C1C 120000      E     LCALL   ?C?PSTXDATA
0C1F D001              POP     AR1
0C21 D002              POP     AR2
0C23 D003              POP     AR3
0C25 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1212
0C28 8067              SJMP    ?C0278
                                           ; SOURCE LINE # 1213
0C2A         ?C0280:
                                           ; SOURCE LINE # 1214
0C2A 900000      R     MOV     DPTR,#info_string
0C2D 120000      E     LCALL   ?C?PLDXDATA
0C30 C003              PUSH    AR3
0C32 C002              PUSH    AR2
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 159 

0C34 C001              PUSH    AR1
0C36 7BFF              MOV     R3,#0FFH
0C38 7A00        R     MOV     R2,#HIGH ?SC_605
0C3A 7900        R     MOV     R1,#LOW ?SC_605
0C3C 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0C3F 120000      E     LCALL   ?C?PSTXDATA
0C42 D001              POP     AR1
0C44 D002              POP     AR2
0C46 D003              POP     AR3
0C48 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1215
0C4B 8044              SJMP    ?C0278
                                           ; SOURCE LINE # 1216
0C4D         ?C0281:
                                           ; SOURCE LINE # 1217
0C4D 900000      R     MOV     DPTR,#info_string
0C50 120000      E     LCALL   ?C?PLDXDATA
0C53 C003              PUSH    AR3
0C55 C002              PUSH    AR2
0C57 C001              PUSH    AR1
0C59 7BFF              MOV     R3,#0FFH
0C5B 7A00        R     MOV     R2,#HIGH ?SC_611
0C5D 7900        R     MOV     R1,#LOW ?SC_611
0C5F 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0C62 120000      E     LCALL   ?C?PSTXDATA
0C65 D001              POP     AR1
0C67 D002              POP     AR2
0C69 D003              POP     AR3
0C6B 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1218
0C6E 8021              SJMP    ?C0278
                                           ; SOURCE LINE # 1219
0C70         ?C0282:
                                           ; SOURCE LINE # 1220
0C70 900000      R     MOV     DPTR,#info_string
0C73 120000      E     LCALL   ?C?PLDXDATA
0C76 C003              PUSH    AR3
0C78 C002              PUSH    AR2
0C7A C001              PUSH    AR1
0C7C 7BFF              MOV     R3,#0FFH
0C7E 7A00        R     MOV     R2,#HIGH ?SC_621
0C80 7900        R     MOV     R1,#LOW ?SC_621
0C82 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0C85 120000      E     LCALL   ?C?PSTXDATA
0C88 D001              POP     AR1
0C8A D002              POP     AR2
0C8C D003              POP     AR3
0C8E 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1221
                                           ; SOURCE LINE # 1228
0C91         ?C0278:
                                           ; SOURCE LINE # 1230
0C91 900000      R     MOV     DPTR,#info_string
0C94 120000      E     LCALL   ?C?PLDXDATA
0C97 C003              PUSH    AR3
0C99 C002              PUSH    AR2
0C9B C001              PUSH    AR1
0C9D 7BFF              MOV     R3,#0FFH
0C9F 7A00        R     MOV     R2,#HIGH ?SC_644
0CA1 7900        R     MOV     R1,#LOW ?SC_644
0CA3 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0CA6 120000      E     LCALL   ?C?PSTXDATA
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 160 

0CA9 D001              POP     AR1
0CAB D002              POP     AR2
0CAD D003              POP     AR3
0CAF 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1231
0CB2 750000      R     MOV     i,#00H
0CB5 750000      R     MOV     i+01H,#00H
0CB8         ?C0283:
0CB8 C3                CLR     C
0CB9 E500        R     MOV     A,i+01H
0CBB 9402              SUBB    A,#02H
0CBD E500        R     MOV     A,i
0CBF 6480              XRL     A,#080H
0CC1 9480              SUBB    A,#080H
0CC3 4003              JC      $ + 5H
0CC5 020000      R     LJMP    ?C0284
                                           ; SOURCE LINE # 1232
                                           ; SOURCE LINE # 1234
0CC8 7B01              MOV     R3,#01H
0CCA 7A00        R     MOV     R2,#HIGH str
0CCC 7900        R     MOV     R1,#LOW str
0CCE C003              PUSH    AR3
0CD0 C002              PUSH    AR2
0CD2 C001              PUSH    AR1
0CD4 7BFF              MOV     R3,#0FFH
0CD6 7A00        R     MOV     R2,#HIGH ?SC_324
0CD8 7900        R     MOV     R1,#LOW ?SC_324
0CDA 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
0CDD 120000      E     LCALL   ?C?PSTXDATA
0CE0 E500        R     MOV     A,i+01H
0CE2 2401              ADD     A,#01H
0CE4 FF                MOV     R7,A
0CE5 E500        R     MOV     A,i
0CE7 3400              ADDC    A,#00H
0CE9 FE                MOV     R6,A
0CEA 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
0CED EE                MOV     A,R6
0CEE F0                MOVX    @DPTR,A
0CEF A3                INC     DPTR
0CF0 EF                MOV     A,R7
0CF1 F0                MOVX    @DPTR,A
0CF2 AE00        R     MOV     R6,i
0CF4 AF00        R     MOV     R7,i+01H
0CF6 7400        E     MOV     A,#LOW c_mem+037H
0CF8 2F                ADD     A,R7
0CF9 F582              MOV     DPL,A
0CFB 7400        E     MOV     A,#HIGH c_mem+037H
0CFD 3E                ADDC    A,R6
0CFE F583              MOV     DPH,A
0D00 E0                MOVX    A,@DPTR
0D01 FF                MOV     R7,A
0D02 7E00              MOV     R6,#00H
0D04 900000      E     MOV     DPTR,#?_sprintf?BYTE+08H
0D07 EE                MOV     A,R6
0D08 F0                MOVX    @DPTR,A
0D09 A3                INC     DPTR
0D0A EF                MOV     A,R7
0D0B F0                MOVX    @DPTR,A
0D0C D001              POP     AR1
0D0E D002              POP     AR2
0D10 D003              POP     AR3
0D12 120000      E     LCALL   _sprintf
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 161 

                                           ; SOURCE LINE # 1235
0D15 900000      R     MOV     DPTR,#info_string
0D18 120000      E     LCALL   ?C?PLDXDATA
0D1B C003              PUSH    AR3
0D1D C002              PUSH    AR2
0D1F C001              PUSH    AR1
0D21 7B01              MOV     R3,#01H
0D23 7A00        R     MOV     R2,#HIGH str
0D25 7900        R     MOV     R1,#LOW str
0D27 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0D2A 120000      E     LCALL   ?C?PSTXDATA
0D2D D001              POP     AR1
0D2F D002              POP     AR2
0D31 D003              POP     AR3
0D33 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1236
0D36 900000      R     MOV     DPTR,#info_string
0D39 120000      E     LCALL   ?C?PLDXDATA
0D3C C003              PUSH    AR3
0D3E C002              PUSH    AR2
0D40 C001              PUSH    AR1
0D42 7BFF              MOV     R3,#0FFH
0D44 7A00        R     MOV     R2,#HIGH ?SC_95
0D46 7900        R     MOV     R1,#LOW ?SC_95
0D48 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0D4B 120000      E     LCALL   ?C?PSTXDATA
0D4E D001              POP     AR1
0D50 D002              POP     AR2
0D52 D003              POP     AR3
0D54 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1237
0D57 0500        R     INC     i+01H
0D59 E500        R     MOV     A,i+01H
0D5B 7002              JNZ     ?C0460
0D5D 0500        R     INC     i
0D5F         ?C0460:
0D5F 020000      R     LJMP    ?C0283
0D62         ?C0284:
                                           ; SOURCE LINE # 1240
0D62 900000      R     MOV     DPTR,#info_string
0D65 120000      E     LCALL   ?C?PLDXDATA
0D68 C003              PUSH    AR3
0D6A C002              PUSH    AR2
0D6C C001              PUSH    AR1
0D6E 7BFF              MOV     R3,#0FFH
0D70 7A00        R     MOV     R2,#HIGH ?SC_665
0D72 7900        R     MOV     R1,#LOW ?SC_665
0D74 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0D77 120000      E     LCALL   ?C?PSTXDATA
0D7A D001              POP     AR1
0D7C D002              POP     AR2
0D7E D003              POP     AR3
0D80 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1241
0D83 750000      R     MOV     i,#00H
0D86 750000      R     MOV     i+01H,#00H
0D89         ?C0286:
0D89 C3                CLR     C
0D8A E500        R     MOV     A,i+01H
0D8C 9402              SUBB    A,#02H
0D8E E500        R     MOV     A,i
0D90 6480              XRL     A,#080H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 162 

0D92 9480              SUBB    A,#080H
0D94 4003              JC      $ + 5H
0D96 020000      R     LJMP    ?C0287
                                           ; SOURCE LINE # 1242
                                           ; SOURCE LINE # 1244
0D99 7B01              MOV     R3,#01H
0D9B 7A00        R     MOV     R2,#HIGH str
0D9D 7900        R     MOV     R1,#LOW str
0D9F C003              PUSH    AR3
0DA1 C002              PUSH    AR2
0DA3 C001              PUSH    AR1
0DA5 7BFF              MOV     R3,#0FFH
0DA7 7A00        R     MOV     R2,#HIGH ?SC_687
0DA9 7900        R     MOV     R1,#LOW ?SC_687
0DAB 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
0DAE 120000      E     LCALL   ?C?PSTXDATA
0DB1 E500        R     MOV     A,i+01H
0DB3 2401              ADD     A,#01H
0DB5 FF                MOV     R7,A
0DB6 E500        R     MOV     A,i
0DB8 3400              ADDC    A,#00H
0DBA FE                MOV     R6,A
0DBB 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
0DBE EE                MOV     A,R6
0DBF F0                MOVX    @DPTR,A
0DC0 A3                INC     DPTR
0DC1 EF                MOV     A,R7
0DC2 F0                MOVX    @DPTR,A
0DC3 E500        R     MOV     A,i+01H
0DC5 AE00        R     MOV     R6,i
0DC7 7802              MOV     R0,#02H
0DC9         ?C0461:
0DC9 C3                CLR     C
0DCA 33                RLC     A
0DCB CE                XCH     A,R6
0DCC 33                RLC     A
0DCD CE                XCH     A,R6
0DCE D8F9              DJNZ    R0,?C0461
0DD0 FF                MOV     R7,A
0DD1 7400        E     MOV     A,#LOW c_mem+039H
0DD3 2F                ADD     A,R7
0DD4 F582              MOV     DPL,A
0DD6 7400        E     MOV     A,#HIGH c_mem+039H
0DD8 3E                ADDC    A,R6
0DD9 F583              MOV     DPH,A
0DDB 120000      E     LCALL   ?C?LLDXDATA
0DDE AA00        R     MOV     R2,i
0DE0 AB00        R     MOV     R3,i+01H
0DE2 7400        E     MOV     A,#LOW c_mem+037H
0DE4 2B                ADD     A,R3
0DE5 F582              MOV     DPL,A
0DE7 7400        E     MOV     A,#HIGH c_mem+037H
0DE9 3A                ADDC    A,R2
0DEA F583              MOV     DPH,A
0DEC E0                MOVX    A,@DPTR
0DED F9                MOV     R1,A
0DEE A801              MOV     R0,AR1
0DF0 120000      E     LCALL   ?C?SLSHR
0DF3 900000      E     MOV     DPTR,#?_sprintf?BYTE+08H
0DF6 120000      E     LCALL   ?C?LSTXDATA
0DF9 D001              POP     AR1
0DFB D002              POP     AR2
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 163 

0DFD D003              POP     AR3
0DFF 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 1245
0E02 900000      R     MOV     DPTR,#info_string
0E05 120000      E     LCALL   ?C?PLDXDATA
0E08 C003              PUSH    AR3
0E0A C002              PUSH    AR2
0E0C C001              PUSH    AR1
0E0E 7B01              MOV     R3,#01H
0E10 7A00        R     MOV     R2,#HIGH str
0E12 7900        R     MOV     R1,#LOW str
0E14 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0E17 120000      E     LCALL   ?C?PSTXDATA
0E1A D001              POP     AR1
0E1C D002              POP     AR2
0E1E D003              POP     AR3
0E20 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1246
0E23 900000      R     MOV     DPTR,#info_string
0E26 120000      E     LCALL   ?C?PLDXDATA
0E29 C003              PUSH    AR3
0E2B C002              PUSH    AR2
0E2D C001              PUSH    AR1
0E2F 7BFF              MOV     R3,#0FFH
0E31 7A00        R     MOV     R2,#HIGH ?SC_95
0E33 7900        R     MOV     R1,#LOW ?SC_95
0E35 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0E38 120000      E     LCALL   ?C?PSTXDATA
0E3B D001              POP     AR1
0E3D D002              POP     AR2
0E3F D003              POP     AR3
0E41 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1247
0E44 0500        R     INC     i+01H
0E46 E500        R     MOV     A,i+01H
0E48 7002              JNZ     ?C0462
0E4A 0500        R     INC     i
0E4C         ?C0462:
0E4C 020000      R     LJMP    ?C0286
0E4F         ?C0287:
                                           ; SOURCE LINE # 1249
0E4F 900000      R     MOV     DPTR,#info_string
0E52 120000      E     LCALL   ?C?PLDXDATA
0E55 C003              PUSH    AR3
0E57 C002              PUSH    AR2
0E59 C001              PUSH    AR1
0E5B 7BFF              MOV     R3,#0FFH
0E5D 7A00        R     MOV     R2,#HIGH ?SC_697
0E5F 7900        R     MOV     R1,#LOW ?SC_697
0E61 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0E64 120000      E     LCALL   ?C?PSTXDATA
0E67 D001              POP     AR1
0E69 D002              POP     AR2
0E6B D003              POP     AR3
0E6D 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1250
0E70 750000      R     MOV     i,#00H
0E73 750000      R     MOV     i+01H,#00H
0E76         ?C0289:
0E76 C3                CLR     C
0E77 E500        R     MOV     A,i+01H
0E79 9402              SUBB    A,#02H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 164 

0E7B E500        R     MOV     A,i
0E7D 6480              XRL     A,#080H
0E7F 9480              SUBB    A,#080H
0E81 4003              JC      $ + 5H
0E83 020000      R     LJMP    ?C0290
                                           ; SOURCE LINE # 1251
                                           ; SOURCE LINE # 1253
0E86 7B01              MOV     R3,#01H
0E88 7A00        R     MOV     R2,#HIGH str
0E8A 7900        R     MOV     R1,#LOW str
0E8C C003              PUSH    AR3
0E8E C002              PUSH    AR2
0E90 C001              PUSH    AR1
0E92 7BFF              MOV     R3,#0FFH
0E94 7A00        R     MOV     R2,#HIGH ?SC_723
0E96 7900        R     MOV     R1,#LOW ?SC_723
0E98 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
0E9B 120000      E     LCALL   ?C?PSTXDATA
0E9E E500        R     MOV     A,i+01H
0EA0 2401              ADD     A,#01H
0EA2 FF                MOV     R7,A
0EA3 E500        R     MOV     A,i
0EA5 3400              ADDC    A,#00H
0EA7 FE                MOV     R6,A
0EA8 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
0EAB EE                MOV     A,R6
0EAC F0                MOVX    @DPTR,A
0EAD A3                INC     DPTR
0EAE EF                MOV     A,R7
0EAF F0                MOVX    @DPTR,A
0EB0 E500        R     MOV     A,i+01H
0EB2 AE00        R     MOV     R6,i
0EB4 7802              MOV     R0,#02H
0EB6         ?C0463:
0EB6 C3                CLR     C
0EB7 33                RLC     A
0EB8 CE                XCH     A,R6
0EB9 33                RLC     A
0EBA CE                XCH     A,R6
0EBB D8F9              DJNZ    R0,?C0463
0EBD FF                MOV     R7,A
0EBE 7400        E     MOV     A,#LOW c_mem+041H
0EC0 2F                ADD     A,R7
0EC1 F582              MOV     DPL,A
0EC3 7400        E     MOV     A,#HIGH c_mem+041H
0EC5 3E                ADDC    A,R6
0EC6 F583              MOV     DPH,A
0EC8 120000      E     LCALL   ?C?LLDXDATA
0ECB 900000      E     MOV     DPTR,#?_sprintf?BYTE+08H
0ECE 120000      E     LCALL   ?C?LSTXDATA
0ED1 D001              POP     AR1
0ED3 D002              POP     AR2
0ED5 D003              POP     AR3
0ED7 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 1254
0EDA 900000      R     MOV     DPTR,#info_string
0EDD 120000      E     LCALL   ?C?PLDXDATA
0EE0 C003              PUSH    AR3
0EE2 C002              PUSH    AR2
0EE4 C001              PUSH    AR1
0EE6 7B01              MOV     R3,#01H
0EE8 7A00        R     MOV     R2,#HIGH str
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 165 

0EEA 7900        R     MOV     R1,#LOW str
0EEC 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0EEF 120000      E     LCALL   ?C?PSTXDATA
0EF2 D001              POP     AR1
0EF4 D002              POP     AR2
0EF6 D003              POP     AR3
0EF8 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1255
0EFB 900000      R     MOV     DPTR,#info_string
0EFE 120000      E     LCALL   ?C?PLDXDATA
0F01 C003              PUSH    AR3
0F03 C002              PUSH    AR2
0F05 C001              PUSH    AR1
0F07 7BFF              MOV     R3,#0FFH
0F09 7A00        R     MOV     R2,#HIGH ?SC_95
0F0B 7900        R     MOV     R1,#LOW ?SC_95
0F0D 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0F10 120000      E     LCALL   ?C?PSTXDATA
0F13 D001              POP     AR1
0F15 D002              POP     AR2
0F17 D003              POP     AR3
0F19 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1256
0F1C 0500        R     INC     i+01H
0F1E E500        R     MOV     A,i+01H
0F20 7002              JNZ     ?C0464
0F22 0500        R     INC     i
0F24         ?C0464:
0F24 020000      R     LJMP    ?C0289
0F27         ?C0290:
                                           ; SOURCE LINE # 1258
0F27 900000      R     MOV     DPTR,#info_string
0F2A 120000      E     LCALL   ?C?PLDXDATA
0F2D C003              PUSH    AR3
0F2F C002              PUSH    AR2
0F31 C001              PUSH    AR1
0F33 7BFF              MOV     R3,#0FFH
0F35 7A00        R     MOV     R2,#HIGH ?SC_732
0F37 7900        R     MOV     R1,#LOW ?SC_732
0F39 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0F3C 120000      E     LCALL   ?C?PSTXDATA
0F3F D001              POP     AR1
0F41 D002              POP     AR2
0F43 D003              POP     AR3
0F45 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1259
0F48 7B01              MOV     R3,#01H
0F4A 7A00        R     MOV     R2,#HIGH str
0F4C 7900        R     MOV     R1,#LOW str
0F4E C003              PUSH    AR3
0F50 C002              PUSH    AR2
0F52 C001              PUSH    AR1
0F54 7BFF              MOV     R3,#0FFH
0F56 7A00        R     MOV     R2,#HIGH ?SC_786
0F58 7900        R     MOV     R1,#LOW ?SC_786
0F5A 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
0F5D 120000      E     LCALL   ?C?PSTXDATA
0F60 900000      E     MOV     DPTR,#c_mem+067H
0F63 120000      E     LCALL   ?C?LLDXDATA
0F66 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
0F69 120000      E     LCALL   ?C?LSTXDATA
0F6C D001              POP     AR1
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 166 

0F6E D002              POP     AR2
0F70 D003              POP     AR3
0F72 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 1260
0F75 900000      R     MOV     DPTR,#info_string
0F78 120000      E     LCALL   ?C?PLDXDATA
0F7B C003              PUSH    AR3
0F7D C002              PUSH    AR2
0F7F C001              PUSH    AR1
0F81 7B01              MOV     R3,#01H
0F83 7A00        R     MOV     R2,#HIGH str
0F85 7900        R     MOV     R1,#LOW str
0F87 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0F8A 120000      E     LCALL   ?C?PSTXDATA
0F8D D001              POP     AR1
0F8F D002              POP     AR2
0F91 D003              POP     AR3
0F93 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1261
0F96 900000      R     MOV     DPTR,#info_string
0F99 120000      E     LCALL   ?C?PLDXDATA
0F9C C003              PUSH    AR3
0F9E C002              PUSH    AR2
0FA0 C001              PUSH    AR1
0FA2 7BFF              MOV     R3,#0FFH
0FA4 7A00        R     MOV     R2,#HIGH ?SC_95
0FA6 7900        R     MOV     R1,#LOW ?SC_95
0FA8 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0FAB 120000      E     LCALL   ?C?PSTXDATA
0FAE D001              POP     AR1
0FB0 D002              POP     AR2
0FB2 D003              POP     AR3
0FB4 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1263
0FB7 900000      R     MOV     DPTR,#info_string
0FBA 120000      E     LCALL   ?C?PLDXDATA
0FBD C003              PUSH    AR3
0FBF C002              PUSH    AR2
0FC1 C001              PUSH    AR1
0FC3 7BFF              MOV     R3,#0FFH
0FC5 7A00        R     MOV     R2,#HIGH ?SC_789
0FC7 7900        R     MOV     R1,#LOW ?SC_789
0FC9 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0FCC 120000      E     LCALL   ?C?PSTXDATA
0FCF D001              POP     AR1
0FD1 D002              POP     AR2
0FD3 D003              POP     AR3
0FD5 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1264
0FD8 7B01              MOV     R3,#01H
0FDA 7A00        R     MOV     R2,#HIGH str
0FDC 7900        R     MOV     R1,#LOW str
0FDE C003              PUSH    AR3
0FE0 C002              PUSH    AR2
0FE2 C001              PUSH    AR1
0FE4 7BFF              MOV     R3,#0FFH
0FE6 7A00        R     MOV     R2,#HIGH ?SC_808
0FE8 7900        R     MOV     R1,#LOW ?SC_808
0FEA 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
0FED 120000      E     LCALL   ?C?PSTXDATA
0FF0 900000      E     MOV     DPTR,#c_mem+06BH
0FF3 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 167 

0FF4 FE                MOV     R6,A
0FF5 A3                INC     DPTR
0FF6 E0                MOVX    A,@DPTR
0FF7 FF                MOV     R7,A
0FF8 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
0FFB EE                MOV     A,R6
0FFC F0                MOVX    @DPTR,A
0FFD A3                INC     DPTR
0FFE EF                MOV     A,R7
0FFF F0                MOVX    @DPTR,A
1000 D001              POP     AR1
1002 D002              POP     AR2
1004 D003              POP     AR3
1006 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 1265
1009 900000      R     MOV     DPTR,#info_string
100C 120000      E     LCALL   ?C?PLDXDATA
100F C003              PUSH    AR3
1011 C002              PUSH    AR2
1013 C001              PUSH    AR1
1015 7B01              MOV     R3,#01H
1017 7A00        R     MOV     R2,#HIGH str
1019 7900        R     MOV     R1,#LOW str
101B 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
101E 120000      E     LCALL   ?C?PSTXDATA
1021 D001              POP     AR1
1023 D002              POP     AR2
1025 D003              POP     AR3
1027 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1266
102A 900000      R     MOV     DPTR,#info_string
102D 120000      E     LCALL   ?C?PLDXDATA
1030 C003              PUSH    AR3
1032 C002              PUSH    AR2
1034 C001              PUSH    AR1
1036 7BFF              MOV     R3,#0FFH
1038 7A00        R     MOV     R2,#HIGH ?SC_95
103A 7900        R     MOV     R1,#LOW ?SC_95
103C 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
103F 120000      E     LCALL   ?C?PSTXDATA
1042 D001              POP     AR1
1044 D002              POP     AR2
1046 D003              POP     AR3
1048 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1268
104B 900000      R     MOV     DPTR,#info_string
104E 120000      E     LCALL   ?C?PLDXDATA
1051 C003              PUSH    AR3
1053 C002              PUSH    AR2
1055 C001              PUSH    AR1
1057 7BFF              MOV     R3,#0FFH
1059 7A00        R     MOV     R2,#HIGH ?SC_812
105B 7900        R     MOV     R1,#LOW ?SC_812
105D 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
1060 120000      E     LCALL   ?C?PSTXDATA
1063 D001              POP     AR1
1065 D002              POP     AR2
1067 D003              POP     AR3
1069 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1269
106C 7B01              MOV     R3,#01H
106E 7A00        R     MOV     R2,#HIGH str
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 168 

1070 7900        R     MOV     R1,#LOW str
1072 C003              PUSH    AR3
1074 C002              PUSH    AR2
1076 C001              PUSH    AR1
1078 7BFF              MOV     R3,#0FFH
107A 7A00        R     MOV     R2,#HIGH ?SC_808
107C 7900        R     MOV     R1,#LOW ?SC_808
107E 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
1081 120000      E     LCALL   ?C?PSTXDATA
1084 900000      E     MOV     DPTR,#c_mem+06DH
1087 E0                MOVX    A,@DPTR
1088 FE                MOV     R6,A
1089 A3                INC     DPTR
108A E0                MOVX    A,@DPTR
108B FF                MOV     R7,A
108C 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
108F EE                MOV     A,R6
1090 F0                MOVX    @DPTR,A
1091 A3                INC     DPTR
1092 EF                MOV     A,R7
1093 F0                MOVX    @DPTR,A
1094 D001              POP     AR1
1096 D002              POP     AR2
1098 D003              POP     AR3
109A 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 1270
109D 900000      R     MOV     DPTR,#info_string
10A0 120000      E     LCALL   ?C?PLDXDATA
10A3 C003              PUSH    AR3
10A5 C002              PUSH    AR2
10A7 C001              PUSH    AR1
10A9 7B01              MOV     R3,#01H
10AB 7A00        R     MOV     R2,#HIGH str
10AD 7900        R     MOV     R1,#LOW str
10AF 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
10B2 120000      E     LCALL   ?C?PSTXDATA
10B5 D001              POP     AR1
10B7 D002              POP     AR2
10B9 D003              POP     AR3
10BB 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1271
10BE 900000      R     MOV     DPTR,#info_string
10C1 120000      E     LCALL   ?C?PLDXDATA
10C4 C003              PUSH    AR3
10C6 C002              PUSH    AR2
10C8 C001              PUSH    AR1
10CA 7BFF              MOV     R3,#0FFH
10CC 7A00        R     MOV     R2,#HIGH ?SC_824
10CE 7900        R     MOV     R1,#LOW ?SC_824
10D0 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
10D3 120000      E     LCALL   ?C?PSTXDATA
10D6 D001              POP     AR1
10D8 D002              POP     AR2
10DA D003              POP     AR3
10DC 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1273
10DF 7B01              MOV     R3,#01H
10E1 7A00        R     MOV     R2,#HIGH str
10E3 7900        R     MOV     R1,#LOW str
10E5 C003              PUSH    AR3
10E7 C002              PUSH    AR2
10E9 C001              PUSH    AR1
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 169 

10EB 7BFF              MOV     R3,#0FFH
10ED 7A00        R     MOV     R2,#HIGH ?SC_828
10EF 7900        R     MOV     R1,#LOW ?SC_828
10F1 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
10F4 120000      E     LCALL   ?C?PSTXDATA
10F7 900000      E     MOV     DPTR,#g_mem+049H
10FA E0                MOVX    A,@DPTR
10FB FF                MOV     R7,A
10FC 7E00              MOV     R6,#00H
10FE 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
1101 EE                MOV     A,R6
1102 F0                MOVX    @DPTR,A
1103 A3                INC     DPTR
1104 EF                MOV     A,R7
1105 F0                MOVX    @DPTR,A
1106 D001              POP     AR1
1108 D002              POP     AR2
110A D003              POP     AR3
110C 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 1274
110F 900000      R     MOV     DPTR,#info_string
1112 120000      E     LCALL   ?C?PLDXDATA
1115 C003              PUSH    AR3
1117 C002              PUSH    AR2
1119 C001              PUSH    AR1
111B 7B01              MOV     R3,#01H
111D 7A00        R     MOV     R2,#HIGH str
111F 7900        R     MOV     R1,#LOW str
1121 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
1124 120000      E     LCALL   ?C?PSTXDATA
1127 D001              POP     AR1
1129 D002              POP     AR2
112B D003              POP     AR3
112D 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1275
1130 900000      R     MOV     DPTR,#info_string
1133 120000      E     LCALL   ?C?PLDXDATA
1136 C003              PUSH    AR3
1138 C002              PUSH    AR2
113A C001              PUSH    AR1
113C 7BFF              MOV     R3,#0FFH
113E 7A00        R     MOV     R2,#HIGH ?SC_95
1140 7900        R     MOV     R1,#LOW ?SC_95
1142 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
1145 120000      E     LCALL   ?C?PSTXDATA
1148 D001              POP     AR1
114A D002              POP     AR2
114C D003              POP     AR3
114E 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1277
1151 750000      R     MOV     i,#00H
1154 750000      R     MOV     i+01H,#00H
1157         ?C0292:
1157 C3                CLR     C
1158 E500        R     MOV     A,i+01H
115A 9402              SUBB    A,#02H
115C E500        R     MOV     A,i
115E 6480              XRL     A,#080H
1160 9480              SUBB    A,#080H
1162 4003              JC      $ + 5H
1164 020000      R     LJMP    ?C0293
                                           ; SOURCE LINE # 1279
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 170 

1167 7B01              MOV     R3,#01H
1169 7A00        R     MOV     R2,#HIGH str
116B 7900        R     MOV     R1,#LOW str
116D C003              PUSH    AR3
116F C002              PUSH    AR2
1171 C001              PUSH    AR1
1173 7BFF              MOV     R3,#0FFH
1175 7A00        R     MOV     R2,#HIGH ?SC_854
1177 7900        R     MOV     R1,#LOW ?SC_854
1179 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
117C 120000      E     LCALL   ?C?PSTXDATA
117F E500        R     MOV     A,i+01H
1181 2401              ADD     A,#01H
1183 FF                MOV     R7,A
1184 E500        R     MOV     A,i
1186 3400              ADDC    A,#00H
1188 FE                MOV     R6,A
1189 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
118C EE                MOV     A,R6
118D F0                MOVX    @DPTR,A
118E A3                INC     DPTR
118F EF                MOV     A,R7
1190 F0                MOVX    @DPTR,A
1191 E500        R     MOV     A,i+01H
1193 AE00        R     MOV     R6,i
1195 7802              MOV     R0,#02H
1197         ?C0465:
1197 C3                CLR     C
1198 33                RLC     A
1199 CE                XCH     A,R6
119A 33                RLC     A
119B CE                XCH     A,R6
119C D8F9              DJNZ    R0,?C0465
119E FF                MOV     R7,A
119F 7400        E     MOV     A,#LOW g_mem+04AH
11A1 2F                ADD     A,R7
11A2 F582              MOV     DPL,A
11A4 7400        E     MOV     A,#HIGH g_mem+04AH
11A6 3E                ADDC    A,R6
11A7 F583              MOV     DPH,A
11A9 120000      E     LCALL   ?C?LLDXDATA
11AC AA00        R     MOV     R2,i
11AE AB00        R     MOV     R3,i+01H
11B0 7400        E     MOV     A,#LOW g_mem+037H
11B2 2B                ADD     A,R3
11B3 F582              MOV     DPL,A
11B5 7400        E     MOV     A,#HIGH g_mem+037H
11B7 3A                ADDC    A,R2
11B8 F583              MOV     DPH,A
11BA E0                MOVX    A,@DPTR
11BB F9                MOV     R1,A
11BC A801              MOV     R0,AR1
11BE 120000      E     LCALL   ?C?SLSHR
11C1 900000      E     MOV     DPTR,#?_sprintf?BYTE+08H
11C4 120000      E     LCALL   ?C?LSTXDATA
11C7 D001              POP     AR1
11C9 D002              POP     AR2
11CB D003              POP     AR3
11CD 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 1280
11D0 900000      R     MOV     DPTR,#info_string
11D3 120000      E     LCALL   ?C?PLDXDATA
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 171 

11D6 C003              PUSH    AR3
11D8 C002              PUSH    AR2
11DA C001              PUSH    AR1
11DC 7B01              MOV     R3,#01H
11DE 7A00        R     MOV     R2,#HIGH str
11E0 7900        R     MOV     R1,#LOW str
11E2 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
11E5 120000      E     LCALL   ?C?PSTXDATA
11E8 D001              POP     AR1
11EA D002              POP     AR2
11EC D003              POP     AR3
11EE 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1283
11F1 7B01              MOV     R3,#01H
11F3 7A00        R     MOV     R2,#HIGH str
11F5 7900        R     MOV     R1,#LOW str
11F7 C003              PUSH    AR3
11F9 C002              PUSH    AR2
11FB C001              PUSH    AR1
11FD 7BFF              MOV     R3,#0FFH
11FF 7A00        R     MOV     R2,#HIGH ?SC_892
1201 7900        R     MOV     R1,#LOW ?SC_892
1203 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
1206 120000      E     LCALL   ?C?PSTXDATA
1209 E500        R     MOV     A,i+01H
120B AE00        R     MOV     R6,i
120D 7802              MOV     R0,#02H
120F         ?C0466:
120F C3                CLR     C
1210 33                RLC     A
1211 CE                XCH     A,R6
1212 33                RLC     A
1213 CE                XCH     A,R6
1214 D8F9              DJNZ    R0,?C0466
1216 FF                MOV     R7,A
1217 7400        E     MOV     A,#LOW g_mem+052H
1219 2F                ADD     A,R7
121A F582              MOV     DPL,A
121C 7400        E     MOV     A,#HIGH g_mem+052H
121E 3E                ADDC    A,R6
121F F583              MOV     DPH,A
1221 120000      E     LCALL   ?C?LLDXDATA
1224 AA00        R     MOV     R2,i
1226 AB00        R     MOV     R3,i+01H
1228 7400        E     MOV     A,#LOW g_mem+037H
122A 2B                ADD     A,R3
122B F582              MOV     DPL,A
122D 7400        E     MOV     A,#HIGH g_mem+037H
122F 3A                ADDC    A,R2
1230 F583              MOV     DPH,A
1232 E0                MOVX    A,@DPTR
1233 F9                MOV     R1,A
1234 A801              MOV     R0,AR1
1236 120000      E     LCALL   ?C?SLSHR
1239 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
123C 120000      E     LCALL   ?C?LSTXDATA
123F D001              POP     AR1
1241 D002              POP     AR2
1243 D003              POP     AR3
1245 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 1284
1248 900000      R     MOV     DPTR,#info_string
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 172 

124B 120000      E     LCALL   ?C?PLDXDATA
124E C003              PUSH    AR3
1250 C002              PUSH    AR2
1252 C001              PUSH    AR1
1254 7B01              MOV     R3,#01H
1256 7A00        R     MOV     R2,#HIGH str
1258 7900        R     MOV     R1,#LOW str
125A 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
125D 120000      E     LCALL   ?C?PSTXDATA
1260 D001              POP     AR1
1262 D002              POP     AR2
1264 D003              POP     AR3
1266 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1285
1269 0500        R     INC     i+01H
126B E500        R     MOV     A,i+01H
126D 7002              JNZ     ?C0467
126F 0500        R     INC     i
1271         ?C0467:
1271 020000      R     LJMP    ?C0292
1274         ?C0293:
                                           ; SOURCE LINE # 1287
1274 7B01              MOV     R3,#01H
1276 7A00        R     MOV     R2,#HIGH str
1278 7900        R     MOV     R1,#LOW str
127A C003              PUSH    AR3
127C C002              PUSH    AR2
127E C001              PUSH    AR1
1280 7BFF              MOV     R3,#0FFH
1282 7A00        R     MOV     R2,#HIGH ?SC_905
1284 7900        R     MOV     R1,#LOW ?SC_905
1286 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
1289 120000      E     LCALL   ?C?PSTXDATA
128C 900000      E     MOV     DPTR,#g_mem+05AH
128F E0                MOVX    A,@DPTR
1290 FE                MOV     R6,A
1291 A3                INC     DPTR
1292 E0                MOVX    A,@DPTR
1293 FF                MOV     R7,A
1294 900000      E     MOV     DPTR,#g_mem+037H
1297 E0                MOVX    A,@DPTR
1298 FD                MOV     R5,A
1299 EF                MOV     A,R7
129A A805              MOV     R0,AR5
129C 08                INC     R0
129D 8006              SJMP    ?C0469
129F         ?C0468:
129F CE                XCH     A,R6
12A0 A2E7              MOV     C,ACC.7
12A2 13                RRC     A
12A3 CE                XCH     A,R6
12A4 13                RRC     A
12A5         ?C0469:
12A5 D8F8              DJNZ    R0,?C0468
12A7 FF                MOV     R7,A
12A8 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
12AB EE                MOV     A,R6
12AC F0                MOVX    @DPTR,A
12AD A3                INC     DPTR
12AE EF                MOV     A,R7
12AF F0                MOVX    @DPTR,A
12B0 D001              POP     AR1
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 173 

12B2 D002              POP     AR2
12B4 D003              POP     AR3
12B6 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 1288
12B9 900000      R     MOV     DPTR,#info_string
12BC 120000      E     LCALL   ?C?PLDXDATA
12BF C003              PUSH    AR3
12C1 C002              PUSH    AR2
12C3 C001              PUSH    AR1
12C5 7B01              MOV     R3,#01H
12C7 7A00        R     MOV     R2,#HIGH str
12C9 7900        R     MOV     R1,#LOW str
12CB 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
12CE 120000      E     LCALL   ?C?PSTXDATA
12D1 D001              POP     AR1
12D3 D002              POP     AR2
12D5 D003              POP     AR3
12D7 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1289
12DA 900000      R     MOV     DPTR,#info_string
12DD 120000      E     LCALL   ?C?PLDXDATA
12E0 C003              PUSH    AR3
12E2 C002              PUSH    AR2
12E4 C001              PUSH    AR1
12E6 7BFF              MOV     R3,#0FFH
12E8 7A00        R     MOV     R2,#HIGH ?SC_95
12EA 7900        R     MOV     R1,#LOW ?SC_95
12EC 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
12EF 120000      E     LCALL   ?C?PSTXDATA
12F2 D001              POP     AR1
12F4 D002              POP     AR2
12F6 D003              POP     AR3
12F8 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1291
12FB 7B01              MOV     R3,#01H
12FD 7A00        R     MOV     R2,#HIGH str
12FF 7900        R     MOV     R1,#LOW str
1301 C003              PUSH    AR3
1303 C002              PUSH    AR2
1305 C001              PUSH    AR1
1307 7BFF              MOV     R3,#0FFH
1309 7A00        R     MOV     R2,#HIGH ?SC_923
130B 7900        R     MOV     R1,#LOW ?SC_923
130D 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
1310 120000      E     LCALL   ?C?PSTXDATA
1313 900000      E     MOV     DPTR,#g_mem+032H
1316 E0                MOVX    A,@DPTR
1317 FE                MOV     R6,A
1318 A3                INC     DPTR
1319 E0                MOVX    A,@DPTR
131A FF                MOV     R7,A
131B 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
131E EE                MOV     A,R6
131F F0                MOVX    @DPTR,A
1320 A3                INC     DPTR
1321 EF                MOV     A,R7
1322 F0                MOVX    @DPTR,A
1323 D001              POP     AR1
1325 D002              POP     AR2
1327 D003              POP     AR3
1329 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 1292
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 174 

132C 900000      R     MOV     DPTR,#info_string
132F 120000      E     LCALL   ?C?PLDXDATA
1332 C003              PUSH    AR3
1334 C002              PUSH    AR2
1336 C001              PUSH    AR1
1338 7B01              MOV     R3,#01H
133A 7A00        R     MOV     R2,#HIGH str
133C 7900        R     MOV     R1,#LOW str
133E 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
1341 120000      E     LCALL   ?C?PSTXDATA
1344 D001              POP     AR1
1346 D002              POP     AR2
1348 D003              POP     AR3
134A 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1293
134D 900000      R     MOV     DPTR,#info_string
1350 120000      E     LCALL   ?C?PLDXDATA
1353 C003              PUSH    AR3
1355 C002              PUSH    AR2
1357 C001              PUSH    AR1
1359 7BFF              MOV     R3,#0FFH
135B 7A00        R     MOV     R2,#HIGH ?SC_95
135D 7900        R     MOV     R1,#LOW ?SC_95
135F 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
1362 120000      E     LCALL   ?C?PSTXDATA
1365 D001              POP     AR1
1367 D002              POP     AR2
1369 D003              POP     AR3
136B 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1295
136E 900000      E     MOV     DPTR,#c_mem+066H
1371 E0                MOVX    A,@DPTR
1372 FF                MOV     R7,A
1373 EF                MOV     A,R7
1374 6023              JZ      ?C0295
                                           ; SOURCE LINE # 1296
1376 900000      R     MOV     DPTR,#info_string
1379 120000      E     LCALL   ?C?PLDXDATA
137C C003              PUSH    AR3
137E C002              PUSH    AR2
1380 C001              PUSH    AR1
1382 7BFF              MOV     R3,#0FFH
1384 7A00        R     MOV     R2,#HIGH ?SC_941
1386 7900        R     MOV     R1,#LOW ?SC_941
1388 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
138B 120000      E     LCALL   ?C?PSTXDATA
138E D001              POP     AR1
1390 D002              POP     AR2
1392 D003              POP     AR3
1394 120000      E     LCALL   _strcat
1397 8021              SJMP    ?C0296
1399         ?C0295:
                                           ; SOURCE LINE # 1298
1399 900000      R     MOV     DPTR,#info_string
139C 120000      E     LCALL   ?C?PLDXDATA
139F C003              PUSH    AR3
13A1 C002              PUSH    AR2
13A3 C001              PUSH    AR1
13A5 7BFF              MOV     R3,#0FFH
13A7 7A00        R     MOV     R2,#HIGH ?SC_980
13A9 7900        R     MOV     R1,#LOW ?SC_980
13AB 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 175 

13AE 120000      E     LCALL   ?C?PSTXDATA
13B1 D001              POP     AR1
13B3 D002              POP     AR2
13B5 D003              POP     AR3
13B7 120000      E     LCALL   _strcat
13BA         ?C0296:
                                           ; SOURCE LINE # 1300
13BA 900000      E     MOV     DPTR,#c_mem+06FH
13BD E0                MOVX    A,@DPTR
13BE FF                MOV     R7,A
13BF EF                MOV     A,R7
13C0 6023              JZ      ?C0297
                                           ; SOURCE LINE # 1301
13C2 900000      R     MOV     DPTR,#info_string
13C5 120000      E     LCALL   ?C?PLDXDATA
13C8 C003              PUSH    AR3
13CA C002              PUSH    AR2
13CC C001              PUSH    AR1
13CE 7BFF              MOV     R3,#0FFH
13D0 7A00        R     MOV     R2,#HIGH ?SC_1018
13D2 7900        R     MOV     R1,#LOW ?SC_1018
13D4 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
13D7 120000      E     LCALL   ?C?PSTXDATA
13DA D001              POP     AR1
13DC D002              POP     AR2
13DE D003              POP     AR3
13E0 120000      E     LCALL   _strcat
13E3 8021              SJMP    ?C0298
13E5         ?C0297:
                                           ; SOURCE LINE # 1303
13E5 900000      R     MOV     DPTR,#info_string
13E8 120000      E     LCALL   ?C?PLDXDATA
13EB C003              PUSH    AR3
13ED C002              PUSH    AR2
13EF C001              PUSH    AR1
13F1 7BFF              MOV     R3,#0FFH
13F3 7A00        R     MOV     R2,#HIGH ?SC_1066
13F5 7900        R     MOV     R1,#LOW ?SC_1066
13F7 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
13FA 120000      E     LCALL   ?C?PSTXDATA
13FD D001              POP     AR1
13FF D002              POP     AR2
1401 D003              POP     AR3
1403 120000      E     LCALL   _strcat
1406         ?C0298:
                                           ; SOURCE LINE # 1305
1406 900000      E     MOV     DPTR,#c_mem+079H
1409 E0                MOVX    A,@DPTR
140A FF                MOV     R7,A
140B EF                MOV     A,R7
140C 6023              JZ      ?C0299
                                           ; SOURCE LINE # 1306
140E 900000      R     MOV     DPTR,#info_string
1411 120000      E     LCALL   ?C?PLDXDATA
1414 C003              PUSH    AR3
1416 C002              PUSH    AR2
1418 C001              PUSH    AR1
141A 7BFF              MOV     R3,#0FFH
141C 7A00        R     MOV     R2,#HIGH ?SC_1113
141E 7900        R     MOV     R1,#LOW ?SC_1113
1420 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
1423 120000      E     LCALL   ?C?PSTXDATA
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 176 

1426 D001              POP     AR1
1428 D002              POP     AR2
142A D003              POP     AR3
142C 120000      E     LCALL   _strcat
142F 8021              SJMP    ?C0300
1431         ?C0299:
                                           ; SOURCE LINE # 1308
1431 900000      R     MOV     DPTR,#info_string
1434 120000      E     LCALL   ?C?PLDXDATA
1437 C003              PUSH    AR3
1439 C002              PUSH    AR2
143B C001              PUSH    AR1
143D 7BFF              MOV     R3,#0FFH
143F 7A00        R     MOV     R2,#HIGH ?SC_1162
1441 7900        R     MOV     R1,#LOW ?SC_1162
1443 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
1446 120000      E     LCALL   ?C?PSTXDATA
1449 D001              POP     AR1
144B D002              POP     AR2
144D D003              POP     AR3
144F 120000      E     LCALL   _strcat
1452         ?C0300:
                                           ; SOURCE LINE # 1310
1452 300023            JNB     cuff_flag_force,?C0301
                                           ; SOURCE LINE # 1311
1455 900000      R     MOV     DPTR,#info_string
1458 120000      E     LCALL   ?C?PLDXDATA
145B C003              PUSH    AR3
145D C002              PUSH    AR2
145F C001              PUSH    AR1
1461 7BFF              MOV     R3,#0FFH
1463 7A00        R     MOV     R2,#HIGH ?SC_1210
1465 7900        R     MOV     R1,#LOW ?SC_1210
1467 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
146A 120000      E     LCALL   ?C?PSTXDATA
146D D001              POP     AR1
146F D002              POP     AR2
1471 D003              POP     AR3
1473 120000      E     LCALL   _strcat
1476 8021              SJMP    ?C0302
1478         ?C0301:
                                           ; SOURCE LINE # 1313
1478 900000      R     MOV     DPTR,#info_string
147B 120000      E     LCALL   ?C?PLDXDATA
147E C003              PUSH    AR3
1480 C002              PUSH    AR2
1482 C001              PUSH    AR1
1484 7BFF              MOV     R3,#0FFH
1486 7A00        R     MOV     R2,#HIGH ?SC_1237
1488 7900        R     MOV     R1,#LOW ?SC_1237
148A 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
148D 120000      E     LCALL   ?C?PSTXDATA
1490 D001              POP     AR1
1492 D002              POP     AR2
1494 D003              POP     AR3
1496 120000      E     LCALL   _strcat
1499         ?C0302:
                                           ; SOURCE LINE # 1315
1499 300023            JNB     cuff_flag_proprio,?C0303
                                           ; SOURCE LINE # 1316
149C 900000      R     MOV     DPTR,#info_string
149F 120000      E     LCALL   ?C?PLDXDATA
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 177 

14A2 C003              PUSH    AR3
14A4 C002              PUSH    AR2
14A6 C001              PUSH    AR1
14A8 7BFF              MOV     R3,#0FFH
14AA 7A00        R     MOV     R2,#HIGH ?SC_1263
14AC 7900        R     MOV     R1,#LOW ?SC_1263
14AE 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
14B1 120000      E     LCALL   ?C?PSTXDATA
14B4 D001              POP     AR1
14B6 D002              POP     AR2
14B8 D003              POP     AR3
14BA 120000      E     LCALL   _strcat
14BD 8021              SJMP    ?C0304
14BF         ?C0303:
                                           ; SOURCE LINE # 1318
14BF 900000      R     MOV     DPTR,#info_string
14C2 120000      E     LCALL   ?C?PLDXDATA
14C5 C003              PUSH    AR3
14C7 C002              PUSH    AR2
14C9 C001              PUSH    AR1
14CB 7BFF              MOV     R3,#0FFH
14CD 7A00        R     MOV     R2,#HIGH ?SC_1299
14CF 7900        R     MOV     R1,#LOW ?SC_1299
14D1 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
14D4 120000      E     LCALL   ?C?PSTXDATA
14D7 D001              POP     AR1
14D9 D002              POP     AR2
14DB D003              POP     AR3
14DD 120000      E     LCALL   _strcat
14E0         ?C0304:
                                           ; SOURCE LINE # 1320
14E0 300023            JNB     cuff_flag_force_proprio,?C0305
                                           ; SOURCE LINE # 1321
14E3 900000      R     MOV     DPTR,#info_string
14E6 120000      E     LCALL   ?C?PLDXDATA
14E9 C003              PUSH    AR3
14EB C002              PUSH    AR2
14ED C001              PUSH    AR1
14EF 7BFF              MOV     R3,#0FFH
14F1 7A00        R     MOV     R2,#HIGH ?SC_1334
14F3 7900        R     MOV     R1,#LOW ?SC_1334
14F5 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
14F8 120000      E     LCALL   ?C?PSTXDATA
14FB D001              POP     AR1
14FD D002              POP     AR2
14FF D003              POP     AR3
1501 120000      E     LCALL   _strcat
1504 8021              SJMP    ?C0306
1506         ?C0305:
                                           ; SOURCE LINE # 1323
1506 900000      R     MOV     DPTR,#info_string
1509 120000      E     LCALL   ?C?PLDXDATA
150C C003              PUSH    AR3
150E C002              PUSH    AR2
1510 C001              PUSH    AR1
1512 7BFF              MOV     R3,#0FFH
1514 7A00        R     MOV     R2,#HIGH ?SC_1371
1516 7900        R     MOV     R1,#LOW ?SC_1371
1518 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
151B 120000      E     LCALL   ?C?PSTXDATA
151E D001              POP     AR1
1520 D002              POP     AR2
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 178 

1522 D003              POP     AR3
1524 120000      E     LCALL   _strcat
1527         ?C0306:
                                           ; SOURCE LINE # 1325
1527 900000      E     MOV     DPTR,#c_mem+080H
152A E0                MOVX    A,@DPTR
152B FF                MOV     R7,A
152C EF                MOV     A,R7
152D 6023              JZ      ?C0307
                                           ; SOURCE LINE # 1326
152F 900000      R     MOV     DPTR,#info_string
1532 120000      E     LCALL   ?C?PLDXDATA
1535 C003              PUSH    AR3
1537 C002              PUSH    AR2
1539 C001              PUSH    AR1
153B 7BFF              MOV     R3,#0FFH
153D 7A00        R     MOV     R2,#HIGH ?SC_1407
153F 7900        R     MOV     R1,#LOW ?SC_1407
1541 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
1544 120000      E     LCALL   ?C?PSTXDATA
1547 D001              POP     AR1
1549 D002              POP     AR2
154B D003              POP     AR3
154D 120000      E     LCALL   _strcat
1550 8021              SJMP    ?C0308
1552         ?C0307:
                                           ; SOURCE LINE # 1328
1552 900000      R     MOV     DPTR,#info_string
1555 120000      E     LCALL   ?C?PLDXDATA
1558 C003              PUSH    AR3
155A C002              PUSH    AR2
155C C001              PUSH    AR1
155E 7BFF              MOV     R3,#0FFH
1560 7A00        R     MOV     R2,#HIGH ?SC_1426
1562 7900        R     MOV     R1,#LOW ?SC_1426
1564 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
1567 120000      E     LCALL   ?C?PSTXDATA
156A D001              POP     AR1
156C D002              POP     AR2
156E D003              POP     AR3
1570 120000      E     LCALL   _strcat
1573         ?C0308:
                                           ; SOURCE LINE # 1330
1573 7B01              MOV     R3,#01H
1575 7A00        R     MOV     R2,#HIGH str
1577 7900        R     MOV     R1,#LOW str
1579 C003              PUSH    AR3
157B C002              PUSH    AR2
157D C001              PUSH    AR1
157F 7BFF              MOV     R3,#0FFH
1581 7A00        R     MOV     R2,#HIGH ?SC_1444
1583 7900        R     MOV     R1,#LOW ?SC_1444
1585 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
1588 120000      E     LCALL   ?C?PSTXDATA
158B 900000      E     MOV     DPTR,#timer_value
158E 120000      E     LCALL   ?C?LLDXDATA0
1591 900000      E     MOV     DPTR,#timer_value0
1594 120000      E     LCALL   ?C?LLDXDATA
1597 120000      E     LCALL   ?C?LSUB
159A 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
159D 120000      E     LCALL   ?C?LSTXDATA
15A0 D001              POP     AR1
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 179 

15A2 D002              POP     AR2
15A4 D003              POP     AR3
15A6 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 1331
15A9 900000      R     MOV     DPTR,#info_string
15AC 120000      E     LCALL   ?C?PLDXDATA
15AF C003              PUSH    AR3
15B1 C002              PUSH    AR2
15B3 C001              PUSH    AR1
15B5 7B01              MOV     R3,#01H
15B7 7A00        R     MOV     R2,#HIGH str
15B9 7900        R     MOV     R1,#LOW str
15BB 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
15BE 120000      E     LCALL   ?C?PSTXDATA
15C1 D001              POP     AR1
15C3 D002              POP     AR2
15C5 D003              POP     AR3
15C7 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1332
15CA 900000      R     MOV     DPTR,#info_string
15CD 120000      E     LCALL   ?C?PLDXDATA
15D0 C003              PUSH    AR3
15D2 C002              PUSH    AR2
15D4 C001              PUSH    AR1
15D6 7BFF              MOV     R3,#0FFH
15D8 7A00        R     MOV     R2,#HIGH ?SC_95
15DA 7900        R     MOV     R1,#LOW ?SC_95
15DC 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
15DF 120000      E     LCALL   ?C?PSTXDATA
15E2 D001              POP     AR1
15E4 D002              POP     AR2
15E6 D003              POP     AR3
15E8 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 1333
15EB 22                RET     
             ; FUNCTION _infoPrepare (END)

             ; FUNCTION _commWrite_old_id (BEGIN)
                                           ; SOURCE LINE # 1339
0000 900000      R     MOV     DPTR,#packet_data
0003 120000      E     LCALL   ?C?PSTXDATA
0006 900000      R     MOV     DPTR,#packet_lenght
0009 EC                MOV     A,R4
000A F0                MOVX    @DPTR,A
000B A3                INC     DPTR
000C ED                MOV     A,R5
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1340
                                           ; SOURCE LINE # 1344
000E 7F3A              MOV     R7,#03AH
0010 120000      E     LCALL   _UART_RS485_PutChar
                                           ; SOURCE LINE # 1345
0013 7F3A              MOV     R7,#03AH
0015 120000      E     LCALL   _UART_RS485_PutChar
                                           ; SOURCE LINE # 1348
0018 900000      R     MOV     DPTR,#old_id
001B E0                MOVX    A,@DPTR
001C FF                MOV     R7,A
001D 120000      E     LCALL   _UART_RS485_PutChar
                                           ; SOURCE LINE # 1353
0020 900000      R     MOV     DPTR,#packet_lenght
0023 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 180 

0024 FE                MOV     R6,A
0025 A3                INC     DPTR
0026 E0                MOVX    A,@DPTR
0027 FF                MOV     R7,A
0028 120000      E     LCALL   _UART_RS485_PutChar
                                           ; SOURCE LINE # 1355
002B 750000      R     MOV     index,#00H
002E 750000      R     MOV     index+01H,#00H
0031         ?C0310:
0031 900000      R     MOV     DPTR,#packet_lenght
0034 E0                MOVX    A,@DPTR
0035 FE                MOV     R6,A
0036 A3                INC     DPTR
0037 E0                MOVX    A,@DPTR
0038 FF                MOV     R7,A
0039 C3                CLR     C
003A E500        R     MOV     A,index+01H
003C 9F                SUBB    A,R7
003D E500        R     MOV     A,index
003F 9E                SUBB    A,R6
0040 5021              JNC     ?C0311
                                           ; SOURCE LINE # 1356
0042 900000      R     MOV     DPTR,#packet_data
0045 120000      E     LCALL   ?C?PLDXDATA
0048 AE00        R     MOV     R6,index
004A AF00        R     MOV     R7,index+01H
004C E9                MOV     A,R1
004D 2F                ADD     A,R7
004E F9                MOV     R1,A
004F EA                MOV     A,R2
0050 3E                ADDC    A,R6
0051 FA                MOV     R2,A
0052 120000      E     LCALL   ?C?CLDPTR
0055 FF                MOV     R7,A
0056 120000      E     LCALL   _UART_RS485_PutChar
                                           ; SOURCE LINE # 1357
0059 0500        R     INC     index+01H
005B E500        R     MOV     A,index+01H
005D 7002              JNZ     ?C0470
005F 0500        R     INC     index
0061         ?C0470:
0061 80CE              SJMP    ?C0310
0063         ?C0311:
                                           ; SOURCE LINE # 1359
0063 750000      R     MOV     index,#00H
0066 750000      R     MOV     index+01H,#00H
0069         ?C0313:
                                           ; SOURCE LINE # 1361
0069 120000      E     LCALL   UART_RS485_ReadTxStatus
006C EF                MOV     A,R7
006D 20E015            JB      ACC.0,?C0314
0070 0500        R     INC     index+01H
0072 E500        R     MOV     A,index+01H
0074 AE00        R     MOV     R6,index
0076 7002              JNZ     ?C0471
0078 0500        R     INC     index
007A         ?C0471:
007A 14                DEC     A
007B FF                MOV     R7,A
007C D3                SETB    C
007D EF                MOV     A,R7
007E 94E8              SUBB    A,#0E8H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 181 

0080 EE                MOV     A,R6
0081 9403              SUBB    A,#03H
0083 40E4              JC      ?C0313
0085         ?C0314:
                                           ; SOURCE LINE # 1363
0085 7F01              MOV     R7,#01H
0087 120000      E     LCALL   _RS485_CTS_Write
                                           ; SOURCE LINE # 1364
008A 7F00              MOV     R7,#00H
008C 120000      E     LCALL   _RS485_CTS_Write
                                           ; SOURCE LINE # 1365
008F 22                RET     
             ; FUNCTION _commWrite_old_id (END)

             ; FUNCTION _commWrite (BEGIN)
                                           ; SOURCE LINE # 1367
0000 900000      R     MOV     DPTR,#packet_data
0003 120000      E     LCALL   ?C?PSTXDATA
0006 900000      R     MOV     DPTR,#packet_lenght
0009 EC                MOV     A,R4
000A F0                MOVX    @DPTR,A
000B A3                INC     DPTR
000C ED                MOV     A,R5
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1368
                                           ; SOURCE LINE # 1372
000E 7F3A              MOV     R7,#03AH
0010 120000      E     LCALL   _UART_RS485_PutChar
                                           ; SOURCE LINE # 1373
0013 7F3A              MOV     R7,#03AH
0015 120000      E     LCALL   _UART_RS485_PutChar
                                           ; SOURCE LINE # 1376
0018 900000      R     MOV     DPTR,#next
001B E0                MOVX    A,@DPTR
001C FF                MOV     R7,A
001D EF                MOV     A,R7
001E 600A              JZ      ?C0316
                                           ; SOURCE LINE # 1379
0020 900000      E     MOV     DPTR,#g_mem+078H
0023 E0                MOVX    A,@DPTR
0024 FF                MOV     R7,A
0025 120000      E     LCALL   _UART_RS485_PutChar
0028 8008              SJMP    ?C0317
002A         ?C0316:
                                           ; SOURCE LINE # 1381
002A 900000      E     MOV     DPTR,#g_mem+01H
002D E0                MOVX    A,@DPTR
002E FF                MOV     R7,A
002F 120000      E     LCALL   _UART_RS485_PutChar
0032         ?C0317:
                                           ; SOURCE LINE # 1384
0032 900000      R     MOV     DPTR,#packet_lenght
0035 E0                MOVX    A,@DPTR
0036 FE                MOV     R6,A
0037 A3                INC     DPTR
0038 E0                MOVX    A,@DPTR
0039 FF                MOV     R7,A
003A 120000      E     LCALL   _UART_RS485_PutChar
                                           ; SOURCE LINE # 1387
003D 750000      R     MOV     index,#00H
0040 750000      R     MOV     index+01H,#00H
0043         ?C0318:
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 182 

0043 900000      R     MOV     DPTR,#packet_lenght
0046 E0                MOVX    A,@DPTR
0047 FE                MOV     R6,A
0048 A3                INC     DPTR
0049 E0                MOVX    A,@DPTR
004A FF                MOV     R7,A
004B C3                CLR     C
004C E500        R     MOV     A,index+01H
004E 9F                SUBB    A,R7
004F E500        R     MOV     A,index
0051 9E                SUBB    A,R6
0052 5021              JNC     ?C0319
                                           ; SOURCE LINE # 1388
0054 900000      R     MOV     DPTR,#packet_data
0057 120000      E     LCALL   ?C?PLDXDATA
005A AE00        R     MOV     R6,index
005C AF00        R     MOV     R7,index+01H
005E E9                MOV     A,R1
005F 2F                ADD     A,R7
0060 F9                MOV     R1,A
0061 EA                MOV     A,R2
0062 3E                ADDC    A,R6
0063 FA                MOV     R2,A
0064 120000      E     LCALL   ?C?CLDPTR
0067 FF                MOV     R7,A
0068 120000      E     LCALL   _UART_RS485_PutChar
006B 0500        R     INC     index+01H
006D E500        R     MOV     A,index+01H
006F 7002              JNZ     ?C0472
0071 0500        R     INC     index
0073         ?C0472:
0073 80CE              SJMP    ?C0318
0075         ?C0319:
                                           ; SOURCE LINE # 1390
0075 750000      R     MOV     index,#00H
0078 750000      R     MOV     index+01H,#00H
007B         ?C0321:
                                           ; SOURCE LINE # 1392
007B 120000      E     LCALL   UART_RS485_ReadTxStatus
007E EF                MOV     A,R7
007F 20E015            JB      ACC.0,?C0322
0082 0500        R     INC     index+01H
0084 E500        R     MOV     A,index+01H
0086 AE00        R     MOV     R6,index
0088 7002              JNZ     ?C0473
008A 0500        R     INC     index
008C         ?C0473:
008C 14                DEC     A
008D FF                MOV     R7,A
008E D3                SETB    C
008F EF                MOV     A,R7
0090 94E8              SUBB    A,#0E8H
0092 EE                MOV     A,R6
0093 9403              SUBB    A,#03H
0095 40E4              JC      ?C0321
0097         ?C0322:
                                           ; SOURCE LINE # 1394
0097 900000      R     MOV     DPTR,#next
009A E0                MOVX    A,@DPTR
009B FF                MOV     R7,A
009C EF                MOV     A,R7
009D 700A              JNZ     ?C0324
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 183 

                                           ; SOURCE LINE # 1395
009F 7F01              MOV     R7,#01H
00A1 120000      E     LCALL   _RS485_CTS_Write
                                           ; SOURCE LINE # 1396
00A4 7F00              MOV     R7,#00H
00A6 120000      E     LCALL   _RS485_CTS_Write
                                           ; SOURCE LINE # 1397
                                           ; SOURCE LINE # 1398
00A9         ?C0324:
00A9 22                RET     
             ; FUNCTION _commWrite (END)

             ; FUNCTION _sendAcknowledgment (BEGIN)
                                           ; SOURCE LINE # 1404
0000 900000      R     MOV     DPTR,#value
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1411
0005 900000      R     MOV     DPTR,#value
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 8F00        R     MOV     packet_data,R7
                                           ; SOURCE LINE # 1414
000C 900000      R     MOV     DPTR,#value
000F E0                MOVX    A,@DPTR
0010 FF                MOV     R7,A
0011 8F00        R     MOV     packet_data+01H,R7
                                           ; SOURCE LINE # 1416
0013 7B00              MOV     R3,#00H
0015 7A00        R     MOV     R2,#HIGH packet_data
0017 7900        R     MOV     R1,#LOW packet_data
0019 900000      R     MOV     DPTR,#?_commWrite?BYTE+05H
001C E4                CLR     A
001D F0                MOVX    @DPTR,A
001E 7D02              MOV     R5,#02H
0020 7C00              MOV     R4,#00H
0022 120000      R     LCALL   _commWrite
                                           ; SOURCE LINE # 1417
0025 22                RET     
             ; FUNCTION _sendAcknowledgment (END)

             ; FUNCTION _memStore (BEGIN)
                                           ; SOURCE LINE # 1427
0000 900000      R     MOV     DPTR,#displacement
0003 EE                MOV     A,R6
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EF                MOV     A,R7
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1432
0008 900000      R     MOV     DPTR,#ret_val
000B 7401              MOV     A,#01H
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1434
000E 7F00              MOV     R7,#00H
0010 120000      E     LCALL   _PWM_MOTORS_WriteCompare1
                                           ; SOURCE LINE # 1435
0013 7F00              MOV     R7,#00H
0015 120000      E     LCALL   _PWM_MOTORS_WriteCompare2
                                           ; SOURCE LINE # 1438
0018 120000      E     LCALL   EEPROM_UpdateTemperature
                                           ; SOURCE LINE # 1440
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 184 

001B 7B01              MOV     R3,#01H
001D 7A00        E     MOV     R2,#HIGH g_mem
001F 7900        E     MOV     R1,#LOW g_mem
0021 C003              PUSH    AR3
0023 C002              PUSH    AR2
0025 C001              PUSH    AR1
0027 7B01              MOV     R3,#01H
0029 7A00        E     MOV     R2,#HIGH c_mem
002B 7900        E     MOV     R1,#LOW c_mem
002D A801              MOV     R0,AR1
002F AC02              MOV     R4,AR2
0031 AD03              MOV     R5,AR3
0033 D001              POP     AR1
0035 D002              POP     AR2
0037 D003              POP     AR3
0039 7E00              MOV     R6,#00H
003B 7F81              MOV     R7,#081H
003D 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 1442
0040 900000      R     MOV     DPTR,#pages
0043 E4                CLR     A
0044 F0                MOVX    @DPTR,A
0045 A3                INC     DPTR
0046 7409              MOV     A,#09H
0048 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1444
0049 900000      R     MOV     DPTR,#i
004C E4                CLR     A
004D F0                MOVX    @DPTR,A
004E A3                INC     DPTR
004F E4                CLR     A
0050 F0                MOVX    @DPTR,A
0051         ?C0326:
0051 900000      R     MOV     DPTR,#pages
0054 E0                MOVX    A,@DPTR
0055 FE                MOV     R6,A
0056 A3                INC     DPTR
0057 E0                MOVX    A,@DPTR
0058 FF                MOV     R7,A
0059 900000      R     MOV     DPTR,#i
005C E0                MOVX    A,@DPTR
005D FC                MOV     R4,A
005E A3                INC     DPTR
005F E0                MOVX    A,@DPTR
0060 FD                MOV     R5,A
0061 C3                CLR     C
0062 ED                MOV     A,R5
0063 9F                SUBB    A,R7
0064 EE                MOV     A,R6
0065 6480              XRL     A,#080H
0067 F8                MOV     R0,A
0068 EC                MOV     A,R4
0069 6480              XRL     A,#080H
006B 98                SUBB    A,R0
006C 505A              JNC     ?C0327
                                           ; SOURCE LINE # 1445
006E 900000      R     MOV     DPTR,#i
0071 E0                MOVX    A,@DPTR
0072 FE                MOV     R6,A
0073 A3                INC     DPTR
0074 E0                MOVX    A,@DPTR
0075 FF                MOV     R7,A
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 185 

0076 EF                MOV     A,R7
0077 C4                SWAP    A
0078 F8                MOV     R0,A
0079 540F              ANL     A,#0FH
007B C8                XCH     A,R0
007C 68                XRL     A,R0
007D FF                MOV     R7,A
007E EE                MOV     A,R6
007F C4                SWAP    A
0080 54F0              ANL     A,#0F0H
0082 48                ORL     A,R0
0083 FE                MOV     R6,A
0084 7B01              MOV     R3,#01H
0086 7A00        E     MOV     R2,#HIGH g_mem
0088 7900        E     MOV     R1,#LOW g_mem
008A E9                MOV     A,R1
008B 2F                ADD     A,R7
008C F9                MOV     R1,A
008D EA                MOV     A,R2
008E 3E                ADDC    A,R6
008F FA                MOV     R2,A
0090 900000      R     MOV     DPTR,#displacement
0093 E0                MOVX    A,@DPTR
0094 FE                MOV     R6,A
0095 A3                INC     DPTR
0096 E0                MOVX    A,@DPTR
0097 FF                MOV     R7,A
0098 900000      R     MOV     DPTR,#i
009B E0                MOVX    A,@DPTR
009C FC                MOV     R4,A
009D A3                INC     DPTR
009E E0                MOVX    A,@DPTR
009F FD                MOV     R5,A
00A0 AE05              MOV     R6,AR5
00A2 EE                MOV     A,R6
00A3 2F                ADD     A,R7
00A4 FD                MOV     R5,A
00A5 120000      E     LCALL   _EEPROM_Write
00A8 900000      R     MOV     DPTR,#writeStatus
00AB EF                MOV     A,R7
00AC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1446
00AD 900000      R     MOV     DPTR,#writeStatus
00B0 E0                MOVX    A,@DPTR
00B1 FF                MOV     R7,A
00B2 EF                MOV     A,R7
00B3 6007              JZ      ?C0328
                                           ; SOURCE LINE # 1447
00B5 900000      R     MOV     DPTR,#ret_val
00B8 E4                CLR     A
00B9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1448
00BA 800C              SJMP    ?C0327
                                           ; SOURCE LINE # 1449
                                           ; SOURCE LINE # 1450
00BC         ?C0328:
00BC 900000      R     MOV     DPTR,#i
00BF E4                CLR     A
00C0 75F001            MOV     B,#01H
00C3 120000      E     LCALL   ?C?IILDX
00C6 8089              SJMP    ?C0326
00C8         ?C0327:
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 186 

                                           ; SOURCE LINE # 1452
00C8 7B01              MOV     R3,#01H
00CA 7A00        E     MOV     R2,#HIGH c_mem
00CC 7900        E     MOV     R1,#LOW c_mem
00CE C003              PUSH    AR3
00D0 C002              PUSH    AR2
00D2 C001              PUSH    AR1
00D4 7B01              MOV     R3,#01H
00D6 7A00        E     MOV     R2,#HIGH g_mem
00D8 7900        E     MOV     R1,#LOW g_mem
00DA A801              MOV     R0,AR1
00DC AC02              MOV     R4,AR2
00DE AD03              MOV     R5,AR3
00E0 D001              POP     AR1
00E2 D002              POP     AR2
00E4 D003              POP     AR3
00E6 7E00              MOV     R6,#00H
00E8 7F81              MOV     R7,#081H
00EA 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 1454
00ED 900000      R     MOV     DPTR,#ret_val
00F0 E0                MOVX    A,@DPTR
00F1 FF                MOV     R7,A
                                           ; SOURCE LINE # 1455
00F2         ?C0330:
00F2 22                RET     
             ; FUNCTION _memStore (END)

             ; FUNCTION memRecall (BEGIN)
                                           ; SOURCE LINE # 1465
                                           ; SOURCE LINE # 1469
0000 900000      R     MOV     DPTR,#i
0003 E4                CLR     A
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 E4                CLR     A
0007 F0                MOVX    @DPTR,A
0008         ?C0331:
0008 900000      R     MOV     DPTR,#i
000B E0                MOVX    A,@DPTR
000C FE                MOV     R6,A
000D A3                INC     DPTR
000E E0                MOVX    A,@DPTR
000F FF                MOV     R7,A
0010 C3                CLR     C
0011 EF                MOV     A,R7
0012 9481              SUBB    A,#081H
0014 EE                MOV     A,R6
0015 9400              SUBB    A,#00H
0017 5040              JNC     ?C0332
                                           ; SOURCE LINE # 1470
0019 900000      R     MOV     DPTR,#i
001C E0                MOVX    A,@DPTR
001D FE                MOV     R6,A
001E A3                INC     DPTR
001F E0                MOVX    A,@DPTR
0020 FF                MOV     R7,A
0021 900000      R     MOV     DPTR,#EEPROM_ADDR
0024 E0                MOVX    A,@DPTR
0025 FC                MOV     R4,A
0026 A3                INC     DPTR
0027 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 187 

0028 FD                MOV     R5,A
0029 8D82              MOV     DPL,R5
002B 8C83              MOV     DPH,R4
002D E582              MOV     A,DPL
002F 2F                ADD     A,R7
0030 F582              MOV     DPL,A
0032 E583              MOV     A,DPH
0034 3E                ADDC    A,R6
0035 F583              MOV     DPH,A
0037 E0                MOVX    A,@DPTR
0038 FF                MOV     R7,A
0039 900000      R     MOV     DPTR,#i
003C E0                MOVX    A,@DPTR
003D FC                MOV     R4,A
003E A3                INC     DPTR
003F E0                MOVX    A,@DPTR
0040 FD                MOV     R5,A
0041 7400        E     MOV     A,#LOW g_mem
0043 2D                ADD     A,R5
0044 F582              MOV     DPL,A
0046 7400        E     MOV     A,#HIGH g_mem
0048 3C                ADDC    A,R4
0049 F583              MOV     DPH,A
004B EF                MOV     A,R7
004C F0                MOVX    @DPTR,A
004D 900000      R     MOV     DPTR,#i
0050 E4                CLR     A
0051 75F001            MOV     B,#01H
0054 120000      E     LCALL   ?C?IILDX
0057 80AF              SJMP    ?C0331
0059         ?C0332:
                                           ; SOURCE LINE # 1474
0059 900000      E     MOV     DPTR,#g_mem
005C E0                MOVX    A,@DPTR
005D FF                MOV     R7,A
005E EF                MOV     A,R7
005F 7004              JNZ     ?C0334
                                           ; SOURCE LINE # 1475
0061 120000      R     LCALL   memRestore
0064 22                RET     
0065         ?C0334:
                                           ; SOURCE LINE # 1477
0065 7B01              MOV     R3,#01H
0067 7A00        E     MOV     R2,#HIGH g_mem
0069 7900        E     MOV     R1,#LOW g_mem
006B C003              PUSH    AR3
006D C002              PUSH    AR2
006F C001              PUSH    AR1
0071 7B01              MOV     R3,#01H
0073 7A00        E     MOV     R2,#HIGH c_mem
0075 7900        E     MOV     R1,#LOW c_mem
0077 A801              MOV     R0,AR1
0079 AC02              MOV     R4,AR2
007B AD03              MOV     R5,AR3
007D D001              POP     AR1
007F D002              POP     AR2
0081 D003              POP     AR3
0083 7E00              MOV     R6,#00H
0085 7F81              MOV     R7,#081H
0087 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 1479
008A         ?C0336:
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 188 

008A 22                RET     
             ; FUNCTION memRecall (END)

             ; FUNCTION memRestore (BEGIN)
                                           ; SOURCE LINE # 1489
                                           ; SOURCE LINE # 1493
0000 900000      R     MOV     DPTR,#i
0003 E4                CLR     A
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 E4                CLR     A
0007 F0                MOVX    @DPTR,A
0008         ?C0337:
0008 900000      R     MOV     DPTR,#i
000B E0                MOVX    A,@DPTR
000C FE                MOV     R6,A
000D A3                INC     DPTR
000E E0                MOVX    A,@DPTR
000F FF                MOV     R7,A
0010 C3                CLR     C
0011 EF                MOV     A,R7
0012 9481              SUBB    A,#081H
0014 EE                MOV     A,R6
0015 9400              SUBB    A,#00H
0017 5048              JNC     ?C0338
                                           ; SOURCE LINE # 1494
0019 900000      R     MOV     DPTR,#i
001C E0                MOVX    A,@DPTR
001D FE                MOV     R6,A
001E A3                INC     DPTR
001F E0                MOVX    A,@DPTR
0020 FF                MOV     R7,A
0021 EF                MOV     A,R7
0022 2480              ADD     A,#080H
0024 FF                MOV     R7,A
0025 EE                MOV     A,R6
0026 3400              ADDC    A,#00H
0028 FE                MOV     R6,A
0029 900000      R     MOV     DPTR,#EEPROM_ADDR
002C E0                MOVX    A,@DPTR
002D FC                MOV     R4,A
002E A3                INC     DPTR
002F E0                MOVX    A,@DPTR
0030 FD                MOV     R5,A
0031 8D82              MOV     DPL,R5
0033 8C83              MOV     DPH,R4
0035 E582              MOV     A,DPL
0037 2F                ADD     A,R7
0038 F582              MOV     DPL,A
003A E583              MOV     A,DPH
003C 3E                ADDC    A,R6
003D F583              MOV     DPH,A
003F E0                MOVX    A,@DPTR
0040 FF                MOV     R7,A
0041 900000      R     MOV     DPTR,#i
0044 E0                MOVX    A,@DPTR
0045 FC                MOV     R4,A
0046 A3                INC     DPTR
0047 E0                MOVX    A,@DPTR
0048 FD                MOV     R5,A
0049 7400        E     MOV     A,#LOW g_mem
004B 2D                ADD     A,R5
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 189 

004C F582              MOV     DPL,A
004E 7400        E     MOV     A,#HIGH g_mem
0050 3C                ADDC    A,R4
0051 F583              MOV     DPH,A
0053 EF                MOV     A,R7
0054 F0                MOVX    @DPTR,A
0055 900000      R     MOV     DPTR,#i
0058 E4                CLR     A
0059 75F001            MOV     B,#01H
005C 120000      E     LCALL   ?C?IILDX
005F 80A7              SJMP    ?C0337
0061         ?C0338:
                                           ; SOURCE LINE # 1498
0061 900000      E     MOV     DPTR,#g_mem
0064 E0                MOVX    A,@DPTR
0065 FF                MOV     R7,A
0066 EF                MOV     A,R7
0067 7004              JNZ     ?C0340
                                           ; SOURCE LINE # 1499
0069 120000      R     LCALL   memInit
006C 22                RET     
006D         ?C0340:
                                           ; SOURCE LINE # 1501
006D 7F00              MOV     R7,#00H
006F 7E00              MOV     R6,#00H
0071 120000      R     LCALL   _memStore
                                           ; SOURCE LINE # 1503
0074         ?C0341:
0074 22                RET     
             ; FUNCTION memRestore (END)

             ; FUNCTION memInit (BEGIN)
                                           ; SOURCE LINE # 1512
                                           ; SOURCE LINE # 1516
0000 900000      E     MOV     DPTR,#g_mem+01H
0003 7401              MOV     A,#01H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1517
0006 7F99              MOV     R7,#099H
0008 7E19              MOV     R6,#019H
000A 7D00              MOV     R5,#00H
000C 7C00              MOV     R4,#00H
000E 900000      E     MOV     DPTR,#g_mem+02H
0011 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1518
0014 7F00              MOV     R7,#00H
0016 7E00              MOV     R6,#00H
0018 7D00              MOV     R5,#00H
001A 7C00              MOV     R4,#00H
001C 900000      E     MOV     DPTR,#g_mem+06H
001F 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1519
0022 7FCC              MOV     R7,#0CCH
0024 7ECC              MOV     R6,#0CCH
0026 7D00              MOV     R5,#00H
0028 7C00              MOV     R4,#00H
002A 900000      E     MOV     DPTR,#g_mem+0AH
002D 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1520
0030 7F00              MOV     R7,#00H
0032 7E00              MOV     R6,#00H
0034 7D06              MOV     R5,#06H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 190 

0036 7C00              MOV     R4,#00H
0038 900000      E     MOV     DPTR,#g_mem+0EH
003B 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1521
003E 7F00              MOV     R7,#00H
0040 7E00              MOV     R6,#00H
0042 7D00              MOV     R5,#00H
0044 7C00              MOV     R4,#00H
0046 900000      E     MOV     DPTR,#g_mem+012H
0049 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1522
004C 7F00              MOV     R7,#00H
004E 7E00              MOV     R6,#00H
0050 7D00              MOV     R5,#00H
0052 7C00              MOV     R4,#00H
0054 900000      E     MOV     DPTR,#g_mem+016H
0057 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1524
005A 7F67              MOV     R7,#067H
005C 7EE6              MOV     R6,#0E6H
005E 7DFF              MOV     R5,#0FFH
0060 7CFF              MOV     R4,#0FFH
0062 900000      E     MOV     DPTR,#g_mem+01AH
0065 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1525
0068 7F00              MOV     R7,#00H
006A 7E00              MOV     R6,#00H
006C 7D00              MOV     R5,#00H
006E 7C00              MOV     R4,#00H
0070 900000      E     MOV     DPTR,#g_mem+01EH
0073 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1526
0076 7F00              MOV     R7,#00H
0078 7E00              MOV     R6,#00H
007A 7D00              MOV     R5,#00H
007C 7C00              MOV     R4,#00H
007E 900000      E     MOV     DPTR,#g_mem+022H
0081 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1527
0084 7FCC              MOV     R7,#0CCH
0086 7E4C              MOV     R6,#04CH
0088 7D00              MOV     R5,#00H
008A 7C00              MOV     R4,#00H
008C 900000      E     MOV     DPTR,#g_mem+026H
008F 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1528
0092 7F0D              MOV     R7,#0DH
0094 7E00              MOV     R6,#00H
0096 7D00              MOV     R5,#00H
0098 7C00              MOV     R4,#00H
009A 900000      E     MOV     DPTR,#g_mem+02AH
009D 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1529
00A0 7F00              MOV     R7,#00H
00A2 7E00              MOV     R6,#00H
00A4 7D00              MOV     R5,#00H
00A6 7C00              MOV     R4,#00H
00A8 900000      E     MOV     DPTR,#g_mem+02EH
00AB 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1531
00AE 900000      E     MOV     DPTR,#g_mem+034H
00B1 7403              MOV     A,#03H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 191 

00B3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1532
00B4 900000      E     MOV     DPTR,#g_mem+035H
00B7 E4                CLR     A
00B8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1533
00B9 900000      E     MOV     DPTR,#g_mem+036H
00BC 7403              MOV     A,#03H
00BE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1534
00BF 900000      E     MOV     DPTR,#g_mem+05DH
00C2 E4                CLR     A
00C3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1536
00C4 900000      E     MOV     DPTR,#g_mem+049H
00C7 E4                CLR     A
00C8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1538
00C9 750000      R     MOV     i,#00H
00CC         ?C0343:
00CC E500        R     MOV     A,i
00CE C3                CLR     C
00CF 9402              SUBB    A,#02H
00D1 503A              JNC     ?C0344
                                           ; SOURCE LINE # 1539
00D3 7FD0              MOV     R7,#0D0H
00D5 7E8A              MOV     R6,#08AH
00D7 7DFF              MOV     R5,#0FFH
00D9 7CFF              MOV     R4,#0FFH
00DB AB00        R     MOV     R3,i
00DD EB                MOV     A,R3
00DE 25E0              ADD     A,ACC
00E0 25E0              ADD     A,ACC
00E2 2400        E     ADD     A,#LOW g_mem+04AH
00E4 F582              MOV     DPL,A
00E6 E4                CLR     A
00E7 3400        E     ADDC    A,#HIGH g_mem+04AH
00E9 F583              MOV     DPH,A
00EB 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1540
00EE 7F30              MOV     R7,#030H
00F0 7E75              MOV     R6,#075H
00F2 7D00              MOV     R5,#00H
00F4 7C00              MOV     R4,#00H
00F6 AB00        R     MOV     R3,i
00F8 EB                MOV     A,R3
00F9 25E0              ADD     A,ACC
00FB 25E0              ADD     A,ACC
00FD 2400        E     ADD     A,#LOW g_mem+052H
00FF F582              MOV     DPL,A
0101 E4                CLR     A
0102 3400        E     ADDC    A,#HIGH g_mem+052H
0104 F583              MOV     DPH,A
0106 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1541
0109 0500        R     INC     i
010B 80BF              SJMP    ?C0343
010D         ?C0344:
                                           ; SOURCE LINE # 1543
010D 750000      R     MOV     i,#00H
0110         ?C0346:
0110 E500        R     MOV     A,i
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 192 

0112 C3                CLR     C
0113 9402              SUBB    A,#02H
0115 505C              JNC     ?C0347
                                           ; SOURCE LINE # 1544
                                           ; SOURCE LINE # 1545
0117 7F00              MOV     R7,#00H
0119 7E00              MOV     R6,#00H
011B 7D80              MOV     R5,#080H
011D 7C3F              MOV     R4,#03FH
011F AB00        R     MOV     R3,i
0121 EB                MOV     A,R3
0122 25E0              ADD     A,ACC
0124 25E0              ADD     A,ACC
0126 2400        E     ADD     A,#LOW g_mem+041H
0128 F582              MOV     DPL,A
012A E4                CLR     A
012B 3400        E     ADDC    A,#HIGH g_mem+041H
012D F583              MOV     DPH,A
012F 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1546
0132 AF00        R     MOV     R7,i
0134 7400        E     MOV     A,#LOW g_mem+037H
0136 2F                ADD     A,R7
0137 F582              MOV     DPL,A
0139 E4                CLR     A
013A 3400        E     ADDC    A,#HIGH g_mem+037H
013C F583              MOV     DPH,A
013E 7402              MOV     A,#02H
0140 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1547
0141 7F00              MOV     R7,#00H
0143 7E00              MOV     R6,#00H
0145 7D00              MOV     R5,#00H
0147 7C00              MOV     R4,#00H
0149 AB00        R     MOV     R3,i
014B 7400        E     MOV     A,#LOW g_mem+037H
014D 2B                ADD     A,R3
014E F582              MOV     DPL,A
0150 E4                CLR     A
0151 3400        E     ADDC    A,#HIGH g_mem+037H
0153 F583              MOV     DPH,A
0155 E0                MOVX    A,@DPTR
0156 F9                MOV     R1,A
0157 A801              MOV     R0,AR1
0159 120000      E     LCALL   ?C?LSHL
015C AB00        R     MOV     R3,i
015E EB                MOV     A,R3
015F 25E0              ADD     A,ACC
0161 25E0              ADD     A,ACC
0163 2400        E     ADD     A,#LOW g_mem+039H
0165 F582              MOV     DPL,A
0167 E4                CLR     A
0168 3400        E     ADDC    A,#HIGH g_mem+039H
016A F583              MOV     DPH,A
016C 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1548
016F 0500        R     INC     i
0171 809D              SJMP    ?C0346
0173         ?C0347:
                                           ; SOURCE LINE # 1550
0173 7F9A              MOV     R7,#09AH
0175 7E99              MOV     R6,#099H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 193 

0177 7D99              MOV     R5,#099H
0179 7C3E              MOV     R4,#03EH
017B 900000      E     MOV     DPTR,#g_mem+067H
017E 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1551
0181 900000      E     MOV     DPTR,#g_mem+06BH
0184 7403              MOV     A,#03H
0186 F0                MOVX    @DPTR,A
0187 A3                INC     DPTR
0188 74E8              MOV     A,#0E8H
018A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1552
018B 900000      E     MOV     DPTR,#g_mem+06DH
018E E4                CLR     A
018F F0                MOVX    @DPTR,A
0190 A3                INC     DPTR
0191 744B              MOV     A,#04BH
0193 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1553
0194 900000      E     MOV     DPTR,#g_mem+066H
0197 E4                CLR     A
0198 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1554
0199 900000      E     MOV     DPTR,#g_mem+06FH
019C E4                CLR     A
019D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1555
019E 900000      E     MOV     DPTR,#g_mem+079H
01A1 E4                CLR     A
01A2 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1556
01A3 900000      E     MOV     DPTR,#g_mem+07AH
01A6 742E              MOV     A,#02EH
01A8 F0                MOVX    @DPTR,A
01A9 A3                INC     DPTR
01AA 74E0              MOV     A,#0E0H
01AC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1557
01AD 900000      E     MOV     DPTR,#g_mem+078H
01B0 7402              MOV     A,#02H
01B2 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1559
01B3 7F00              MOV     R7,#00H
01B5 7E00              MOV     R6,#00H
01B7 7D00              MOV     R5,#00H
01B9 7C00              MOV     R4,#00H
01BB 900000      E     MOV     DPTR,#g_mem+05EH
01BE 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1560
01C1 7F00              MOV     R7,#00H
01C3 7E00              MOV     R6,#00H
01C5 7D00              MOV     R5,#00H
01C7 7C00              MOV     R4,#00H
01C9 900000      E     MOV     DPTR,#g_mem+062H
01CC 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1562
01CF 7FD0              MOV     R7,#0D0H
01D1 7E20              MOV     R6,#020H
01D3 7D00              MOV     R5,#00H
01D5 7C00              MOV     R4,#00H
01D7 900000      E     MOV     DPTR,#g_mem+070H
01DA 120000      E     LCALL   ?C?LSTXDATA
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 194 

                                           ; SOURCE LINE # 1563
01DD 7F38              MOV     R7,#038H
01DF 7E4A              MOV     R6,#04AH
01E1 7D00              MOV     R5,#00H
01E3 7C00              MOV     R4,#00H
01E5 900000      E     MOV     DPTR,#g_mem+074H
01E8 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1565
01EB 900000      E     MOV     DPTR,#g_mem+080H
01EE 7401              MOV     A,#01H
01F0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1569
01F1 900000      E     MOV     DPTR,#g_mem+05AH
01F4 E4                CLR     A
01F5 F0                MOVX    @DPTR,A
01F6 A3                INC     DPTR
01F7 E4                CLR     A
01F8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1571
01F9 900000      E     MOV     DPTR,#g_mem+032H
01FC 7405              MOV     A,#05H
01FE F0                MOVX    @DPTR,A
01FF A3                INC     DPTR
0200 74DC              MOV     A,#0DCH
0202 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1574
0203 900000      E     MOV     DPTR,#g_mem
0206 7401              MOV     A,#01H
0208 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1576
0209 7F58              MOV     R7,#058H
020B 7E1B              MOV     R6,#01BH
020D 7D00              MOV     R5,#00H
020F 7C00              MOV     R4,#00H
0211 900000      E     MOV     DPTR,#g_mem+07CH
0214 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1579
0217 7F00              MOV     R7,#00H
0219 7E00              MOV     R6,#00H
021B 120000      R     LCALL   _memStore
021E EF                MOV     A,R7
021F 600E              JZ      ?C0349
0221 7F08              MOV     R7,#08H
0223 7E00              MOV     R6,#00H
0225 120000      R     LCALL   _memStore
0228 EF                MOV     A,R7
0229 6004              JZ      ?C0349
022B 7F01              MOV     R7,#01H
022D 8002              SJMP    ?C0350
022F         ?C0349:
022F 7F00              MOV     R7,#00H
0231         ?C0350:
                                           ; SOURCE LINE # 1580
0231         ?C0351:
0231 22                RET     
             ; FUNCTION memInit (END)

             ; FUNCTION cmd_get_measurements (BEGIN)
                                           ; SOURCE LINE # 1589
                                           ; SOURCE LINE # 1607
0000 900000      R     MOV     DPTR,#packet_data
0003 7484              MOV     A,#084H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 195 

0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1609
0006 750002      R     MOV     index,#02H
0009         ?C0352:
0009 AF00        R     MOV     R7,index
000B 1500        R     DEC     index
000D EF                MOV     A,R7
000E 603C              JZ      ?C0354
                                           ; SOURCE LINE # 1610
0010 AF00        R     MOV     R7,index
0012 EF                MOV     A,R7
0013 25E0              ADD     A,ACC
0015 25E0              ADD     A,ACC
0017 2400        E     ADD     A,#LOW g_measOld
0019 F582              MOV     DPL,A
001B E4                CLR     A
001C 3400        E     ADDC    A,#HIGH g_measOld
001E F583              MOV     DPH,A
0020 120000      E     LCALL   ?C?LLDXDATA
0023 AB00        R     MOV     R3,index
0025 7400        E     MOV     A,#LOW g_mem+037H
0027 2B                ADD     A,R3
0028 F582              MOV     DPL,A
002A E4                CLR     A
002B 3400        E     ADDC    A,#HIGH g_mem+037H
002D F583              MOV     DPH,A
002F E0                MOVX    A,@DPTR
0030 F9                MOV     R1,A
0031 A801              MOV     R0,AR1
0033 120000      E     LCALL   ?C?SLSHR
0036 E500        R     MOV     A,index
0038 25E0              ADD     A,ACC
003A FD                MOV     R5,A
003B 7400        R     MOV     A,#LOW packet_data+01H
003D 2D                ADD     A,R5
003E F582              MOV     DPL,A
0040 E4                CLR     A
0041 3400        R     ADDC    A,#HIGH packet_data+01H
0043 F583              MOV     DPH,A
0045 EE                MOV     A,R6
0046 F0                MOVX    @DPTR,A
0047 A3                INC     DPTR
0048 EF                MOV     A,R7
0049 F0                MOVX    @DPTR,A
004A 80BD              SJMP    ?C0352
                                           ; SOURCE LINE # 1623
004C         ?C0354:
004C 22                RET     
             ; FUNCTION cmd_get_measurements (END)

             ; FUNCTION cmd_get_inputs (BEGIN)
                                           ; SOURCE LINE # 1625
                                           ; SOURCE LINE # 1633
0000 900000      R     MOV     DPTR,#packet_data
0003 7483              MOV     A,#083H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1635
0006 900000      E     MOV     DPTR,#g_refOld
0009 120000      E     LCALL   ?C?LLDXDATA
000C 900000      E     MOV     DPTR,#g_mem+037H
000F E0                MOVX    A,@DPTR
0010 F9                MOV     R1,A
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 196 

0011 A801              MOV     R0,AR1
0013 120000      E     LCALL   ?C?SLSHR
0016 900000      R     MOV     DPTR,#packet_data+01H
0019 EE                MOV     A,R6
001A F0                MOVX    @DPTR,A
001B A3                INC     DPTR
001C EF                MOV     A,R7
001D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1636
001E 900000      E     MOV     DPTR,#g_refOld+04H
0021 120000      E     LCALL   ?C?LLDXDATA
0024 900000      E     MOV     DPTR,#g_mem+038H
0027 E0                MOVX    A,@DPTR
0028 F9                MOV     R1,A
0029 A801              MOV     R0,AR1
002B 120000      E     LCALL   ?C?SLSHR
002E 900000      R     MOV     DPTR,#packet_data+03H
0031 EE                MOV     A,R6
0032 F0                MOVX    @DPTR,A
0033 A3                INC     DPTR
0034 EF                MOV     A,R7
0035 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1640
0036 7B01              MOV     R3,#01H
0038 7A00        R     MOV     R2,#HIGH packet_data
003A 7900        R     MOV     R1,#LOW packet_data
003C 7D05              MOV     R5,#05H
003E 120000      E     LCALL   _LCRChecksum
0041 900000      R     MOV     DPTR,#packet_data+05H
0044 EF                MOV     A,R7
0045 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1642
0046 7B01              MOV     R3,#01H
0048 7A00        R     MOV     R2,#HIGH packet_data
004A 7900        R     MOV     R1,#LOW packet_data
004C 900000      R     MOV     DPTR,#?_commWrite?BYTE+05H
004F E4                CLR     A
0050 F0                MOVX    @DPTR,A
0051 7D06              MOV     R5,#06H
0053 7C00              MOV     R4,#00H
0055 120000      R     LCALL   _commWrite
                                           ; SOURCE LINE # 1644
0058 22                RET     
             ; FUNCTION cmd_get_inputs (END)

             ; FUNCTION cmd_get_currents (BEGIN)
                                           ; SOURCE LINE # 1646
                                           ; SOURCE LINE # 1654
0000 900000      R     MOV     DPTR,#packet_data
0003 7485              MOV     A,#085H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1656
0006 900000      E     MOV     DPTR,#g_measOld+08H
0009 E0                MOVX    A,@DPTR
000A FE                MOV     R6,A
000B A3                INC     DPTR
000C E0                MOVX    A,@DPTR
000D FF                MOV     R7,A
000E 900000      R     MOV     DPTR,#packet_data+01H
0011 EE                MOV     A,R6
0012 F0                MOVX    @DPTR,A
0013 A3                INC     DPTR
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 197 

0014 EF                MOV     A,R7
0015 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1657
0016 900000      E     MOV     DPTR,#g_measOld+0AH
0019 E0                MOVX    A,@DPTR
001A FE                MOV     R6,A
001B A3                INC     DPTR
001C E0                MOVX    A,@DPTR
001D FF                MOV     R7,A
001E 900000      R     MOV     DPTR,#packet_data+03H
0021 EE                MOV     A,R6
0022 F0                MOVX    @DPTR,A
0023 A3                INC     DPTR
0024 EF                MOV     A,R7
0025 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1661
0026 7B01              MOV     R3,#01H
0028 7A00        R     MOV     R2,#HIGH packet_data
002A 7900        R     MOV     R1,#LOW packet_data
002C 7D05              MOV     R5,#05H
002E 120000      E     LCALL   _LCRChecksum
0031 900000      R     MOV     DPTR,#packet_data+05H
0034 EF                MOV     A,R7
0035 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1663
0036 7B01              MOV     R3,#01H
0038 7A00        R     MOV     R2,#HIGH packet_data
003A 7900        R     MOV     R1,#LOW packet_data
003C 900000      R     MOV     DPTR,#?_commWrite?BYTE+05H
003F E4                CLR     A
0040 F0                MOVX    @DPTR,A
0041 7D06              MOV     R5,#06H
0043 7C00              MOV     R4,#00H
0045 120000      R     LCALL   _commWrite
                                           ; SOURCE LINE # 1664
0048 22                RET     
             ; FUNCTION cmd_get_currents (END)

             ; FUNCTION cmd_get_curr_and_meas (BEGIN)
                                           ; SOURCE LINE # 1666
                                           ; SOURCE LINE # 1683
0000 900000      R     MOV     DPTR,#packet_data
0003 7486              MOV     A,#086H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1686
0006 900000      E     MOV     DPTR,#g_measOld+08H
0009 E0                MOVX    A,@DPTR
000A FE                MOV     R6,A
000B A3                INC     DPTR
000C E0                MOVX    A,@DPTR
000D FF                MOV     R7,A
000E 900000      R     MOV     DPTR,#packet_data+01H
0011 EE                MOV     A,R6
0012 F0                MOVX    @DPTR,A
0013 A3                INC     DPTR
0014 EF                MOV     A,R7
0015 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1687
0016 900000      E     MOV     DPTR,#g_measOld+0AH
0019 E0                MOVX    A,@DPTR
001A FE                MOV     R6,A
001B A3                INC     DPTR
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 198 

001C E0                MOVX    A,@DPTR
001D FF                MOV     R7,A
001E 900000      R     MOV     DPTR,#packet_data+03H
0021 EE                MOV     A,R6
0022 F0                MOVX    @DPTR,A
0023 A3                INC     DPTR
0024 EF                MOV     A,R7
0025 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1690
0026 750002      R     MOV     index,#02H
0029         ?C0357:
0029 AF00        R     MOV     R7,index
002B 1500        R     DEC     index
002D EF                MOV     A,R7
002E 603E              JZ      ?C0359
                                           ; SOURCE LINE # 1691
0030 AF00        R     MOV     R7,index
0032 EF                MOV     A,R7
0033 25E0              ADD     A,ACC
0035 25E0              ADD     A,ACC
0037 2400        E     ADD     A,#LOW g_measOld
0039 F582              MOV     DPL,A
003B E4                CLR     A
003C 3400        E     ADDC    A,#HIGH g_measOld
003E F583              MOV     DPH,A
0040 120000      E     LCALL   ?C?LLDXDATA
0043 AB00        R     MOV     R3,index
0045 7400        E     MOV     A,#LOW g_mem+037H
0047 2B                ADD     A,R3
0048 F582              MOV     DPL,A
004A E4                CLR     A
004B 3400        E     ADDC    A,#HIGH g_mem+037H
004D F583              MOV     DPH,A
004F E0                MOVX    A,@DPTR
0050 F9                MOV     R1,A
0051 A801              MOV     R0,AR1
0053 120000      E     LCALL   ?C?SLSHR
0056 E500        R     MOV     A,index
0058 25E0              ADD     A,ACC
005A 25E0              ADD     A,ACC
005C FD                MOV     R5,A
005D 7400        R     MOV     A,#LOW packet_data+05H
005F 2D                ADD     A,R5
0060 F582              MOV     DPL,A
0062 E4                CLR     A
0063 3400        R     ADDC    A,#HIGH packet_data+05H
0065 F583              MOV     DPH,A
0067 EE                MOV     A,R6
0068 F0                MOVX    @DPTR,A
0069 A3                INC     DPTR
006A EF                MOV     A,R7
006B F0                MOVX    @DPTR,A
006C 80BB              SJMP    ?C0357
                                           ; SOURCE LINE # 1703
006E         ?C0359:
006E 22                RET     
             ; FUNCTION cmd_get_curr_and_meas (END)

             ; FUNCTION cmd_set_inputs (BEGIN)
                                           ; SOURCE LINE # 1705
                                           ; SOURCE LINE # 1708
0000 900000      E     MOV     DPTR,#g_rx+01H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 199 

0003 E0                MOVX    A,@DPTR
0004 FE                MOV     R6,A
0005 A3                INC     DPTR
0006 E0                MOVX    A,@DPTR
0007 FF                MOV     R7,A
0008 EE                MOV     A,R6
0009 33                RLC     A
000A 95E0              SUBB    A,ACC
000C FD                MOV     R5,A
000D FC                MOV     R4,A
000E 900000      E     MOV     DPTR,#g_refNew
0011 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1709
0014 900000      E     MOV     DPTR,#g_refNew
0017 120000      E     LCALL   ?C?LLDXDATA
001A 900000      E     MOV     DPTR,#g_mem+037H
001D E0                MOVX    A,@DPTR
001E F9                MOV     R1,A
001F A801              MOV     R0,AR1
0021 120000      E     LCALL   ?C?LSHL
0024 900000      E     MOV     DPTR,#g_refNew
0027 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1711
002A 900000      E     MOV     DPTR,#g_rx+03H
002D E0                MOVX    A,@DPTR
002E FE                MOV     R6,A
002F A3                INC     DPTR
0030 E0                MOVX    A,@DPTR
0031 FF                MOV     R7,A
0032 EE                MOV     A,R6
0033 33                RLC     A
0034 95E0              SUBB    A,ACC
0036 FD                MOV     R5,A
0037 FC                MOV     R4,A
0038 900000      E     MOV     DPTR,#g_refNew+04H
003B 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1712
003E 900000      E     MOV     DPTR,#g_refNew+04H
0041 120000      E     LCALL   ?C?LLDXDATA
0044 900000      E     MOV     DPTR,#g_mem+038H
0047 E0                MOVX    A,@DPTR
0048 F9                MOV     R1,A
0049 A801              MOV     R0,AR1
004B 120000      E     LCALL   ?C?LSHL
004E 900000      E     MOV     DPTR,#g_refNew+04H
0051 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1715
0054 900000      E     MOV     DPTR,#c_mem+049H
0057 E0                MOVX    A,@DPTR
0058 FF                MOV     R7,A
0059 EF                MOV     A,R7
005A 6078              JZ      ?C0365
                                           ; SOURCE LINE # 1717
005C 900000      E     MOV     DPTR,#c_mem+04AH
005F 120000      E     LCALL   ?C?LLDXDATA
0062 900000      E     MOV     DPTR,#g_refNew
0065 120000      E     LCALL   ?C?LLDXDATA0
0068 C3                CLR     C
0069 120000      E     LCALL   ?C?SLCMP
006C 500C              JNC     ?C0361
                                           ; SOURCE LINE # 1718
006E 900000      E     MOV     DPTR,#c_mem+04AH
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 200 

0071 120000      E     LCALL   ?C?LLDXDATA
0074 900000      E     MOV     DPTR,#g_refNew
0077 120000      E     LCALL   ?C?LSTXDATA
007A         ?C0361:
                                           ; SOURCE LINE # 1719
007A 900000      E     MOV     DPTR,#c_mem+04EH
007D 120000      E     LCALL   ?C?LLDXDATA
0080 900000      E     MOV     DPTR,#g_refNew+04H
0083 120000      E     LCALL   ?C?LLDXDATA0
0086 C3                CLR     C
0087 120000      E     LCALL   ?C?SLCMP
008A 500C              JNC     ?C0362
                                           ; SOURCE LINE # 1720
008C 900000      E     MOV     DPTR,#c_mem+04EH
008F 120000      E     LCALL   ?C?LLDXDATA
0092 900000      E     MOV     DPTR,#g_refNew+04H
0095 120000      E     LCALL   ?C?LSTXDATA
0098         ?C0362:
                                           ; SOURCE LINE # 1722
0098 900000      E     MOV     DPTR,#c_mem+052H
009B 120000      E     LCALL   ?C?LLDXDATA
009E 900000      E     MOV     DPTR,#g_refNew
00A1 120000      E     LCALL   ?C?LLDXDATA0
00A4 D3                SETB    C
00A5 120000      E     LCALL   ?C?SLCMP
00A8 400C              JC      ?C0363
                                           ; SOURCE LINE # 1723
00AA 900000      E     MOV     DPTR,#c_mem+052H
00AD 120000      E     LCALL   ?C?LLDXDATA
00B0 900000      E     MOV     DPTR,#g_refNew
00B3 120000      E     LCALL   ?C?LSTXDATA
00B6         ?C0363:
                                           ; SOURCE LINE # 1724
00B6 900000      E     MOV     DPTR,#c_mem+056H
00B9 120000      E     LCALL   ?C?LLDXDATA
00BC 900000      E     MOV     DPTR,#g_refNew+04H
00BF 120000      E     LCALL   ?C?LLDXDATA0
00C2 D3                SETB    C
00C3 120000      E     LCALL   ?C?SLCMP
00C6 400C              JC      ?C0365
                                           ; SOURCE LINE # 1725
00C8 900000      E     MOV     DPTR,#c_mem+056H
00CB 120000      E     LCALL   ?C?LLDXDATA
00CE 900000      E     MOV     DPTR,#g_refNew+04H
00D1 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1726
                                           ; SOURCE LINE # 1727
00D4         ?C0365:
00D4 22                RET     
             ; FUNCTION cmd_set_inputs (END)

             ; FUNCTION cmd_set_pos_stiff (BEGIN)
                                           ; SOURCE LINE # 1729
                                           ; SOURCE LINE # 1735
0000 900000      E     MOV     DPTR,#g_rx+01H
0003 E0                MOVX    A,@DPTR
0004 FE                MOV     R6,A
0005 A3                INC     DPTR
0006 E0                MOVX    A,@DPTR
0007 FF                MOV     R7,A
0008 EE                MOV     A,R6
0009 33                RLC     A
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 201 

000A 95E0              SUBB    A,ACC
000C FD                MOV     R5,A
000D FC                MOV     R4,A
000E 8F00        R     MOV     pos+03H,R7
0010 8E00        R     MOV     pos+02H,R6
0012 8D00        R     MOV     pos+01H,R5
0014 8C00        R     MOV     pos,R4
                                           ; SOURCE LINE # 1736
0016 900000      E     MOV     DPTR,#g_rx+03H
0019 E0                MOVX    A,@DPTR
001A FE                MOV     R6,A
001B A3                INC     DPTR
001C E0                MOVX    A,@DPTR
001D FF                MOV     R7,A
001E EE                MOV     A,R6
001F 33                RLC     A
0020 95E0              SUBB    A,ACC
0022 FD                MOV     R5,A
0023 FC                MOV     R4,A
0024 8F00        R     MOV     stiff+03H,R7
0026 8E00        R     MOV     stiff+02H,R6
0028 8D00        R     MOV     stiff+01H,R5
002A 8C00        R     MOV     stiff,R4
                                           ; SOURCE LINE # 1739
002C AF00        R     MOV     R7,pos+03H
002E AE00        R     MOV     R6,pos+02H
0030 AD00        R     MOV     R5,pos+01H
0032 AC00        R     MOV     R4,pos
0034 900000      E     MOV     DPTR,#g_mem+037H
0037 E0                MOVX    A,@DPTR
0038 F9                MOV     R1,A
0039 A801              MOV     R0,AR1
003B 120000      E     LCALL   ?C?LSHL
003E 8F00        R     MOV     pos+03H,R7
0040 8E00        R     MOV     pos+02H,R6
0042 8D00        R     MOV     pos+01H,R5
0044 8C00        R     MOV     pos,R4
                                           ; SOURCE LINE # 1742
0046 900000      E     MOV     DPTR,#c_mem+05AH
0049 E0                MOVX    A,@DPTR
004A FE                MOV     R6,A
004B A3                INC     DPTR
004C E0                MOVX    A,@DPTR
004D FF                MOV     R7,A
004E AB07              MOV     R3,AR7
0050 AA06              MOV     R2,AR6
0052 E4                CLR     A
0053 F9                MOV     R1,A
0054 F8                MOV     R0,A
0055 900000      E     MOV     DPTR,#c_mem+052H
0058 120000      E     LCALL   ?C?LLDXDATA
005B 120000      E     LCALL   ?C?LSUB
005E AB00        R     MOV     R3,pos+03H
0060 AA00        R     MOV     R2,pos+02H
0062 A900        R     MOV     R1,pos+01H
0064 A800        R     MOV     R0,pos
0066 D3                SETB    C
0067 120000      E     LCALL   ?C?SLCMP
006A 4020              JC      ?C0366
                                           ; SOURCE LINE # 1743
006C 900000      E     MOV     DPTR,#c_mem+05AH
006F E0                MOVX    A,@DPTR
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 202 

0070 FE                MOV     R6,A
0071 A3                INC     DPTR
0072 E0                MOVX    A,@DPTR
0073 FF                MOV     R7,A
0074 AB07              MOV     R3,AR7
0076 AA06              MOV     R2,AR6
0078 E4                CLR     A
0079 F9                MOV     R1,A
007A F8                MOV     R0,A
007B 900000      E     MOV     DPTR,#c_mem+052H
007E 120000      E     LCALL   ?C?LLDXDATA
0081 120000      E     LCALL   ?C?LSUB
0084 8F00        R     MOV     pos+03H,R7
0086 8E00        R     MOV     pos+02H,R6
0088 8D00        R     MOV     pos+01H,R5
008A 8C00        R     MOV     pos,R4
008C         ?C0366:
                                           ; SOURCE LINE # 1745
008C 900000      E     MOV     DPTR,#c_mem+05AH
008F E0                MOVX    A,@DPTR
0090 FE                MOV     R6,A
0091 A3                INC     DPTR
0092 E0                MOVX    A,@DPTR
0093 FF                MOV     R7,A
0094 E4                CLR     A
0095 FC                MOV     R4,A
0096 FD                MOV     R5,A
0097 900000      E     MOV     DPTR,#c_mem+04AH
009A 120000      E     LCALL   ?C?LLDXDATA0
009D 120000      E     LCALL   ?C?LADD
00A0 AB00        R     MOV     R3,pos+03H
00A2 AA00        R     MOV     R2,pos+02H
00A4 A900        R     MOV     R1,pos+01H
00A6 A800        R     MOV     R0,pos
00A8 C3                CLR     C
00A9 120000      E     LCALL   ?C?SLCMP
00AC 501C              JNC     ?C0367
                                           ; SOURCE LINE # 1746
00AE 900000      E     MOV     DPTR,#c_mem+05AH
00B1 E0                MOVX    A,@DPTR
00B2 FE                MOV     R6,A
00B3 A3                INC     DPTR
00B4 E0                MOVX    A,@DPTR
00B5 FF                MOV     R7,A
00B6 E4                CLR     A
00B7 FC                MOV     R4,A
00B8 FD                MOV     R5,A
00B9 900000      E     MOV     DPTR,#c_mem+04AH
00BC 120000      E     LCALL   ?C?LLDXDATA0
00BF 120000      E     LCALL   ?C?LADD
00C2 8F00        R     MOV     pos+03H,R7
00C4 8E00        R     MOV     pos+02H,R6
00C6 8D00        R     MOV     pos+01H,R5
00C8 8C00        R     MOV     pos,R4
00CA         ?C0367:
                                           ; SOURCE LINE # 1751
00CA 900000      E     MOV     DPTR,#c_mem+05AH
00CD E0                MOVX    A,@DPTR
00CE FC                MOV     R4,A
00CF A3                INC     DPTR
00D0 E0                MOVX    A,@DPTR
00D1 FD                MOV     R5,A
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 203 

00D2 E4                CLR     A
00D3 120000      E     LCALL   ?C?FCASTI
00D6 7B00              MOV     R3,#00H
00D8 7A00              MOV     R2,#00H
00DA 7900              MOV     R1,#00H
00DC 7847              MOV     R0,#047H
00DE 120000      E     LCALL   ?C?FPDIV
00E1 C004              PUSH    AR4
00E3 C005              PUSH    AR5
00E5 C006              PUSH    AR6
00E7 C007              PUSH    AR7
00E9 AF00        R     MOV     R7,stiff+03H
00EB AE00        R     MOV     R6,stiff+02H
00ED AD00        R     MOV     R5,stiff+01H
00EF AC00        R     MOV     R4,stiff
00F1 EC                MOV     A,R4
00F2 120000      E     LCALL   ?C?FCASTL
00F5 A804              MOV     R0,AR4
00F7 A905              MOV     R1,AR5
00F9 AA06              MOV     R2,AR6
00FB AB07              MOV     R3,AR7
00FD D007              POP     AR7
00FF D006              POP     AR6
0101 D005              POP     AR5
0103 D004              POP     AR4
0105 120000      E     LCALL   ?C?FPMUL
0108 120000      E     LCALL   ?C?CASTF
010B 8F00        R     MOV     stiff+03H,R7
010D 8E00        R     MOV     stiff+02H,R6
010F 8D00        R     MOV     stiff+01H,R5
0111 8C00        R     MOV     stiff,R4
                                           ; SOURCE LINE # 1754
0113 E500        R     MOV     A,pos+03H
0115 2500        R     ADD     A,stiff+03H
0117 FF                MOV     R7,A
0118 E500        R     MOV     A,pos+02H
011A 3500        R     ADDC    A,stiff+02H
011C FE                MOV     R6,A
011D E500        R     MOV     A,pos+01H
011F 3500        R     ADDC    A,stiff+01H
0121 FD                MOV     R5,A
0122 E500        R     MOV     A,pos
0124 3500        R     ADDC    A,stiff
0126 FC                MOV     R4,A
0127 900000      E     MOV     DPTR,#g_refNew
012A 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1755
012D C3                CLR     C
012E E500        R     MOV     A,pos+03H
0130 9500        R     SUBB    A,stiff+03H
0132 FF                MOV     R7,A
0133 E500        R     MOV     A,pos+02H
0135 9500        R     SUBB    A,stiff+02H
0137 FE                MOV     R6,A
0138 E500        R     MOV     A,pos+01H
013A 9500        R     SUBB    A,stiff+01H
013C FD                MOV     R5,A
013D E500        R     MOV     A,pos
013F 9500        R     SUBB    A,stiff
0141 FC                MOV     R4,A
0142 900000      E     MOV     DPTR,#g_refNew+04H
0145 120000      E     LCALL   ?C?LSTXDATA
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 204 

                                           ; SOURCE LINE # 1756
0148 22                RET     
             ; FUNCTION cmd_set_pos_stiff (END)

             ; FUNCTION cmd_get_velocities (BEGIN)
                                           ; SOURCE LINE # 1758
                                           ; SOURCE LINE # 1776
0000 900000      R     MOV     DPTR,#packet_data
0003 7489              MOV     A,#089H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1778
0006 750002      R     MOV     index,#02H
0009         ?C0369:
0009 AF00        R     MOV     R7,index
000B 1500        R     DEC     index
000D EF                MOV     A,R7
000E 602B              JZ      ?C0371
                                           ; SOURCE LINE # 1779
0010 AF00        R     MOV     R7,index
0012 EF                MOV     A,R7
0013 25E0              ADD     A,ACC
0015 2400        E     ADD     A,#LOW g_measOld+0EH
0017 F582              MOV     DPL,A
0019 E4                CLR     A
001A 3400        E     ADDC    A,#HIGH g_measOld+0EH
001C F583              MOV     DPH,A
001E E0                MOVX    A,@DPTR
001F FE                MOV     R6,A
0020 A3                INC     DPTR
0021 E0                MOVX    A,@DPTR
0022 FF                MOV     R7,A
0023 E500        R     MOV     A,index
0025 25E0              ADD     A,ACC
0027 25E0              ADD     A,ACC
0029 FD                MOV     R5,A
002A 7400        R     MOV     A,#LOW packet_data+01H
002C 2D                ADD     A,R5
002D F582              MOV     DPL,A
002F E4                CLR     A
0030 3400        R     ADDC    A,#HIGH packet_data+01H
0032 F583              MOV     DPH,A
0034 EE                MOV     A,R6
0035 F0                MOVX    @DPTR,A
0036 A3                INC     DPTR
0037 EF                MOV     A,R7
0038 F0                MOVX    @DPTR,A
0039 80CE              SJMP    ?C0369
                                           ; SOURCE LINE # 1791
003B         ?C0371:
003B 22                RET     
             ; FUNCTION cmd_get_velocities (END)

             ; FUNCTION cmd_activate (BEGIN)
                                           ; SOURCE LINE # 1793
                                           ; SOURCE LINE # 1796
0000 900000      E     MOV     DPTR,#g_rx+01H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 900000      E     MOV     DPTR,#g_refNew+08H
0008 EF                MOV     A,R7
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1799
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 205 

000A 900000      E     MOV     DPTR,#g_mem+036H
000D E0                MOVX    A,@DPTR
000E FF                MOV     R7,A
000F EF                MOV     A,R7
0010 6009              JZ      ?C0373
0012 900000      E     MOV     DPTR,#g_mem+036H
0015 E0                MOVX    A,@DPTR
0016 FF                MOV     R7,A
0017 EF                MOV     A,R7
0018 B40318            CJNE    A,#03H,?C0372
001B         ?C0373:
                                           ; SOURCE LINE # 1800
                                           ; SOURCE LINE # 1801
001B 900000      E     MOV     DPTR,#g_meas
001E 120000      E     LCALL   ?C?LLDXDATA
0021 900000      E     MOV     DPTR,#g_refNew
0024 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1802
0027 900000      E     MOV     DPTR,#g_meas+04H
002A 120000      E     LCALL   ?C?LLDXDATA
002D 900000      E     MOV     DPTR,#g_refNew+04H
0030 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1803
0033         ?C0372:
                                           ; SOURCE LINE # 1812
0033 900000      E     MOV     DPTR,#g_refNew+08H
0036 E0                MOVX    A,@DPTR
0037 FF                MOV     R7,A
0038 120000      E     LCALL   _MOTOR_ON_OFF_Write
                                           ; SOURCE LINE # 1814
003B 22                RET     
             ; FUNCTION cmd_activate (END)

             ; FUNCTION cmd_set_watchdog (BEGIN)
                                           ; SOURCE LINE # 1816
                                           ; SOURCE LINE # 1818
0000 900000      E     MOV     DPTR,#g_rx+01H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 D3                SETB    C
0007 9400              SUBB    A,#00H
0009 500B              JNC     ?C0375
                                           ; SOURCE LINE # 1820
000B 7F01              MOV     R7,#01H
000D 120000      E     LCALL   _WATCHDOG_ENABLER_Write
                                           ; SOURCE LINE # 1821
0010 900000      E     MOV     DPTR,#g_mem+05DH
0013 E4                CLR     A
0014 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1822
0015 22                RET     
0016         ?C0375:
                                           ; SOURCE LINE # 1823
                                           ; SOURCE LINE # 1825
0016 900000      E     MOV     DPTR,#g_rx+01H
0019 E0                MOVX    A,@DPTR
001A FF                MOV     R7,A
001B EF                MOV     A,R7
001C D3                SETB    C
001D 94FA              SUBB    A,#0FAH
001F 4006              JC      ?C0377
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 206 

                                           ; SOURCE LINE # 1826
0021 900000      E     MOV     DPTR,#g_rx+01H
0024 74FA              MOV     A,#0FAH
0026 F0                MOVX    @DPTR,A
0027         ?C0377:
                                           ; SOURCE LINE # 1831
0027 900000      E     MOV     DPTR,#g_rx+01H
002A E0                MOVX    A,@DPTR
002B FF                MOV     R7,A
002C 7E00              MOV     R6,#00H
002E 7C01              MOV     R4,#01H
0030 7DF4              MOV     R5,#0F4H
0032 120000      E     LCALL   ?C?LIMUL
0035 780A              MOV     R0,#0AH
0037 120000      E     LCALL   ?C?ULSHR
003A 900000      E     MOV     DPTR,#g_mem+05DH
003D EF                MOV     A,R7
003E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1832
003F 900000      E     MOV     DPTR,#g_mem+05DH
0042 E0                MOVX    A,@DPTR
0043 FF                MOV     R7,A
0044 120000      E     LCALL   _WATCHDOG_COUNTER_WritePeriod
                                           ; SOURCE LINE # 1833
0047 7F00              MOV     R7,#00H
0049 120000      E     LCALL   _WATCHDOG_ENABLER_Write
                                           ; SOURCE LINE # 1834
                                           ; SOURCE LINE # 1835
004C         ?C0378:
004C 22                RET     
             ; FUNCTION cmd_set_watchdog (END)

             ; FUNCTION cmd_get_activate (BEGIN)
                                           ; SOURCE LINE # 1837
                                           ; SOURCE LINE # 1842
0000 900000      R     MOV     DPTR,#packet_data
0003 7481              MOV     A,#081H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1845
0006 900000      E     MOV     DPTR,#g_ref+08H
0009 E0                MOVX    A,@DPTR
000A FF                MOV     R7,A
000B 900000      R     MOV     DPTR,#packet_data+01H
000E EF                MOV     A,R7
000F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1848
0010 7B01              MOV     R3,#01H
0012 7A00        R     MOV     R2,#HIGH packet_data
0014 7900        R     MOV     R1,#LOW packet_data
0016 7D02              MOV     R5,#02H
0018 120000      E     LCALL   _LCRChecksum
001B 900000      R     MOV     DPTR,#packet_data+02H
001E EF                MOV     A,R7
001F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1851
0020 7B01              MOV     R3,#01H
0022 7A00        R     MOV     R2,#HIGH packet_data
0024 7900        R     MOV     R1,#LOW packet_data
0026 900000      R     MOV     DPTR,#?_commWrite?BYTE+05H
0029 E4                CLR     A
002A F0                MOVX    @DPTR,A
002B 7D03              MOV     R5,#03H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 207 

002D 7C00              MOV     R4,#00H
002F 120000      R     LCALL   _commWrite
                                           ; SOURCE LINE # 1853
0032 22                RET     
             ; FUNCTION cmd_get_activate (END)

             ; FUNCTION cmd_ping (BEGIN)
                                           ; SOURCE LINE # 1855
                                           ; SOURCE LINE # 1860
0000 900000      R     MOV     DPTR,#packet_data
0003 E4                CLR     A
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1863
0005 900000      R     MOV     DPTR,#packet_data+01H
0008 E4                CLR     A
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1866
000A 7B01              MOV     R3,#01H
000C 7A00        R     MOV     R2,#HIGH packet_data
000E 7900        R     MOV     R1,#LOW packet_data
0010 900000      R     MOV     DPTR,#?_commWrite?BYTE+05H
0013 E4                CLR     A
0014 F0                MOVX    @DPTR,A
0015 7D02              MOV     R5,#02H
0017 7C00              MOV     R4,#00H
0019 120000      R     LCALL   _commWrite
                                           ; SOURCE LINE # 1867
001C 22                RET     
             ; FUNCTION cmd_ping (END)

             ; FUNCTION cmd_store_params (BEGIN)
                                           ; SOURCE LINE # 1869
                                           ; SOURCE LINE # 1871
0000 750002      R     MOV     packet_lenght,#02H
                                           ; SOURCE LINE # 1876
0003 900000      E     MOV     DPTR,#c_mem+035H
0006 E0                MOVX    A,@DPTR
0007 FF                MOV     R7,A
0008 EF                MOV     A,R7
0009 6003              JZ      $ + 5H
000B 020000      R     LJMP    ?C0381
                                           ; SOURCE LINE # 1878
000E 900000      E     MOV     DPTR,#g_mem+041H
0011 120000      E     LCALL   ?C?LLDXDATA
0014 900000      E     MOV     DPTR,#c_mem+041H
0017 120000      E     LCALL   ?C?LLDXDATA0
001A 120000      E     LCALL   ?C?FPCMP3
001D 6038              JZ      ?C0382
                                           ; SOURCE LINE # 1880
001F 900000      E     MOV     DPTR,#g_refNew
0022 120000      E     LCALL   ?C?LLDXDATA
0025 EC                MOV     A,R4
0026 120000      E     LCALL   ?C?FCASTL
0029 900000      E     MOV     DPTR,#c_mem+041H
002C 120000      E     LCALL   ?C?LLDXDATA0
002F 120000      E     LCALL   ?C?FPDIV
0032 120000      E     LCALL   ?C?CASTF
0035 900000      E     MOV     DPTR,#g_refNew
0038 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1882
003B 900000      E     MOV     DPTR,#g_refNew
003E 120000      E     LCALL   ?C?LLDXDATA
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 208 

0041 EC                MOV     A,R4
0042 120000      E     LCALL   ?C?FCASTL
0045 900000      E     MOV     DPTR,#g_mem+041H
0048 120000      E     LCALL   ?C?LLDXDATA0
004B 120000      E     LCALL   ?C?FPMUL
004E 120000      E     LCALL   ?C?CASTF
0051 900000      E     MOV     DPTR,#g_refNew
0054 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1883
0057         ?C0382:
                                           ; SOURCE LINE # 1885
0057 900000      E     MOV     DPTR,#g_mem+045H
005A 120000      E     LCALL   ?C?LLDXDATA
005D 900000      E     MOV     DPTR,#c_mem+045H
0060 120000      E     LCALL   ?C?LLDXDATA0
0063 120000      E     LCALL   ?C?FPCMP3
0066 6038              JZ      ?C0383
                                           ; SOURCE LINE # 1887
0068 900000      E     MOV     DPTR,#g_refNew+04H
006B 120000      E     LCALL   ?C?LLDXDATA
006E EC                MOV     A,R4
006F 120000      E     LCALL   ?C?FCASTL
0072 900000      E     MOV     DPTR,#c_mem+045H
0075 120000      E     LCALL   ?C?LLDXDATA0
0078 120000      E     LCALL   ?C?FPDIV
007B 120000      E     LCALL   ?C?CASTF
007E 900000      E     MOV     DPTR,#g_refNew+04H
0081 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1889
0084 900000      E     MOV     DPTR,#g_refNew+04H
0087 120000      E     LCALL   ?C?LLDXDATA
008A EC                MOV     A,R4
008B 120000      E     LCALL   ?C?FCASTL
008E 900000      E     MOV     DPTR,#g_mem+045H
0091 120000      E     LCALL   ?C?LLDXDATA0
0094 120000      E     LCALL   ?C?FPMUL
0097 120000      E     LCALL   ?C?CASTF
009A 900000      E     MOV     DPTR,#g_refNew+04H
009D 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1890
00A0         ?C0383:
                                           ; SOURCE LINE # 1892
00A0 900000      E     MOV     DPTR,#g_mem+039H
00A3 120000      E     LCALL   ?C?LLDXDATA
00A6 900000      E     MOV     DPTR,#c_mem+039H
00A9 120000      E     LCALL   ?C?LLDXDATA0
00AC C3                CLR     C
00AD 120000      E     LCALL   ?C?SLCMP
00B0 6036              JZ      ?C0384
                                           ; SOURCE LINE # 1893
00B2 900000      E     MOV     DPTR,#g_refNew
00B5 120000      E     LCALL   ?C?LLDXDATA
00B8 C004              PUSH    AR4
00BA C005              PUSH    AR5
00BC C006              PUSH    AR6
00BE C007              PUSH    AR7
00C0 900000      E     MOV     DPTR,#c_mem+039H
00C3 120000      E     LCALL   ?C?LLDXDATA0
00C6 900000      E     MOV     DPTR,#g_mem+039H
00C9 120000      E     LCALL   ?C?LLDXDATA
00CC 120000      E     LCALL   ?C?LSUB
00CF A804              MOV     R0,AR4
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 209 

00D1 A905              MOV     R1,AR5
00D3 AA06              MOV     R2,AR6
00D5 AB07              MOV     R3,AR7
00D7 D007              POP     AR7
00D9 D006              POP     AR6
00DB D005              POP     AR5
00DD D004              POP     AR4
00DF 120000      E     LCALL   ?C?LADD
00E2 900000      E     MOV     DPTR,#g_refNew
00E5 120000      E     LCALL   ?C?LSTXDATA
00E8         ?C0384:
                                           ; SOURCE LINE # 1895
00E8 900000      E     MOV     DPTR,#g_mem+03DH
00EB 120000      E     LCALL   ?C?LLDXDATA
00EE 900000      E     MOV     DPTR,#c_mem+03DH
00F1 120000      E     LCALL   ?C?LLDXDATA0
00F4 C3                CLR     C
00F5 120000      E     LCALL   ?C?SLCMP
00F8 6036              JZ      ?C0385
                                           ; SOURCE LINE # 1896
00FA 900000      E     MOV     DPTR,#g_refNew+04H
00FD 120000      E     LCALL   ?C?LLDXDATA
0100 C004              PUSH    AR4
0102 C005              PUSH    AR5
0104 C006              PUSH    AR6
0106 C007              PUSH    AR7
0108 900000      E     MOV     DPTR,#c_mem+03DH
010B 120000      E     LCALL   ?C?LLDXDATA0
010E 900000      E     MOV     DPTR,#g_mem+03DH
0111 120000      E     LCALL   ?C?LLDXDATA
0114 120000      E     LCALL   ?C?LSUB
0117 A804              MOV     R0,AR4
0119 A905              MOV     R1,AR5
011B AA06              MOV     R2,AR6
011D AB07              MOV     R3,AR7
011F D007              POP     AR7
0121 D006              POP     AR6
0123 D005              POP     AR5
0125 D004              POP     AR4
0127 120000      E     LCALL   ?C?LADD
012A 900000      E     MOV     DPTR,#g_refNew+04H
012D 120000      E     LCALL   ?C?LSTXDATA
0130         ?C0385:
                                           ; SOURCE LINE # 1899
0130 900000      E     MOV     DPTR,#c_mem+049H
0133 E0                MOVX    A,@DPTR
0134 FF                MOV     R7,A
0135 EF                MOV     A,R7
0136 6078              JZ      ?C0381
                                           ; SOURCE LINE # 1900
0138 900000      E     MOV     DPTR,#c_mem+04AH
013B 120000      E     LCALL   ?C?LLDXDATA
013E 900000      E     MOV     DPTR,#g_refNew
0141 120000      E     LCALL   ?C?LLDXDATA0
0144 C3                CLR     C
0145 120000      E     LCALL   ?C?SLCMP
0148 500C              JNC     ?C0387
014A 900000      E     MOV     DPTR,#c_mem+04AH
014D 120000      E     LCALL   ?C?LLDXDATA
0150 900000      E     MOV     DPTR,#g_refNew
0153 120000      E     LCALL   ?C?LSTXDATA
0156         ?C0387:
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 210 

                                           ; SOURCE LINE # 1901
0156 900000      E     MOV     DPTR,#c_mem+04EH
0159 120000      E     LCALL   ?C?LLDXDATA
015C 900000      E     MOV     DPTR,#g_refNew+04H
015F 120000      E     LCALL   ?C?LLDXDATA0
0162 C3                CLR     C
0163 120000      E     LCALL   ?C?SLCMP
0166 500C              JNC     ?C0388
0168 900000      E     MOV     DPTR,#c_mem+04EH
016B 120000      E     LCALL   ?C?LLDXDATA
016E 900000      E     MOV     DPTR,#g_refNew+04H
0171 120000      E     LCALL   ?C?LSTXDATA
0174         ?C0388:
                                           ; SOURCE LINE # 1903
0174 900000      E     MOV     DPTR,#c_mem+052H
0177 120000      E     LCALL   ?C?LLDXDATA
017A 900000      E     MOV     DPTR,#g_refNew
017D 120000      E     LCALL   ?C?LLDXDATA0
0180 D3                SETB    C
0181 120000      E     LCALL   ?C?SLCMP
0184 400C              JC      ?C0389
0186 900000      E     MOV     DPTR,#c_mem+052H
0189 120000      E     LCALL   ?C?LLDXDATA
018C 900000      E     MOV     DPTR,#g_refNew
018F 120000      E     LCALL   ?C?LSTXDATA
0192         ?C0389:
                                           ; SOURCE LINE # 1904
0192 900000      E     MOV     DPTR,#c_mem+056H
0195 120000      E     LCALL   ?C?LLDXDATA
0198 900000      E     MOV     DPTR,#g_refNew+04H
019B 120000      E     LCALL   ?C?LLDXDATA0
019E D3                SETB    C
019F 120000      E     LCALL   ?C?SLCMP
01A2 400C              JC      ?C0381
01A4 900000      E     MOV     DPTR,#c_mem+056H
01A7 120000      E     LCALL   ?C?LLDXDATA
01AA 900000      E     MOV     DPTR,#g_refNew+04H
01AD 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1905
                                           ; SOURCE LINE # 1906
01B0         ?C0381:
                                           ; SOURCE LINE # 1909
01B0 900000      E     MOV     DPTR,#g_mem+01H
01B3 E0                MOVX    A,@DPTR
01B4 FF                MOV     R7,A
01B5 900000      E     MOV     DPTR,#c_mem+01H
01B8 E0                MOVX    A,@DPTR
01B9 FE                MOV     R6,A
01BA EE                MOV     A,R6
01BB 6F                XRL     A,R7
01BC 6049              JZ      ?C0391
                                           ; SOURCE LINE # 1910
01BE 900000      E     MOV     DPTR,#c_mem+01H
01C1 E0                MOVX    A,@DPTR
01C2 FF                MOV     R7,A
01C3 8F00        R     MOV     old_id,R7
                                           ; SOURCE LINE # 1911
01C5 7F00              MOV     R7,#00H
01C7 7E00              MOV     R6,#00H
01C9 120000      R     LCALL   _memStore
01CC EF                MOV     A,R7
01CD 601C              JZ      ?C0392
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 211 

                                           ; SOURCE LINE # 1912
01CF 750001      R     MOV     packet_data,#01H
                                           ; SOURCE LINE # 1913
01D2 750001      R     MOV     packet_data+01H,#01H
                                           ; SOURCE LINE # 1914
01D5 7B00              MOV     R3,#00H
01D7 7A00        R     MOV     R2,#HIGH packet_data
01D9 7900        R     MOV     R1,#LOW packet_data
01DB AF00        R     MOV     R7,packet_lenght
01DD EF                MOV     A,R7
01DE FD                MOV     R5,A
01DF 7C00              MOV     R4,#00H
01E1 900000      R     MOV     DPTR,#?_commWrite_old_id?BYTE+05H
01E4 E500        R     MOV     A,old_id
01E6 F0                MOVX    @DPTR,A
01E7 120000      R     LCALL   _commWrite_old_id
                                           ; SOURCE LINE # 1915
01EA 22                RET     
01EB         ?C0392:
                                           ; SOURCE LINE # 1916
                                           ; SOURCE LINE # 1917
01EB 750000      R     MOV     packet_data,#00H
                                           ; SOURCE LINE # 1918
01EE 750000      R     MOV     packet_data+01H,#00H
                                           ; SOURCE LINE # 1919
01F1 7B00              MOV     R3,#00H
01F3 7A00        R     MOV     R2,#HIGH packet_data
01F5 7900        R     MOV     R1,#LOW packet_data
01F7 AF00        R     MOV     R7,packet_lenght
01F9 EF                MOV     A,R7
01FA FD                MOV     R5,A
01FB 7C00              MOV     R4,#00H
01FD 900000      R     MOV     DPTR,#?_commWrite_old_id?BYTE+05H
0200 E500        R     MOV     A,old_id
0202 F0                MOVX    @DPTR,A
0203 120000      R     LCALL   _commWrite_old_id
                                           ; SOURCE LINE # 1920
                                           ; SOURCE LINE # 1921
0206 22                RET     
0207         ?C0391:
                                           ; SOURCE LINE # 1922
                                           ; SOURCE LINE # 1923
0207 7F00              MOV     R7,#00H
0209 7E00              MOV     R6,#00H
020B 120000      R     LCALL   _memStore
020E EF                MOV     A,R7
020F 6006              JZ      ?C0395
                                           ; SOURCE LINE # 1924
0211 7F01              MOV     R7,#01H
0213 120000      R     LCALL   _sendAcknowledgment
                                           ; SOURCE LINE # 1925
0216 22                RET     
0217         ?C0395:
                                           ; SOURCE LINE # 1926
0217 7F00              MOV     R7,#00H
0219 120000      R     LCALL   _sendAcknowledgment
                                           ; SOURCE LINE # 1927
                                           ; SOURCE LINE # 1928
                                           ; SOURCE LINE # 1929
021C         ?C0397:
021C 22                RET     
             ; FUNCTION cmd_store_params (END)
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    02/13/2018 09:39:24 PAGE 212 


             ; FUNCTION cmd_set_baudrate (BEGIN)
                                           ; SOURCE LINE # 1931
                                           ; SOURCE LINE # 1934
0000 900000      E     MOV     DPTR,#g_rx+01H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 900000      E     MOV     DPTR,#c_mem+05CH
0008 EF                MOV     A,R7
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1936
000A 900000      E     MOV     DPTR,#g_rx+01H
000D E0                MOVX    A,@DPTR
000E FF                MOV     R7,A
000F EF                MOV     A,R7
0010 120000      E     LCALL   ?C?CCASE
0013 0000        R     DW      ?C0399
0015 0D                DB      0DH
0016 0000              DW      00H
0018 0000        R     DW      ?C0400
                                           ; SOURCE LINE # 1937
001A         ?C0399:
                                           ; SOURCE LINE # 1938
001A 7D01              MOV     R5,#01H
001C 7F0C              MOV     R7,#0CH
001E 7E00              MOV     R6,#00H
0020 120000      E     LCALL   _CLOCK_UART_SetDividerRegister
                                           ; SOURCE LINE # 1939
0023 22                RET     
                                           ; SOURCE LINE # 1940
0024         ?C0400:
                                           ; SOURCE LINE # 1941
0024 7D01              MOV     R5,#01H
0026 7F02              MOV     R7,#02H
0028 7E00              MOV     R6,#00H
002A 120000      E     LCALL   _CLOCK_UART_SetDividerRegister
                                           ; SOURCE LINE # 1942
                                           ; SOURCE LINE # 1943
002D         ?C0401:
002D 22                RET     
             ; FUNCTION cmd_set_baudrate (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =  18747    ----
   CONSTANT SIZE    =   4220    ----
   XDATA SIZE       =      2    4493
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      47
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
